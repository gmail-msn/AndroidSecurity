// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: AccountProtoc.proto

package com.kindroid.security.util;

public final class AccountProtoc {
  private AccountProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Account extends
      com.google.protobuf.GeneratedMessage {
    // Use Account.newBuilder() to construct.
    private Account() {
      initFields();
    }
    private Account(boolean noInit) {}
    
    private static final Account defaultInstance;
    public static Account getDefaultInstance() {
      return defaultInstance;
    }
    
    public Account getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_Account_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_Account_fieldAccessorTable;
    }
    
    // optional int64 accountID = 1;
    public static final int ACCOUNTID_FIELD_NUMBER = 1;
    private boolean hasAccountID;
    private long accountID_ = 0L;
    public boolean hasAccountID() { return hasAccountID; }
    public long getAccountID() { return accountID_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional string password = 3;
    public static final int PASSWORD_FIELD_NUMBER = 3;
    private boolean hasPassword;
    private java.lang.String password_ = "";
    public boolean hasPassword() { return hasPassword; }
    public java.lang.String getPassword() { return password_; }
    
    // optional string email = 4;
    public static final int EMAIL_FIELD_NUMBER = 4;
    private boolean hasEmail;
    private java.lang.String email_ = "";
    public boolean hasEmail() { return hasEmail; }
    public java.lang.String getEmail() { return email_; }
    
    // optional string phone = 5;
    public static final int PHONE_FIELD_NUMBER = 5;
    private boolean hasPhone;
    private java.lang.String phone_ = "";
    public boolean hasPhone() { return hasPhone; }
    public java.lang.String getPhone() { return phone_; }
    
    // optional int64 createTime = 6;
    public static final int CREATETIME_FIELD_NUMBER = 6;
    private boolean hasCreateTime;
    private long createTime_ = 0L;
    public boolean hasCreateTime() { return hasCreateTime; }
    public long getCreateTime() { return createTime_; }
    
    // optional int32 status = 7;
    public static final int STATUS_FIELD_NUMBER = 7;
    private boolean hasStatus;
    private int status_ = 0;
    public boolean hasStatus() { return hasStatus; }
    public int getStatus() { return status_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAccountID()) {
        output.writeInt64(1, getAccountID());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasPassword()) {
        output.writeString(3, getPassword());
      }
      if (hasEmail()) {
        output.writeString(4, getEmail());
      }
      if (hasPhone()) {
        output.writeString(5, getPhone());
      }
      if (hasCreateTime()) {
        output.writeInt64(6, getCreateTime());
      }
      if (hasStatus()) {
        output.writeInt32(7, getStatus());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAccountID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, getAccountID());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getPassword());
      }
      if (hasEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getEmail());
      }
      if (hasPhone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getPhone());
      }
      if (hasCreateTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(6, getCreateTime());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.Account parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.AccountProtoc.Account prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.AccountProtoc.Account result;
      
      // Construct using com.kindroid.security.util.AccountProtoc.Account.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.AccountProtoc.Account();
        return builder;
      }
      
      protected com.kindroid.security.util.AccountProtoc.Account internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.AccountProtoc.Account();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.AccountProtoc.Account.getDescriptor();
      }
      
      public com.kindroid.security.util.AccountProtoc.Account getDefaultInstanceForType() {
        return com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.AccountProtoc.Account build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.AccountProtoc.Account buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.AccountProtoc.Account buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.AccountProtoc.Account returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.AccountProtoc.Account) {
          return mergeFrom((com.kindroid.security.util.AccountProtoc.Account)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.AccountProtoc.Account other) {
        if (other == com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance()) return this;
        if (other.hasAccountID()) {
          setAccountID(other.getAccountID());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasPassword()) {
          setPassword(other.getPassword());
        }
        if (other.hasEmail()) {
          setEmail(other.getEmail());
        }
        if (other.hasPhone()) {
          setPhone(other.getPhone());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAccountID(input.readInt64());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 26: {
              setPassword(input.readString());
              break;
            }
            case 34: {
              setEmail(input.readString());
              break;
            }
            case 42: {
              setPhone(input.readString());
              break;
            }
            case 48: {
              setCreateTime(input.readInt64());
              break;
            }
            case 56: {
              setStatus(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int64 accountID = 1;
      public boolean hasAccountID() {
        return result.hasAccountID();
      }
      public long getAccountID() {
        return result.getAccountID();
      }
      public Builder setAccountID(long value) {
        result.hasAccountID = true;
        result.accountID_ = value;
        return this;
      }
      public Builder clearAccountID() {
        result.hasAccountID = false;
        result.accountID_ = 0L;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional string password = 3;
      public boolean hasPassword() {
        return result.hasPassword();
      }
      public java.lang.String getPassword() {
        return result.getPassword();
      }
      public Builder setPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPassword = true;
        result.password_ = value;
        return this;
      }
      public Builder clearPassword() {
        result.hasPassword = false;
        result.password_ = getDefaultInstance().getPassword();
        return this;
      }
      
      // optional string email = 4;
      public boolean hasEmail() {
        return result.hasEmail();
      }
      public java.lang.String getEmail() {
        return result.getEmail();
      }
      public Builder setEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder clearEmail() {
        result.hasEmail = false;
        result.email_ = getDefaultInstance().getEmail();
        return this;
      }
      
      // optional string phone = 5;
      public boolean hasPhone() {
        return result.hasPhone();
      }
      public java.lang.String getPhone() {
        return result.getPhone();
      }
      public Builder setPhone(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPhone = true;
        result.phone_ = value;
        return this;
      }
      public Builder clearPhone() {
        result.hasPhone = false;
        result.phone_ = getDefaultInstance().getPhone();
        return this;
      }
      
      // optional int64 createTime = 6;
      public boolean hasCreateTime() {
        return result.hasCreateTime();
      }
      public long getCreateTime() {
        return result.getCreateTime();
      }
      public Builder setCreateTime(long value) {
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder clearCreateTime() {
        result.hasCreateTime = false;
        result.createTime_ = 0L;
        return this;
      }
      
      // optional int32 status = 7;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public int getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Account)
    }
    
    static {
      defaultInstance = new Account(true);
      com.kindroid.security.util.AccountProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Account)
  }
  
  public static final class AccountRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AccountRequest.newBuilder() to construct.
    private AccountRequest() {
      initFields();
    }
    private AccountRequest(boolean noInit) {}
    
    private static final AccountRequest defaultInstance;
    public static AccountRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AccountRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_AccountRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_AccountRequest_fieldAccessorTable;
    }
    
    // required .com.kindroid.security.util.RequestType requestType = 1;
    public static final int REQUESTTYPE_FIELD_NUMBER = 1;
    private boolean hasRequestType;
    private com.kindroid.security.util.CommonProtoc.RequestType requestType_;
    public boolean hasRequestType() { return hasRequestType; }
    public com.kindroid.security.util.CommonProtoc.RequestType getRequestType() { return requestType_; }
    
    // optional .com.kindroid.security.util.Account account = 2;
    public static final int ACCOUNT_FIELD_NUMBER = 2;
    private boolean hasAccount;
    private com.kindroid.security.util.AccountProtoc.Account account_;
    public boolean hasAccount() { return hasAccount; }
    public com.kindroid.security.util.AccountProtoc.Account getAccount() { return account_; }
    
    private void initFields() {
      requestType_ = com.kindroid.security.util.CommonProtoc.RequestType.READ;
      account_ = com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasRequestType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasRequestType()) {
        output.writeEnum(1, getRequestType().getNumber());
      }
      if (hasAccount()) {
        output.writeMessage(2, getAccount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasRequestType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getRequestType().getNumber());
      }
      if (hasAccount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAccount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.AccountProtoc.AccountRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.AccountProtoc.AccountRequest result;
      
      // Construct using com.kindroid.security.util.AccountProtoc.AccountRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.AccountProtoc.AccountRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.AccountProtoc.AccountRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.AccountProtoc.AccountRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.AccountProtoc.AccountRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.AccountProtoc.AccountRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.AccountProtoc.AccountRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.AccountProtoc.AccountRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.AccountProtoc.AccountRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.AccountProtoc.AccountRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.AccountProtoc.AccountRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.AccountProtoc.AccountRequest) {
          return mergeFrom((com.kindroid.security.util.AccountProtoc.AccountRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.AccountProtoc.AccountRequest other) {
        if (other == com.kindroid.security.util.AccountProtoc.AccountRequest.getDefaultInstance()) return this;
        if (other.hasRequestType()) {
          setRequestType(other.getRequestType());
        }
        if (other.hasAccount()) {
          mergeAccount(other.getAccount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.CommonProtoc.RequestType value = com.kindroid.security.util.CommonProtoc.RequestType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setRequestType(value);
              }
              break;
            }
            case 18: {
              com.kindroid.security.util.AccountProtoc.Account.Builder subBuilder = com.kindroid.security.util.AccountProtoc.Account.newBuilder();
              if (hasAccount()) {
                subBuilder.mergeFrom(getAccount());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccount(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.security.util.RequestType requestType = 1;
      public boolean hasRequestType() {
        return result.hasRequestType();
      }
      public com.kindroid.security.util.CommonProtoc.RequestType getRequestType() {
        return result.getRequestType();
      }
      public Builder setRequestType(com.kindroid.security.util.CommonProtoc.RequestType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasRequestType = true;
        result.requestType_ = value;
        return this;
      }
      public Builder clearRequestType() {
        result.hasRequestType = false;
        result.requestType_ = com.kindroid.security.util.CommonProtoc.RequestType.READ;
        return this;
      }
      
      // optional .com.kindroid.security.util.Account account = 2;
      public boolean hasAccount() {
        return result.hasAccount();
      }
      public com.kindroid.security.util.AccountProtoc.Account getAccount() {
        return result.getAccount();
      }
      public Builder setAccount(com.kindroid.security.util.AccountProtoc.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder setAccount(com.kindroid.security.util.AccountProtoc.Account.Builder builderForValue) {
        result.hasAccount = true;
        result.account_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccount(com.kindroid.security.util.AccountProtoc.Account value) {
        if (result.hasAccount() &&
            result.account_ != com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance()) {
          result.account_ =
            com.kindroid.security.util.AccountProtoc.Account.newBuilder(result.account_).mergeFrom(value).buildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder clearAccount() {
        result.hasAccount = false;
        result.account_ = com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.AccountRequest)
    }
    
    static {
      defaultInstance = new AccountRequest(true);
      com.kindroid.security.util.AccountProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.AccountRequest)
  }
  
  public static final class AccountResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use AccountResponse.newBuilder() to construct.
    private AccountResponse() {
      initFields();
    }
    private AccountResponse(boolean noInit) {}
    
    private static final AccountResponse defaultInstance;
    public static AccountResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AccountResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_AccountResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_AccountResponse_fieldAccessorTable;
    }
    
    // optional .com.kindroid.security.util.Account account = 1;
    public static final int ACCOUNT_FIELD_NUMBER = 1;
    private boolean hasAccount;
    private com.kindroid.security.util.AccountProtoc.Account account_;
    public boolean hasAccount() { return hasAccount; }
    public com.kindroid.security.util.AccountProtoc.Account getAccount() { return account_; }
    
    // optional string token = 2;
    public static final int TOKEN_FIELD_NUMBER = 2;
    private boolean hasToken;
    private java.lang.String token_ = "";
    public boolean hasToken() { return hasToken; }
    public java.lang.String getToken() { return token_; }
    
    private void initFields() {
      account_ = com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAccount()) {
        output.writeMessage(1, getAccount());
      }
      if (hasToken()) {
        output.writeString(2, getToken());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAccount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getAccount());
      }
      if (hasToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getToken());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.AccountResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.AccountProtoc.AccountResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.AccountProtoc.AccountResponse result;
      
      // Construct using com.kindroid.security.util.AccountProtoc.AccountResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.AccountProtoc.AccountResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.AccountProtoc.AccountResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.AccountProtoc.AccountResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.AccountProtoc.AccountResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.AccountProtoc.AccountResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.AccountProtoc.AccountResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.AccountProtoc.AccountResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.AccountProtoc.AccountResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.AccountProtoc.AccountResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.AccountProtoc.AccountResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.AccountProtoc.AccountResponse) {
          return mergeFrom((com.kindroid.security.util.AccountProtoc.AccountResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.AccountProtoc.AccountResponse other) {
        if (other == com.kindroid.security.util.AccountProtoc.AccountResponse.getDefaultInstance()) return this;
        if (other.hasAccount()) {
          mergeAccount(other.getAccount());
        }
        if (other.hasToken()) {
          setToken(other.getToken());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.AccountProtoc.Account.Builder subBuilder = com.kindroid.security.util.AccountProtoc.Account.newBuilder();
              if (hasAccount()) {
                subBuilder.mergeFrom(getAccount());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccount(subBuilder.buildPartial());
              break;
            }
            case 18: {
              setToken(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional .com.kindroid.security.util.Account account = 1;
      public boolean hasAccount() {
        return result.hasAccount();
      }
      public com.kindroid.security.util.AccountProtoc.Account getAccount() {
        return result.getAccount();
      }
      public Builder setAccount(com.kindroid.security.util.AccountProtoc.Account value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccount = true;
        result.account_ = value;
        return this;
      }
      public Builder setAccount(com.kindroid.security.util.AccountProtoc.Account.Builder builderForValue) {
        result.hasAccount = true;
        result.account_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccount(com.kindroid.security.util.AccountProtoc.Account value) {
        if (result.hasAccount() &&
            result.account_ != com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance()) {
          result.account_ =
            com.kindroid.security.util.AccountProtoc.Account.newBuilder(result.account_).mergeFrom(value).buildPartial();
        } else {
          result.account_ = value;
        }
        result.hasAccount = true;
        return this;
      }
      public Builder clearAccount() {
        result.hasAccount = false;
        result.account_ = com.kindroid.security.util.AccountProtoc.Account.getDefaultInstance();
        return this;
      }
      
      // optional string token = 2;
      public boolean hasToken() {
        return result.hasToken();
      }
      public java.lang.String getToken() {
        return result.getToken();
      }
      public Builder setToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasToken = true;
        result.token_ = value;
        return this;
      }
      public Builder clearToken() {
        result.hasToken = false;
        result.token_ = getDefaultInstance().getToken();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.AccountResponse)
    }
    
    static {
      defaultInstance = new AccountResponse(true);
      com.kindroid.security.util.AccountProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.AccountResponse)
  }
  
  public static final class PasswordRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use PasswordRequest.newBuilder() to construct.
    private PasswordRequest() {
      initFields();
    }
    private PasswordRequest(boolean noInit) {}
    
    private static final PasswordRequest defaultInstance;
    public static PasswordRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public PasswordRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_PasswordRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_PasswordRequest_fieldAccessorTable;
    }
    
    // required string oldPassword = 1;
    public static final int OLDPASSWORD_FIELD_NUMBER = 1;
    private boolean hasOldPassword;
    private java.lang.String oldPassword_ = "";
    public boolean hasOldPassword() { return hasOldPassword; }
    public java.lang.String getOldPassword() { return oldPassword_; }
    
    // required string newPassword = 2;
    public static final int NEWPASSWORD_FIELD_NUMBER = 2;
    private boolean hasNewPassword;
    private java.lang.String newPassword_ = "";
    public boolean hasNewPassword() { return hasNewPassword; }
    public java.lang.String getNewPassword() { return newPassword_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasOldPassword) return false;
      if (!hasNewPassword) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasOldPassword()) {
        output.writeString(1, getOldPassword());
      }
      if (hasNewPassword()) {
        output.writeString(2, getNewPassword());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasOldPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getOldPassword());
      }
      if (hasNewPassword()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getNewPassword());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.AccountProtoc.PasswordRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.AccountProtoc.PasswordRequest result;
      
      // Construct using com.kindroid.security.util.AccountProtoc.PasswordRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.AccountProtoc.PasswordRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.AccountProtoc.PasswordRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.AccountProtoc.PasswordRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.AccountProtoc.PasswordRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.AccountProtoc.PasswordRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.AccountProtoc.PasswordRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.AccountProtoc.PasswordRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.AccountProtoc.PasswordRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.AccountProtoc.PasswordRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.AccountProtoc.PasswordRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.AccountProtoc.PasswordRequest) {
          return mergeFrom((com.kindroid.security.util.AccountProtoc.PasswordRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.AccountProtoc.PasswordRequest other) {
        if (other == com.kindroid.security.util.AccountProtoc.PasswordRequest.getDefaultInstance()) return this;
        if (other.hasOldPassword()) {
          setOldPassword(other.getOldPassword());
        }
        if (other.hasNewPassword()) {
          setNewPassword(other.getNewPassword());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setOldPassword(input.readString());
              break;
            }
            case 18: {
              setNewPassword(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required string oldPassword = 1;
      public boolean hasOldPassword() {
        return result.hasOldPassword();
      }
      public java.lang.String getOldPassword() {
        return result.getOldPassword();
      }
      public Builder setOldPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOldPassword = true;
        result.oldPassword_ = value;
        return this;
      }
      public Builder clearOldPassword() {
        result.hasOldPassword = false;
        result.oldPassword_ = getDefaultInstance().getOldPassword();
        return this;
      }
      
      // required string newPassword = 2;
      public boolean hasNewPassword() {
        return result.hasNewPassword();
      }
      public java.lang.String getNewPassword() {
        return result.getNewPassword();
      }
      public Builder setNewPassword(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasNewPassword = true;
        result.newPassword_ = value;
        return this;
      }
      public Builder clearNewPassword() {
        result.hasNewPassword = false;
        result.newPassword_ = getDefaultInstance().getNewPassword();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.PasswordRequest)
    }
    
    static {
      defaultInstance = new PasswordRequest(true);
      com.kindroid.security.util.AccountProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.PasswordRequest)
  }
  
  public static final class PasswordResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use PasswordResponse.newBuilder() to construct.
    private PasswordResponse() {
      initFields();
    }
    private PasswordResponse(boolean noInit) {}
    
    private static final PasswordResponse defaultInstance;
    public static PasswordResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public PasswordResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_PasswordResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.AccountProtoc.internal_static_com_kindroid_security_util_PasswordResponse_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.AccountProtoc.PasswordResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.AccountProtoc.PasswordResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.AccountProtoc.PasswordResponse result;
      
      // Construct using com.kindroid.security.util.AccountProtoc.PasswordResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.AccountProtoc.PasswordResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.AccountProtoc.PasswordResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.AccountProtoc.PasswordResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.AccountProtoc.PasswordResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.AccountProtoc.PasswordResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.AccountProtoc.PasswordResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.AccountProtoc.PasswordResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.AccountProtoc.PasswordResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.AccountProtoc.PasswordResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.AccountProtoc.PasswordResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.AccountProtoc.PasswordResponse) {
          return mergeFrom((com.kindroid.security.util.AccountProtoc.PasswordResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.AccountProtoc.PasswordResponse other) {
        if (other == com.kindroid.security.util.AccountProtoc.PasswordResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.PasswordResponse)
    }
    
    static {
      defaultInstance = new PasswordResponse(true);
      com.kindroid.security.util.AccountProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.PasswordResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Account_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Account_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_AccountRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_AccountRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_AccountResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_AccountResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_PasswordRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_PasswordRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_PasswordResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_PasswordResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\023AccountProtoc.proto\022\032com.kindroid.secu" +
      "rity.util\032\022CommonProtoc.proto\"~\n\007Account" +
      "\022\021\n\taccountID\030\001 \001(\003\022\014\n\004name\030\002 \001(\t\022\020\n\010pas" +
      "sword\030\003 \001(\t\022\r\n\005email\030\004 \001(\t\022\r\n\005phone\030\005 \001(" +
      "\t\022\022\n\ncreateTime\030\006 \001(\003\022\016\n\006status\030\007 \001(\005\"\204\001" +
      "\n\016AccountRequest\022<\n\013requestType\030\001 \002(\0162\'." +
      "com.kindroid.security.util.RequestType\0224" +
      "\n\007account\030\002 \001(\0132#.com.kindroid.security." +
      "util.Account\"V\n\017AccountResponse\0224\n\007accou" +
      "nt\030\001 \001(\0132#.com.kindroid.security.util.Ac",
      "count\022\r\n\005token\030\002 \001(\t\";\n\017PasswordRequest\022" +
      "\023\n\013oldPassword\030\001 \002(\t\022\023\n\013newPassword\030\002 \002(" +
      "\t\"\022\n\020PasswordResponseB\034\n\032com.kindroid.se" +
      "curity.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_Account_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_Account_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Account_descriptor,
              new java.lang.String[] { "AccountID", "Name", "Password", "Email", "Phone", "CreateTime", "Status", },
              com.kindroid.security.util.AccountProtoc.Account.class,
              com.kindroid.security.util.AccountProtoc.Account.Builder.class);
          internal_static_com_kindroid_security_util_AccountRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_AccountRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_AccountRequest_descriptor,
              new java.lang.String[] { "RequestType", "Account", },
              com.kindroid.security.util.AccountProtoc.AccountRequest.class,
              com.kindroid.security.util.AccountProtoc.AccountRequest.Builder.class);
          internal_static_com_kindroid_security_util_AccountResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_security_util_AccountResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_AccountResponse_descriptor,
              new java.lang.String[] { "Account", "Token", },
              com.kindroid.security.util.AccountProtoc.AccountResponse.class,
              com.kindroid.security.util.AccountProtoc.AccountResponse.Builder.class);
          internal_static_com_kindroid_security_util_PasswordRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_security_util_PasswordRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_PasswordRequest_descriptor,
              new java.lang.String[] { "OldPassword", "NewPassword", },
              com.kindroid.security.util.AccountProtoc.PasswordRequest.class,
              com.kindroid.security.util.AccountProtoc.PasswordRequest.Builder.class);
          internal_static_com_kindroid_security_util_PasswordResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_security_util_PasswordResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_PasswordResponse_descriptor,
              new java.lang.String[] { },
              com.kindroid.security.util.AccountProtoc.PasswordResponse.class,
              com.kindroid.security.util.AccountProtoc.PasswordResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.security.util.CommonProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
