// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: TopicProtoc.proto

package com.kindroid.security.util;

public final class TopicProtoc {
  private TopicProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Topic extends
      com.google.protobuf.GeneratedMessage {
    // Use Topic.newBuilder() to construct.
    private Topic() {
      initFields();
    }
    private Topic(boolean noInit) {}
    
    private static final Topic defaultInstance;
    public static Topic getDefaultInstance() {
      return defaultInstance;
    }
    
    public Topic getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_Topic_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_Topic_fieldAccessorTable;
    }
    
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int64 createTime = 3;
    public static final int CREATETIME_FIELD_NUMBER = 3;
    private boolean hasCreateTime;
    private long createTime_ = 0L;
    public boolean hasCreateTime() { return hasCreateTime; }
    public long getCreateTime() { return createTime_; }
    
    // optional int32 status = 4;
    public static final int STATUS_FIELD_NUMBER = 4;
    private boolean hasStatus;
    private int status_ = 0;
    public boolean hasStatus() { return hasStatus; }
    public int getStatus() { return status_; }
    
    // optional bytes image = 5;
    public static final int IMAGE_FIELD_NUMBER = 5;
    private boolean hasImage;
    private com.google.protobuf.ByteString image_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasImage() { return hasImage; }
    public com.google.protobuf.ByteString getImage() { return image_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasCreateTime()) {
        output.writeInt64(3, getCreateTime());
      }
      if (hasStatus()) {
        output.writeInt32(4, getStatus());
      }
      if (hasImage()) {
        output.writeBytes(5, getImage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasCreateTime()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(3, getCreateTime());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getStatus());
      }
      if (hasImage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getImage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.Topic parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.Topic prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.Topic result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.Topic.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.Topic();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.Topic internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.Topic();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.Topic.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.Topic getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.Topic.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.Topic build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.Topic buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.Topic buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.TopicProtoc.Topic returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.Topic) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.Topic)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.Topic other) {
        if (other == com.kindroid.security.util.TopicProtoc.Topic.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasCreateTime()) {
          setCreateTime(other.getCreateTime());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasImage()) {
          setImage(other.getImage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setCreateTime(input.readInt64());
              break;
            }
            case 32: {
              setStatus(input.readInt32());
              break;
            }
            case 42: {
              setImage(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int64 createTime = 3;
      public boolean hasCreateTime() {
        return result.hasCreateTime();
      }
      public long getCreateTime() {
        return result.getCreateTime();
      }
      public Builder setCreateTime(long value) {
        result.hasCreateTime = true;
        result.createTime_ = value;
        return this;
      }
      public Builder clearCreateTime() {
        result.hasCreateTime = false;
        result.createTime_ = 0L;
        return this;
      }
      
      // optional int32 status = 4;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public int getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      // optional bytes image = 5;
      public boolean hasImage() {
        return result.hasImage();
      }
      public com.google.protobuf.ByteString getImage() {
        return result.getImage();
      }
      public Builder setImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImage = true;
        result.image_ = value;
        return this;
      }
      public Builder clearImage() {
        result.hasImage = false;
        result.image_ = getDefaultInstance().getImage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Topic)
    }
    
    static {
      defaultInstance = new Topic(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Topic)
  }
  
  public static final class TopicRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicRequest.newBuilder() to construct.
    private TopicRequest() {
      initFields();
    }
    private TopicRequest(boolean noInit) {}
    
    private static final TopicRequest defaultInstance;
    public static TopicRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicRequest_fieldAccessorTable;
    }
    
    // optional int32 startIndex = 1;
    public static final int STARTINDEX_FIELD_NUMBER = 1;
    private boolean hasStartIndex;
    private int startIndex_ = 0;
    public boolean hasStartIndex() { return hasStartIndex; }
    public int getStartIndex() { return startIndex_; }
    
    // optional int32 entriesCount = 2;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 2;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasStartIndex()) {
        output.writeInt32(1, getStartIndex());
      }
      if (hasEntriesCount()) {
        output.writeInt32(2, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasStartIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getStartIndex());
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.TopicRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.TopicRequest result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.TopicRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.TopicRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.TopicRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.TopicRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.TopicRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.TopicRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.TopicRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.TopicRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.TopicProtoc.TopicRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.TopicRequest) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.TopicRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.TopicRequest other) {
        if (other == com.kindroid.security.util.TopicProtoc.TopicRequest.getDefaultInstance()) return this;
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setStartIndex(input.readInt32());
              break;
            }
            case 16: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 startIndex = 1;
      public boolean hasStartIndex() {
        return result.hasStartIndex();
      }
      public int getStartIndex() {
        return result.getStartIndex();
      }
      public Builder setStartIndex(int value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder clearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      // optional int32 entriesCount = 2;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.TopicRequest)
    }
    
    static {
      defaultInstance = new TopicRequest(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.TopicRequest)
  }
  
  public static final class TopicResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicResponse.newBuilder() to construct.
    private TopicResponse() {
      initFields();
    }
    private TopicResponse(boolean noInit) {}
    
    private static final TopicResponse defaultInstance;
    public static TopicResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicResponse_fieldAccessorTable;
    }
    
    // repeated .com.kindroid.security.util.Topic topic = 1;
    public static final int TOPIC_FIELD_NUMBER = 1;
    private java.util.List<com.kindroid.security.util.TopicProtoc.Topic> topic_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.TopicProtoc.Topic> getTopicList() {
      return topic_;
    }
    public int getTopicCount() { return topic_.size(); }
    public com.kindroid.security.util.TopicProtoc.Topic getTopic(int index) {
      return topic_.get(index);
    }
    
    // optional int32 entriesCount = 2;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 2;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.kindroid.security.util.TopicProtoc.Topic element : getTopicList()) {
        output.writeMessage(1, element);
      }
      if (hasEntriesCount()) {
        output.writeInt32(2, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.kindroid.security.util.TopicProtoc.Topic element : getTopicList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.TopicResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.TopicResponse result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.TopicResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.TopicResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.TopicResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.TopicResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.TopicResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.TopicResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.TopicResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.TopicResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.topic_ != java.util.Collections.EMPTY_LIST) {
          result.topic_ =
            java.util.Collections.unmodifiableList(result.topic_);
        }
        com.kindroid.security.util.TopicProtoc.TopicResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.TopicResponse) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.TopicResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.TopicResponse other) {
        if (other == com.kindroid.security.util.TopicProtoc.TopicResponse.getDefaultInstance()) return this;
        if (!other.topic_.isEmpty()) {
          if (result.topic_.isEmpty()) {
            result.topic_ = new java.util.ArrayList<com.kindroid.security.util.TopicProtoc.Topic>();
          }
          result.topic_.addAll(other.topic_);
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.TopicProtoc.Topic.Builder subBuilder = com.kindroid.security.util.TopicProtoc.Topic.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addTopic(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.kindroid.security.util.Topic topic = 1;
      public java.util.List<com.kindroid.security.util.TopicProtoc.Topic> getTopicList() {
        return java.util.Collections.unmodifiableList(result.topic_);
      }
      public int getTopicCount() {
        return result.getTopicCount();
      }
      public com.kindroid.security.util.TopicProtoc.Topic getTopic(int index) {
        return result.getTopic(index);
      }
      public Builder setTopic(int index, com.kindroid.security.util.TopicProtoc.Topic value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.topic_.set(index, value);
        return this;
      }
      public Builder setTopic(int index, com.kindroid.security.util.TopicProtoc.Topic.Builder builderForValue) {
        result.topic_.set(index, builderForValue.build());
        return this;
      }
      public Builder addTopic(com.kindroid.security.util.TopicProtoc.Topic value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.topic_.isEmpty()) {
          result.topic_ = new java.util.ArrayList<com.kindroid.security.util.TopicProtoc.Topic>();
        }
        result.topic_.add(value);
        return this;
      }
      public Builder addTopic(com.kindroid.security.util.TopicProtoc.Topic.Builder builderForValue) {
        if (result.topic_.isEmpty()) {
          result.topic_ = new java.util.ArrayList<com.kindroid.security.util.TopicProtoc.Topic>();
        }
        result.topic_.add(builderForValue.build());
        return this;
      }
      public Builder addAllTopic(
          java.lang.Iterable<? extends com.kindroid.security.util.TopicProtoc.Topic> values) {
        if (result.topic_.isEmpty()) {
          result.topic_ = new java.util.ArrayList<com.kindroid.security.util.TopicProtoc.Topic>();
        }
        super.addAll(values, result.topic_);
        return this;
      }
      public Builder clearTopic() {
        result.topic_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 entriesCount = 2;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.TopicResponse)
    }
    
    static {
      defaultInstance = new TopicResponse(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.TopicResponse)
  }
  
  public static final class TopicAppRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicAppRequest.newBuilder() to construct.
    private TopicAppRequest() {
      initFields();
    }
    private TopicAppRequest(boolean noInit) {}
    
    private static final TopicAppRequest defaultInstance;
    public static TopicAppRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicAppRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicAppRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicAppRequest_fieldAccessorTable;
    }
    
    // required int32 topicID = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private boolean hasTopicID;
    private int topicID_ = 0;
    public boolean hasTopicID() { return hasTopicID; }
    public int getTopicID() { return topicID_; }
    
    // optional int32 startIndex = 2;
    public static final int STARTINDEX_FIELD_NUMBER = 2;
    private boolean hasStartIndex;
    private int startIndex_ = 0;
    public boolean hasStartIndex() { return hasStartIndex; }
    public int getStartIndex() { return startIndex_; }
    
    // optional int32 entriesCount = 3;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 3;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTopicID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTopicID()) {
        output.writeInt32(1, getTopicID());
      }
      if (hasStartIndex()) {
        output.writeInt32(2, getStartIndex());
      }
      if (hasEntriesCount()) {
        output.writeInt32(3, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTopicID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTopicID());
      }
      if (hasStartIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getStartIndex());
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.TopicAppRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.TopicAppRequest result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.TopicAppRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.TopicAppRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.TopicAppRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.TopicAppRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.TopicAppRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicAppRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.TopicAppRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.TopicAppRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.TopicAppRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicAppRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.TopicProtoc.TopicAppRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.TopicAppRequest) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.TopicAppRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.TopicAppRequest other) {
        if (other == com.kindroid.security.util.TopicProtoc.TopicAppRequest.getDefaultInstance()) return this;
        if (other.hasTopicID()) {
          setTopicID(other.getTopicID());
        }
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTopicID(input.readInt32());
              break;
            }
            case 16: {
              setStartIndex(input.readInt32());
              break;
            }
            case 24: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 topicID = 1;
      public boolean hasTopicID() {
        return result.hasTopicID();
      }
      public int getTopicID() {
        return result.getTopicID();
      }
      public Builder setTopicID(int value) {
        result.hasTopicID = true;
        result.topicID_ = value;
        return this;
      }
      public Builder clearTopicID() {
        result.hasTopicID = false;
        result.topicID_ = 0;
        return this;
      }
      
      // optional int32 startIndex = 2;
      public boolean hasStartIndex() {
        return result.hasStartIndex();
      }
      public int getStartIndex() {
        return result.getStartIndex();
      }
      public Builder setStartIndex(int value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder clearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      // optional int32 entriesCount = 3;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.TopicAppRequest)
    }
    
    static {
      defaultInstance = new TopicAppRequest(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.TopicAppRequest)
  }
  
  public static final class TopicAppResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicAppResponse.newBuilder() to construct.
    private TopicAppResponse() {
      initFields();
    }
    private TopicAppResponse(boolean noInit) {}
    
    private static final TopicAppResponse defaultInstance;
    public static TopicAppResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicAppResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicAppResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicAppResponse_fieldAccessorTable;
    }
    
    // required int32 topicID = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private boolean hasTopicID;
    private int topicID_ = 0;
    public boolean hasTopicID() { return hasTopicID; }
    public int getTopicID() { return topicID_; }
    
    // repeated .com.kindroid.security.util.App app = 2;
    public static final int APP_FIELD_NUMBER = 2;
    private java.util.List<com.kindroid.security.util.AppProtoc.App> app_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.AppProtoc.App> getAppList() {
      return app_;
    }
    public int getAppCount() { return app_.size(); }
    public com.kindroid.security.util.AppProtoc.App getApp(int index) {
      return app_.get(index);
    }
    
    // optional int32 entriesCount = 3;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 3;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTopicID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTopicID()) {
        output.writeInt32(1, getTopicID());
      }
      for (com.kindroid.security.util.AppProtoc.App element : getAppList()) {
        output.writeMessage(2, element);
      }
      if (hasEntriesCount()) {
        output.writeInt32(3, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTopicID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTopicID());
      }
      for (com.kindroid.security.util.AppProtoc.App element : getAppList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, element);
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicAppResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.TopicAppResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.TopicAppResponse result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.TopicAppResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.TopicAppResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.TopicAppResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.TopicAppResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.TopicAppResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicAppResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.TopicAppResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.TopicAppResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.TopicAppResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicAppResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.app_ != java.util.Collections.EMPTY_LIST) {
          result.app_ =
            java.util.Collections.unmodifiableList(result.app_);
        }
        com.kindroid.security.util.TopicProtoc.TopicAppResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.TopicAppResponse) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.TopicAppResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.TopicAppResponse other) {
        if (other == com.kindroid.security.util.TopicProtoc.TopicAppResponse.getDefaultInstance()) return this;
        if (other.hasTopicID()) {
          setTopicID(other.getTopicID());
        }
        if (!other.app_.isEmpty()) {
          if (result.app_.isEmpty()) {
            result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
          }
          result.app_.addAll(other.app_);
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTopicID(input.readInt32());
              break;
            }
            case 18: {
              com.kindroid.security.util.AppProtoc.App.Builder subBuilder = com.kindroid.security.util.AppProtoc.App.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addApp(subBuilder.buildPartial());
              break;
            }
            case 24: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 topicID = 1;
      public boolean hasTopicID() {
        return result.hasTopicID();
      }
      public int getTopicID() {
        return result.getTopicID();
      }
      public Builder setTopicID(int value) {
        result.hasTopicID = true;
        result.topicID_ = value;
        return this;
      }
      public Builder clearTopicID() {
        result.hasTopicID = false;
        result.topicID_ = 0;
        return this;
      }
      
      // repeated .com.kindroid.security.util.App app = 2;
      public java.util.List<com.kindroid.security.util.AppProtoc.App> getAppList() {
        return java.util.Collections.unmodifiableList(result.app_);
      }
      public int getAppCount() {
        return result.getAppCount();
      }
      public com.kindroid.security.util.AppProtoc.App getApp(int index) {
        return result.getApp(index);
      }
      public Builder setApp(int index, com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.app_.set(index, value);
        return this;
      }
      public Builder setApp(int index, com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        result.app_.set(index, builderForValue.build());
        return this;
      }
      public Builder addApp(com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        result.app_.add(value);
        return this;
      }
      public Builder addApp(com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        result.app_.add(builderForValue.build());
        return this;
      }
      public Builder addAllApp(
          java.lang.Iterable<? extends com.kindroid.security.util.AppProtoc.App> values) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        super.addAll(values, result.app_);
        return this;
      }
      public Builder clearApp() {
        result.app_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 entriesCount = 3;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.TopicAppResponse)
    }
    
    static {
      defaultInstance = new TopicAppResponse(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.TopicAppResponse)
  }
  
  public static final class TopicClickRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicClickRequest.newBuilder() to construct.
    private TopicClickRequest() {
      initFields();
    }
    private TopicClickRequest(boolean noInit) {}
    
    private static final TopicClickRequest defaultInstance;
    public static TopicClickRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicClickRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicClickRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicClickRequest_fieldAccessorTable;
    }
    
    // required int32 topicID = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private boolean hasTopicID;
    private int topicID_ = 0;
    public boolean hasTopicID() { return hasTopicID; }
    public int getTopicID() { return topicID_; }
    
    // optional int32 startIndex = 2;
    public static final int STARTINDEX_FIELD_NUMBER = 2;
    private boolean hasStartIndex;
    private int startIndex_ = 0;
    public boolean hasStartIndex() { return hasStartIndex; }
    public int getStartIndex() { return startIndex_; }
    
    // optional int32 entriesCount = 3;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 3;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasTopicID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTopicID()) {
        output.writeInt32(1, getTopicID());
      }
      if (hasStartIndex()) {
        output.writeInt32(2, getStartIndex());
      }
      if (hasEntriesCount()) {
        output.writeInt32(3, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTopicID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTopicID());
      }
      if (hasStartIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getStartIndex());
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.TopicClickRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.TopicClickRequest result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.TopicClickRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.TopicClickRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.TopicClickRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.TopicClickRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.TopicClickRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicClickRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.TopicClickRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.TopicClickRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.TopicClickRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicClickRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.TopicProtoc.TopicClickRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.TopicClickRequest) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.TopicClickRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.TopicClickRequest other) {
        if (other == com.kindroid.security.util.TopicProtoc.TopicClickRequest.getDefaultInstance()) return this;
        if (other.hasTopicID()) {
          setTopicID(other.getTopicID());
        }
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTopicID(input.readInt32());
              break;
            }
            case 16: {
              setStartIndex(input.readInt32());
              break;
            }
            case 24: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 topicID = 1;
      public boolean hasTopicID() {
        return result.hasTopicID();
      }
      public int getTopicID() {
        return result.getTopicID();
      }
      public Builder setTopicID(int value) {
        result.hasTopicID = true;
        result.topicID_ = value;
        return this;
      }
      public Builder clearTopicID() {
        result.hasTopicID = false;
        result.topicID_ = 0;
        return this;
      }
      
      // optional int32 startIndex = 2;
      public boolean hasStartIndex() {
        return result.hasStartIndex();
      }
      public int getStartIndex() {
        return result.getStartIndex();
      }
      public Builder setStartIndex(int value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder clearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      // optional int32 entriesCount = 3;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.TopicClickRequest)
    }
    
    static {
      defaultInstance = new TopicClickRequest(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.TopicClickRequest)
  }
  
  public static final class TopicClickResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use TopicClickResponse.newBuilder() to construct.
    private TopicClickResponse() {
      initFields();
    }
    private TopicClickResponse(boolean noInit) {}
    
    private static final TopicClickResponse defaultInstance;
    public static TopicClickResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public TopicClickResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicClickResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.TopicProtoc.internal_static_com_kindroid_security_util_TopicClickResponse_fieldAccessorTable;
    }
    
    // required int32 topicID = 1;
    public static final int TOPICID_FIELD_NUMBER = 1;
    private boolean hasTopicID;
    private int topicID_ = 0;
    public boolean hasTopicID() { return hasTopicID; }
    public int getTopicID() { return topicID_; }
    
    // required .com.kindroid.security.util.TopicType topicType = 2;
    public static final int TOPICTYPE_FIELD_NUMBER = 2;
    private boolean hasTopicType;
    private com.kindroid.security.util.CommonProtoc.TopicType topicType_;
    public boolean hasTopicType() { return hasTopicType; }
    public com.kindroid.security.util.CommonProtoc.TopicType getTopicType() { return topicType_; }
    
    // repeated .com.kindroid.security.util.App app = 3;
    public static final int APP_FIELD_NUMBER = 3;
    private java.util.List<com.kindroid.security.util.AppProtoc.App> app_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.AppProtoc.App> getAppList() {
      return app_;
    }
    public int getAppCount() { return app_.size(); }
    public com.kindroid.security.util.AppProtoc.App getApp(int index) {
      return app_.get(index);
    }
    
    // repeated .com.kindroid.security.util.Category category = 4;
    public static final int CATEGORY_FIELD_NUMBER = 4;
    private java.util.List<com.kindroid.security.util.CategoryProtoc.Category> category_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.CategoryProtoc.Category> getCategoryList() {
      return category_;
    }
    public int getCategoryCount() { return category_.size(); }
    public com.kindroid.security.util.CategoryProtoc.Category getCategory(int index) {
      return category_.get(index);
    }
    
    // optional int32 entriesCount = 5;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 5;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
      topicType_ = com.kindroid.security.util.CommonProtoc.TopicType.TOPIC_APP;
    }
    public final boolean isInitialized() {
      if (!hasTopicID) return false;
      if (!hasTopicType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTopicID()) {
        output.writeInt32(1, getTopicID());
      }
      if (hasTopicType()) {
        output.writeEnum(2, getTopicType().getNumber());
      }
      for (com.kindroid.security.util.AppProtoc.App element : getAppList()) {
        output.writeMessage(3, element);
      }
      for (com.kindroid.security.util.CategoryProtoc.Category element : getCategoryList()) {
        output.writeMessage(4, element);
      }
      if (hasEntriesCount()) {
        output.writeInt32(5, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTopicID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getTopicID());
      }
      if (hasTopicType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, getTopicType().getNumber());
      }
      for (com.kindroid.security.util.AppProtoc.App element : getAppList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, element);
      }
      for (com.kindroid.security.util.CategoryProtoc.Category element : getCategoryList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.TopicProtoc.TopicClickResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.TopicProtoc.TopicClickResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.TopicProtoc.TopicClickResponse result;
      
      // Construct using com.kindroid.security.util.TopicProtoc.TopicClickResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.TopicProtoc.TopicClickResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.TopicProtoc.TopicClickResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.TopicProtoc.TopicClickResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.TopicProtoc.TopicClickResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicClickResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.TopicProtoc.TopicClickResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.TopicProtoc.TopicClickResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.TopicProtoc.TopicClickResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.TopicProtoc.TopicClickResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.app_ != java.util.Collections.EMPTY_LIST) {
          result.app_ =
            java.util.Collections.unmodifiableList(result.app_);
        }
        if (result.category_ != java.util.Collections.EMPTY_LIST) {
          result.category_ =
            java.util.Collections.unmodifiableList(result.category_);
        }
        com.kindroid.security.util.TopicProtoc.TopicClickResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.TopicProtoc.TopicClickResponse) {
          return mergeFrom((com.kindroid.security.util.TopicProtoc.TopicClickResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.TopicProtoc.TopicClickResponse other) {
        if (other == com.kindroid.security.util.TopicProtoc.TopicClickResponse.getDefaultInstance()) return this;
        if (other.hasTopicID()) {
          setTopicID(other.getTopicID());
        }
        if (other.hasTopicType()) {
          setTopicType(other.getTopicType());
        }
        if (!other.app_.isEmpty()) {
          if (result.app_.isEmpty()) {
            result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
          }
          result.app_.addAll(other.app_);
        }
        if (!other.category_.isEmpty()) {
          if (result.category_.isEmpty()) {
            result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
          }
          result.category_.addAll(other.category_);
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setTopicID(input.readInt32());
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.CommonProtoc.TopicType value = com.kindroid.security.util.CommonProtoc.TopicType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                setTopicType(value);
              }
              break;
            }
            case 26: {
              com.kindroid.security.util.AppProtoc.App.Builder subBuilder = com.kindroid.security.util.AppProtoc.App.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addApp(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.kindroid.security.util.CategoryProtoc.Category.Builder subBuilder = com.kindroid.security.util.CategoryProtoc.Category.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCategory(subBuilder.buildPartial());
              break;
            }
            case 40: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 topicID = 1;
      public boolean hasTopicID() {
        return result.hasTopicID();
      }
      public int getTopicID() {
        return result.getTopicID();
      }
      public Builder setTopicID(int value) {
        result.hasTopicID = true;
        result.topicID_ = value;
        return this;
      }
      public Builder clearTopicID() {
        result.hasTopicID = false;
        result.topicID_ = 0;
        return this;
      }
      
      // required .com.kindroid.security.util.TopicType topicType = 2;
      public boolean hasTopicType() {
        return result.hasTopicType();
      }
      public com.kindroid.security.util.CommonProtoc.TopicType getTopicType() {
        return result.getTopicType();
      }
      public Builder setTopicType(com.kindroid.security.util.CommonProtoc.TopicType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTopicType = true;
        result.topicType_ = value;
        return this;
      }
      public Builder clearTopicType() {
        result.hasTopicType = false;
        result.topicType_ = com.kindroid.security.util.CommonProtoc.TopicType.TOPIC_APP;
        return this;
      }
      
      // repeated .com.kindroid.security.util.App app = 3;
      public java.util.List<com.kindroid.security.util.AppProtoc.App> getAppList() {
        return java.util.Collections.unmodifiableList(result.app_);
      }
      public int getAppCount() {
        return result.getAppCount();
      }
      public com.kindroid.security.util.AppProtoc.App getApp(int index) {
        return result.getApp(index);
      }
      public Builder setApp(int index, com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.app_.set(index, value);
        return this;
      }
      public Builder setApp(int index, com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        result.app_.set(index, builderForValue.build());
        return this;
      }
      public Builder addApp(com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        result.app_.add(value);
        return this;
      }
      public Builder addApp(com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        result.app_.add(builderForValue.build());
        return this;
      }
      public Builder addAllApp(
          java.lang.Iterable<? extends com.kindroid.security.util.AppProtoc.App> values) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        super.addAll(values, result.app_);
        return this;
      }
      public Builder clearApp() {
        result.app_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.kindroid.security.util.Category category = 4;
      public java.util.List<com.kindroid.security.util.CategoryProtoc.Category> getCategoryList() {
        return java.util.Collections.unmodifiableList(result.category_);
      }
      public int getCategoryCount() {
        return result.getCategoryCount();
      }
      public com.kindroid.security.util.CategoryProtoc.Category getCategory(int index) {
        return result.getCategory(index);
      }
      public Builder setCategory(int index, com.kindroid.security.util.CategoryProtoc.Category value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.category_.set(index, value);
        return this;
      }
      public Builder setCategory(int index, com.kindroid.security.util.CategoryProtoc.Category.Builder builderForValue) {
        result.category_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCategory(com.kindroid.security.util.CategoryProtoc.Category value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.category_.isEmpty()) {
          result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
        }
        result.category_.add(value);
        return this;
      }
      public Builder addCategory(com.kindroid.security.util.CategoryProtoc.Category.Builder builderForValue) {
        if (result.category_.isEmpty()) {
          result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
        }
        result.category_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCategory(
          java.lang.Iterable<? extends com.kindroid.security.util.CategoryProtoc.Category> values) {
        if (result.category_.isEmpty()) {
          result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
        }
        super.addAll(values, result.category_);
        return this;
      }
      public Builder clearCategory() {
        result.category_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 entriesCount = 5;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.TopicClickResponse)
    }
    
    static {
      defaultInstance = new TopicClickResponse(true);
      com.kindroid.security.util.TopicProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.TopicClickResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Topic_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Topic_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_TopicRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_TopicRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_TopicResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_TopicResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_TopicAppRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_TopicAppRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_TopicAppResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_TopicAppResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_TopicClickRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_TopicClickRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_TopicClickResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_TopicClickResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\021TopicProtoc.proto\022\032com.kindroid.securi" +
      "ty.util\032\022CommonProtoc.proto\032\017AppProtoc.p" +
      "roto\032\024CategoryProtoc.proto\"T\n\005Topic\022\n\n\002i" +
      "d\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\022\n\ncreateTime\030\003 \001(" +
      "\003\022\016\n\006status\030\004 \001(\005\022\r\n\005image\030\005 \001(\014\"8\n\014Topi" +
      "cRequest\022\022\n\nstartIndex\030\001 \001(\005\022\024\n\014entriesC" +
      "ount\030\002 \001(\005\"W\n\rTopicResponse\0220\n\005topic\030\001 \003" +
      "(\0132!.com.kindroid.security.util.Topic\022\024\n" +
      "\014entriesCount\030\002 \001(\005\"L\n\017TopicAppRequest\022\017" +
      "\n\007topicID\030\001 \002(\005\022\022\n\nstartIndex\030\002 \001(\005\022\024\n\014e",
      "ntriesCount\030\003 \001(\005\"g\n\020TopicAppResponse\022\017\n" +
      "\007topicID\030\001 \002(\005\022,\n\003app\030\002 \003(\0132\037.com.kindro" +
      "id.security.util.App\022\024\n\014entriesCount\030\003 \001" +
      "(\005\"N\n\021TopicClickRequest\022\017\n\007topicID\030\001 \002(\005" +
      "\022\022\n\nstartIndex\030\002 \001(\005\022\024\n\014entriesCount\030\003 \001" +
      "(\005\"\333\001\n\022TopicClickResponse\022\017\n\007topicID\030\001 \002" +
      "(\005\0228\n\ttopicType\030\002 \002(\0162%.com.kindroid.sec" +
      "urity.util.TopicType\022,\n\003app\030\003 \003(\0132\037.com." +
      "kindroid.security.util.App\0226\n\010category\030\004" +
      " \003(\0132$.com.kindroid.security.util.Catego",
      "ry\022\024\n\014entriesCount\030\005 \001(\005B\034\n\032com.kindroid" +
      ".security.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_Topic_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_Topic_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Topic_descriptor,
              new java.lang.String[] { "Id", "Name", "CreateTime", "Status", "Image", },
              com.kindroid.security.util.TopicProtoc.Topic.class,
              com.kindroid.security.util.TopicProtoc.Topic.Builder.class);
          internal_static_com_kindroid_security_util_TopicRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_TopicRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_TopicRequest_descriptor,
              new java.lang.String[] { "StartIndex", "EntriesCount", },
              com.kindroid.security.util.TopicProtoc.TopicRequest.class,
              com.kindroid.security.util.TopicProtoc.TopicRequest.Builder.class);
          internal_static_com_kindroid_security_util_TopicResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_security_util_TopicResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_TopicResponse_descriptor,
              new java.lang.String[] { "Topic", "EntriesCount", },
              com.kindroid.security.util.TopicProtoc.TopicResponse.class,
              com.kindroid.security.util.TopicProtoc.TopicResponse.Builder.class);
          internal_static_com_kindroid_security_util_TopicAppRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_security_util_TopicAppRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_TopicAppRequest_descriptor,
              new java.lang.String[] { "TopicID", "StartIndex", "EntriesCount", },
              com.kindroid.security.util.TopicProtoc.TopicAppRequest.class,
              com.kindroid.security.util.TopicProtoc.TopicAppRequest.Builder.class);
          internal_static_com_kindroid_security_util_TopicAppResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_security_util_TopicAppResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_TopicAppResponse_descriptor,
              new java.lang.String[] { "TopicID", "App", "EntriesCount", },
              com.kindroid.security.util.TopicProtoc.TopicAppResponse.class,
              com.kindroid.security.util.TopicProtoc.TopicAppResponse.Builder.class);
          internal_static_com_kindroid_security_util_TopicClickRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kindroid_security_util_TopicClickRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_TopicClickRequest_descriptor,
              new java.lang.String[] { "TopicID", "StartIndex", "EntriesCount", },
              com.kindroid.security.util.TopicProtoc.TopicClickRequest.class,
              com.kindroid.security.util.TopicProtoc.TopicClickRequest.Builder.class);
          internal_static_com_kindroid_security_util_TopicClickResponse_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_kindroid_security_util_TopicClickResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_TopicClickResponse_descriptor,
              new java.lang.String[] { "TopicID", "TopicType", "App", "Category", "EntriesCount", },
              com.kindroid.security.util.TopicProtoc.TopicClickResponse.class,
              com.kindroid.security.util.TopicProtoc.TopicClickResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.security.util.CommonProtoc.getDescriptor(),
          com.kindroid.security.util.AppProtoc.getDescriptor(),
          com.kindroid.security.util.CategoryProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
