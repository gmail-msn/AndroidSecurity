// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ResponseProtoc.proto

package com.kindroid.security.util;

public final class ResponseProtoc {
  private ResponseProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class ResponseContext extends
      com.google.protobuf.GeneratedMessage {
    // Use ResponseContext.newBuilder() to construct.
    private ResponseContext() {
      initFields();
    }
    private ResponseContext(boolean noInit) {}
    
    private static final ResponseContext defaultInstance;
    public static ResponseContext getDefaultInstance() {
      return defaultInstance;
    }
    
    public ResponseContext getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ResponseProtoc.internal_static_com_kindroid_security_util_ResponseContext_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ResponseProtoc.internal_static_com_kindroid_security_util_ResponseContext_fieldAccessorTable;
    }
    
    // required int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean hasResult;
    private int result_ = 0;
    public boolean hasResult() { return hasResult; }
    public int getResult() { return result_; }
    
    // optional int32 errNO = 2;
    public static final int ERRNO_FIELD_NUMBER = 2;
    private boolean hasErrNO;
    private int errNO_ = 0;
    public boolean hasErrNO() { return hasErrNO; }
    public int getErrNO() { return errNO_; }
    
    // optional string errMsg = 3;
    public static final int ERRMSG_FIELD_NUMBER = 3;
    private boolean hasErrMsg;
    private java.lang.String errMsg_ = "";
    public boolean hasErrMsg() { return hasErrMsg; }
    public java.lang.String getErrMsg() { return errMsg_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasResult) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResult()) {
        output.writeInt32(1, getResult());
      }
      if (hasErrNO()) {
        output.writeInt32(2, getErrNO());
      }
      if (hasErrMsg()) {
        output.writeString(3, getErrMsg());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getResult());
      }
      if (hasErrNO()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getErrNO());
      }
      if (hasErrMsg()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getErrMsg());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.ResponseContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ResponseProtoc.ResponseContext prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ResponseProtoc.ResponseContext result;
      
      // Construct using com.kindroid.security.util.ResponseProtoc.ResponseContext.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ResponseProtoc.ResponseContext();
        return builder;
      }
      
      protected com.kindroid.security.util.ResponseProtoc.ResponseContext internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ResponseProtoc.ResponseContext();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ResponseProtoc.ResponseContext.getDescriptor();
      }
      
      public com.kindroid.security.util.ResponseProtoc.ResponseContext getDefaultInstanceForType() {
        return com.kindroid.security.util.ResponseProtoc.ResponseContext.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ResponseProtoc.ResponseContext build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ResponseProtoc.ResponseContext buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ResponseProtoc.ResponseContext buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.ResponseProtoc.ResponseContext returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ResponseProtoc.ResponseContext) {
          return mergeFrom((com.kindroid.security.util.ResponseProtoc.ResponseContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ResponseProtoc.ResponseContext other) {
        if (other == com.kindroid.security.util.ResponseProtoc.ResponseContext.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        if (other.hasErrNO()) {
          setErrNO(other.getErrNO());
        }
        if (other.hasErrMsg()) {
          setErrMsg(other.getErrMsg());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setResult(input.readInt32());
              break;
            }
            case 16: {
              setErrNO(input.readInt32());
              break;
            }
            case 26: {
              setErrMsg(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required int32 result = 1;
      public boolean hasResult() {
        return result.hasResult();
      }
      public int getResult() {
        return result.getResult();
      }
      public Builder setResult(int value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder clearResult() {
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      // optional int32 errNO = 2;
      public boolean hasErrNO() {
        return result.hasErrNO();
      }
      public int getErrNO() {
        return result.getErrNO();
      }
      public Builder setErrNO(int value) {
        result.hasErrNO = true;
        result.errNO_ = value;
        return this;
      }
      public Builder clearErrNO() {
        result.hasErrNO = false;
        result.errNO_ = 0;
        return this;
      }
      
      // optional string errMsg = 3;
      public boolean hasErrMsg() {
        return result.hasErrMsg();
      }
      public java.lang.String getErrMsg() {
        return result.getErrMsg();
      }
      public Builder setErrMsg(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasErrMsg = true;
        result.errMsg_ = value;
        return this;
      }
      public Builder clearErrMsg() {
        result.hasErrMsg = false;
        result.errMsg_ = getDefaultInstance().getErrMsg();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.ResponseContext)
    }
    
    static {
      defaultInstance = new ResponseContext(true);
      com.kindroid.security.util.ResponseProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.ResponseContext)
  }
  
  public static final class Response extends
      com.google.protobuf.GeneratedMessage {
    // Use Response.newBuilder() to construct.
    private Response() {
      initFields();
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ResponseProtoc.internal_static_com_kindroid_security_util_Response_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ResponseProtoc.internal_static_com_kindroid_security_util_Response_fieldAccessorTable;
    }
    
    // required .com.kindroid.security.util.ResponseContext context = 1;
    public static final int CONTEXT_FIELD_NUMBER = 1;
    private boolean hasContext;
    private com.kindroid.security.util.ResponseProtoc.ResponseContext context_;
    public boolean hasContext() { return hasContext; }
    public com.kindroid.security.util.ResponseProtoc.ResponseContext getContext() { return context_; }
    
    // optional .com.kindroid.security.util.AccountResponse accountResponse = 2;
    public static final int ACCOUNTRESPONSE_FIELD_NUMBER = 2;
    private boolean hasAccountResponse;
    private com.kindroid.security.util.AccountProtoc.AccountResponse accountResponse_;
    public boolean hasAccountResponse() { return hasAccountResponse; }
    public com.kindroid.security.util.AccountProtoc.AccountResponse getAccountResponse() { return accountResponse_; }
    
    // optional .com.kindroid.security.util.EmailResponse emailResponse = 3;
    public static final int EMAILRESPONSE_FIELD_NUMBER = 3;
    private boolean hasEmailResponse;
    private com.kindroid.security.util.EmailProtoc.EmailResponse emailResponse_;
    public boolean hasEmailResponse() { return hasEmailResponse; }
    public com.kindroid.security.util.EmailProtoc.EmailResponse getEmailResponse() { return emailResponse_; }
    
    // optional .com.kindroid.security.util.FeedbackResponse feedbackResponse = 4;
    public static final int FEEDBACKRESPONSE_FIELD_NUMBER = 4;
    private boolean hasFeedbackResponse;
    private com.kindroid.security.util.FeedbackProtoc.FeedbackResponse feedbackResponse_;
    public boolean hasFeedbackResponse() { return hasFeedbackResponse; }
    public com.kindroid.security.util.FeedbackProtoc.FeedbackResponse getFeedbackResponse() { return feedbackResponse_; }
    
    // optional .com.kindroid.security.util.AppSearchResponse appSearchResponse = 5;
    public static final int APPSEARCHRESPONSE_FIELD_NUMBER = 5;
    private boolean hasAppSearchResponse;
    private com.kindroid.security.util.AppProtoc.AppSearchResponse appSearchResponse_;
    public boolean hasAppSearchResponse() { return hasAppSearchResponse; }
    public com.kindroid.security.util.AppProtoc.AppSearchResponse getAppSearchResponse() { return appSearchResponse_; }
    
    // optional .com.kindroid.security.util.TopicResponse topicResponse = 6;
    public static final int TOPICRESPONSE_FIELD_NUMBER = 6;
    private boolean hasTopicResponse;
    private com.kindroid.security.util.TopicProtoc.TopicResponse topicResponse_;
    public boolean hasTopicResponse() { return hasTopicResponse; }
    public com.kindroid.security.util.TopicProtoc.TopicResponse getTopicResponse() { return topicResponse_; }
    
    // optional .com.kindroid.security.util.TopicAppResponse topicAppResponse = 7;
    public static final int TOPICAPPRESPONSE_FIELD_NUMBER = 7;
    private boolean hasTopicAppResponse;
    private com.kindroid.security.util.TopicProtoc.TopicAppResponse topicAppResponse_;
    public boolean hasTopicAppResponse() { return hasTopicAppResponse; }
    public com.kindroid.security.util.TopicProtoc.TopicAppResponse getTopicAppResponse() { return topicAppResponse_; }
    
    // optional .com.kindroid.security.util.BannerResponse bannerResponse = 8;
    public static final int BANNERRESPONSE_FIELD_NUMBER = 8;
    private boolean hasBannerResponse;
    private com.kindroid.security.util.ADProtoc.BannerResponse bannerResponse_;
    public boolean hasBannerResponse() { return hasBannerResponse; }
    public com.kindroid.security.util.ADProtoc.BannerResponse getBannerResponse() { return bannerResponse_; }
    
    // optional .com.kindroid.security.util.PasswordResponse passwordResponse = 9;
    public static final int PASSWORDRESPONSE_FIELD_NUMBER = 9;
    private boolean hasPasswordResponse;
    private com.kindroid.security.util.AccountProtoc.PasswordResponse passwordResponse_;
    public boolean hasPasswordResponse() { return hasPasswordResponse; }
    public com.kindroid.security.util.AccountProtoc.PasswordResponse getPasswordResponse() { return passwordResponse_; }
    
    // optional .com.kindroid.security.util.ClickResponse clickResponse = 10;
    public static final int CLICKRESPONSE_FIELD_NUMBER = 10;
    private boolean hasClickResponse;
    private com.kindroid.security.util.ADProtoc.ClickResponse clickResponse_;
    public boolean hasClickResponse() { return hasClickResponse; }
    public com.kindroid.security.util.ADProtoc.ClickResponse getClickResponse() { return clickResponse_; }
    
    // optional .com.kindroid.security.util.TopicClickResponse topicClickResponse = 11;
    public static final int TOPICCLICKRESPONSE_FIELD_NUMBER = 11;
    private boolean hasTopicClickResponse;
    private com.kindroid.security.util.TopicProtoc.TopicClickResponse topicClickResponse_;
    public boolean hasTopicClickResponse() { return hasTopicClickResponse; }
    public com.kindroid.security.util.TopicProtoc.TopicClickResponse getTopicClickResponse() { return topicClickResponse_; }
    
    // optional .com.kindroid.security.util.CategoryClickResponse categoryClickResponse = 12;
    public static final int CATEGORYCLICKRESPONSE_FIELD_NUMBER = 12;
    private boolean hasCategoryClickResponse;
    private com.kindroid.security.util.CategoryProtoc.CategoryClickResponse categoryClickResponse_;
    public boolean hasCategoryClickResponse() { return hasCategoryClickResponse; }
    public com.kindroid.security.util.CategoryProtoc.CategoryClickResponse getCategoryClickResponse() { return categoryClickResponse_; }
    
    private void initFields() {
      context_ = com.kindroid.security.util.ResponseProtoc.ResponseContext.getDefaultInstance();
      accountResponse_ = com.kindroid.security.util.AccountProtoc.AccountResponse.getDefaultInstance();
      emailResponse_ = com.kindroid.security.util.EmailProtoc.EmailResponse.getDefaultInstance();
      feedbackResponse_ = com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.getDefaultInstance();
      appSearchResponse_ = com.kindroid.security.util.AppProtoc.AppSearchResponse.getDefaultInstance();
      topicResponse_ = com.kindroid.security.util.TopicProtoc.TopicResponse.getDefaultInstance();
      topicAppResponse_ = com.kindroid.security.util.TopicProtoc.TopicAppResponse.getDefaultInstance();
      bannerResponse_ = com.kindroid.security.util.ADProtoc.BannerResponse.getDefaultInstance();
      passwordResponse_ = com.kindroid.security.util.AccountProtoc.PasswordResponse.getDefaultInstance();
      clickResponse_ = com.kindroid.security.util.ADProtoc.ClickResponse.getDefaultInstance();
      topicClickResponse_ = com.kindroid.security.util.TopicProtoc.TopicClickResponse.getDefaultInstance();
      categoryClickResponse_ = com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasContext) return false;
      if (!getContext().isInitialized()) return false;
      if (hasTopicAppResponse()) {
        if (!getTopicAppResponse().isInitialized()) return false;
      }
      if (hasBannerResponse()) {
        if (!getBannerResponse().isInitialized()) return false;
      }
      if (hasClickResponse()) {
        if (!getClickResponse().isInitialized()) return false;
      }
      if (hasTopicClickResponse()) {
        if (!getTopicClickResponse().isInitialized()) return false;
      }
      if (hasCategoryClickResponse()) {
        if (!getCategoryClickResponse().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContext()) {
        output.writeMessage(1, getContext());
      }
      if (hasAccountResponse()) {
        output.writeMessage(2, getAccountResponse());
      }
      if (hasEmailResponse()) {
        output.writeMessage(3, getEmailResponse());
      }
      if (hasFeedbackResponse()) {
        output.writeMessage(4, getFeedbackResponse());
      }
      if (hasAppSearchResponse()) {
        output.writeMessage(5, getAppSearchResponse());
      }
      if (hasTopicResponse()) {
        output.writeMessage(6, getTopicResponse());
      }
      if (hasTopicAppResponse()) {
        output.writeMessage(7, getTopicAppResponse());
      }
      if (hasBannerResponse()) {
        output.writeMessage(8, getBannerResponse());
      }
      if (hasPasswordResponse()) {
        output.writeMessage(9, getPasswordResponse());
      }
      if (hasClickResponse()) {
        output.writeMessage(10, getClickResponse());
      }
      if (hasTopicClickResponse()) {
        output.writeMessage(11, getTopicClickResponse());
      }
      if (hasCategoryClickResponse()) {
        output.writeMessage(12, getCategoryClickResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (hasAccountResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getAccountResponse());
      }
      if (hasEmailResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getEmailResponse());
      }
      if (hasFeedbackResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getFeedbackResponse());
      }
      if (hasAppSearchResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getAppSearchResponse());
      }
      if (hasTopicResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getTopicResponse());
      }
      if (hasTopicAppResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, getTopicAppResponse());
      }
      if (hasBannerResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, getBannerResponse());
      }
      if (hasPasswordResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, getPasswordResponse());
      }
      if (hasClickResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, getClickResponse());
      }
      if (hasTopicClickResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(11, getTopicClickResponse());
      }
      if (hasCategoryClickResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getCategoryClickResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ResponseProtoc.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ResponseProtoc.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ResponseProtoc.Response result;
      
      // Construct using com.kindroid.security.util.ResponseProtoc.Response.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ResponseProtoc.Response();
        return builder;
      }
      
      protected com.kindroid.security.util.ResponseProtoc.Response internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ResponseProtoc.Response();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ResponseProtoc.Response.getDescriptor();
      }
      
      public com.kindroid.security.util.ResponseProtoc.Response getDefaultInstanceForType() {
        return com.kindroid.security.util.ResponseProtoc.Response.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ResponseProtoc.Response build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ResponseProtoc.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ResponseProtoc.Response buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.ResponseProtoc.Response returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ResponseProtoc.Response) {
          return mergeFrom((com.kindroid.security.util.ResponseProtoc.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ResponseProtoc.Response other) {
        if (other == com.kindroid.security.util.ResponseProtoc.Response.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (other.hasAccountResponse()) {
          mergeAccountResponse(other.getAccountResponse());
        }
        if (other.hasEmailResponse()) {
          mergeEmailResponse(other.getEmailResponse());
        }
        if (other.hasFeedbackResponse()) {
          mergeFeedbackResponse(other.getFeedbackResponse());
        }
        if (other.hasAppSearchResponse()) {
          mergeAppSearchResponse(other.getAppSearchResponse());
        }
        if (other.hasTopicResponse()) {
          mergeTopicResponse(other.getTopicResponse());
        }
        if (other.hasTopicAppResponse()) {
          mergeTopicAppResponse(other.getTopicAppResponse());
        }
        if (other.hasBannerResponse()) {
          mergeBannerResponse(other.getBannerResponse());
        }
        if (other.hasPasswordResponse()) {
          mergePasswordResponse(other.getPasswordResponse());
        }
        if (other.hasClickResponse()) {
          mergeClickResponse(other.getClickResponse());
        }
        if (other.hasTopicClickResponse()) {
          mergeTopicClickResponse(other.getTopicClickResponse());
        }
        if (other.hasCategoryClickResponse()) {
          mergeCategoryClickResponse(other.getCategoryClickResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.ResponseProtoc.ResponseContext.Builder subBuilder = com.kindroid.security.util.ResponseProtoc.ResponseContext.newBuilder();
              if (hasContext()) {
                subBuilder.mergeFrom(getContext());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContext(subBuilder.buildPartial());
              break;
            }
            case 18: {
              com.kindroid.security.util.AccountProtoc.AccountResponse.Builder subBuilder = com.kindroid.security.util.AccountProtoc.AccountResponse.newBuilder();
              if (hasAccountResponse()) {
                subBuilder.mergeFrom(getAccountResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAccountResponse(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.kindroid.security.util.EmailProtoc.EmailResponse.Builder subBuilder = com.kindroid.security.util.EmailProtoc.EmailResponse.newBuilder();
              if (hasEmailResponse()) {
                subBuilder.mergeFrom(getEmailResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setEmailResponse(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.Builder subBuilder = com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.newBuilder();
              if (hasFeedbackResponse()) {
                subBuilder.mergeFrom(getFeedbackResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFeedbackResponse(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.kindroid.security.util.AppProtoc.AppSearchResponse.Builder subBuilder = com.kindroid.security.util.AppProtoc.AppSearchResponse.newBuilder();
              if (hasAppSearchResponse()) {
                subBuilder.mergeFrom(getAppSearchResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAppSearchResponse(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.kindroid.security.util.TopicProtoc.TopicResponse.Builder subBuilder = com.kindroid.security.util.TopicProtoc.TopicResponse.newBuilder();
              if (hasTopicResponse()) {
                subBuilder.mergeFrom(getTopicResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTopicResponse(subBuilder.buildPartial());
              break;
            }
            case 58: {
              com.kindroid.security.util.TopicProtoc.TopicAppResponse.Builder subBuilder = com.kindroid.security.util.TopicProtoc.TopicAppResponse.newBuilder();
              if (hasTopicAppResponse()) {
                subBuilder.mergeFrom(getTopicAppResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTopicAppResponse(subBuilder.buildPartial());
              break;
            }
            case 66: {
              com.kindroid.security.util.ADProtoc.BannerResponse.Builder subBuilder = com.kindroid.security.util.ADProtoc.BannerResponse.newBuilder();
              if (hasBannerResponse()) {
                subBuilder.mergeFrom(getBannerResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setBannerResponse(subBuilder.buildPartial());
              break;
            }
            case 74: {
              com.kindroid.security.util.AccountProtoc.PasswordResponse.Builder subBuilder = com.kindroid.security.util.AccountProtoc.PasswordResponse.newBuilder();
              if (hasPasswordResponse()) {
                subBuilder.mergeFrom(getPasswordResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setPasswordResponse(subBuilder.buildPartial());
              break;
            }
            case 82: {
              com.kindroid.security.util.ADProtoc.ClickResponse.Builder subBuilder = com.kindroid.security.util.ADProtoc.ClickResponse.newBuilder();
              if (hasClickResponse()) {
                subBuilder.mergeFrom(getClickResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setClickResponse(subBuilder.buildPartial());
              break;
            }
            case 90: {
              com.kindroid.security.util.TopicProtoc.TopicClickResponse.Builder subBuilder = com.kindroid.security.util.TopicProtoc.TopicClickResponse.newBuilder();
              if (hasTopicClickResponse()) {
                subBuilder.mergeFrom(getTopicClickResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTopicClickResponse(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.Builder subBuilder = com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.newBuilder();
              if (hasCategoryClickResponse()) {
                subBuilder.mergeFrom(getCategoryClickResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setCategoryClickResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.security.util.ResponseContext context = 1;
      public boolean hasContext() {
        return result.hasContext();
      }
      public com.kindroid.security.util.ResponseProtoc.ResponseContext getContext() {
        return result.getContext();
      }
      public Builder setContext(com.kindroid.security.util.ResponseProtoc.ResponseContext value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder setContext(com.kindroid.security.util.ResponseProtoc.ResponseContext.Builder builderForValue) {
        result.hasContext = true;
        result.context_ = builderForValue.build();
        return this;
      }
      public Builder mergeContext(com.kindroid.security.util.ResponseProtoc.ResponseContext value) {
        if (result.hasContext() &&
            result.context_ != com.kindroid.security.util.ResponseProtoc.ResponseContext.getDefaultInstance()) {
          result.context_ =
            com.kindroid.security.util.ResponseProtoc.ResponseContext.newBuilder(result.context_).mergeFrom(value).buildPartial();
        } else {
          result.context_ = value;
        }
        result.hasContext = true;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = com.kindroid.security.util.ResponseProtoc.ResponseContext.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.AccountResponse accountResponse = 2;
      public boolean hasAccountResponse() {
        return result.hasAccountResponse();
      }
      public com.kindroid.security.util.AccountProtoc.AccountResponse getAccountResponse() {
        return result.getAccountResponse();
      }
      public Builder setAccountResponse(com.kindroid.security.util.AccountProtoc.AccountResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAccountResponse = true;
        result.accountResponse_ = value;
        return this;
      }
      public Builder setAccountResponse(com.kindroid.security.util.AccountProtoc.AccountResponse.Builder builderForValue) {
        result.hasAccountResponse = true;
        result.accountResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeAccountResponse(com.kindroid.security.util.AccountProtoc.AccountResponse value) {
        if (result.hasAccountResponse() &&
            result.accountResponse_ != com.kindroid.security.util.AccountProtoc.AccountResponse.getDefaultInstance()) {
          result.accountResponse_ =
            com.kindroid.security.util.AccountProtoc.AccountResponse.newBuilder(result.accountResponse_).mergeFrom(value).buildPartial();
        } else {
          result.accountResponse_ = value;
        }
        result.hasAccountResponse = true;
        return this;
      }
      public Builder clearAccountResponse() {
        result.hasAccountResponse = false;
        result.accountResponse_ = com.kindroid.security.util.AccountProtoc.AccountResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.EmailResponse emailResponse = 3;
      public boolean hasEmailResponse() {
        return result.hasEmailResponse();
      }
      public com.kindroid.security.util.EmailProtoc.EmailResponse getEmailResponse() {
        return result.getEmailResponse();
      }
      public Builder setEmailResponse(com.kindroid.security.util.EmailProtoc.EmailResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasEmailResponse = true;
        result.emailResponse_ = value;
        return this;
      }
      public Builder setEmailResponse(com.kindroid.security.util.EmailProtoc.EmailResponse.Builder builderForValue) {
        result.hasEmailResponse = true;
        result.emailResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeEmailResponse(com.kindroid.security.util.EmailProtoc.EmailResponse value) {
        if (result.hasEmailResponse() &&
            result.emailResponse_ != com.kindroid.security.util.EmailProtoc.EmailResponse.getDefaultInstance()) {
          result.emailResponse_ =
            com.kindroid.security.util.EmailProtoc.EmailResponse.newBuilder(result.emailResponse_).mergeFrom(value).buildPartial();
        } else {
          result.emailResponse_ = value;
        }
        result.hasEmailResponse = true;
        return this;
      }
      public Builder clearEmailResponse() {
        result.hasEmailResponse = false;
        result.emailResponse_ = com.kindroid.security.util.EmailProtoc.EmailResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.FeedbackResponse feedbackResponse = 4;
      public boolean hasFeedbackResponse() {
        return result.hasFeedbackResponse();
      }
      public com.kindroid.security.util.FeedbackProtoc.FeedbackResponse getFeedbackResponse() {
        return result.getFeedbackResponse();
      }
      public Builder setFeedbackResponse(com.kindroid.security.util.FeedbackProtoc.FeedbackResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFeedbackResponse = true;
        result.feedbackResponse_ = value;
        return this;
      }
      public Builder setFeedbackResponse(com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.Builder builderForValue) {
        result.hasFeedbackResponse = true;
        result.feedbackResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeFeedbackResponse(com.kindroid.security.util.FeedbackProtoc.FeedbackResponse value) {
        if (result.hasFeedbackResponse() &&
            result.feedbackResponse_ != com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.getDefaultInstance()) {
          result.feedbackResponse_ =
            com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.newBuilder(result.feedbackResponse_).mergeFrom(value).buildPartial();
        } else {
          result.feedbackResponse_ = value;
        }
        result.hasFeedbackResponse = true;
        return this;
      }
      public Builder clearFeedbackResponse() {
        result.hasFeedbackResponse = false;
        result.feedbackResponse_ = com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.AppSearchResponse appSearchResponse = 5;
      public boolean hasAppSearchResponse() {
        return result.hasAppSearchResponse();
      }
      public com.kindroid.security.util.AppProtoc.AppSearchResponse getAppSearchResponse() {
        return result.getAppSearchResponse();
      }
      public Builder setAppSearchResponse(com.kindroid.security.util.AppProtoc.AppSearchResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAppSearchResponse = true;
        result.appSearchResponse_ = value;
        return this;
      }
      public Builder setAppSearchResponse(com.kindroid.security.util.AppProtoc.AppSearchResponse.Builder builderForValue) {
        result.hasAppSearchResponse = true;
        result.appSearchResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeAppSearchResponse(com.kindroid.security.util.AppProtoc.AppSearchResponse value) {
        if (result.hasAppSearchResponse() &&
            result.appSearchResponse_ != com.kindroid.security.util.AppProtoc.AppSearchResponse.getDefaultInstance()) {
          result.appSearchResponse_ =
            com.kindroid.security.util.AppProtoc.AppSearchResponse.newBuilder(result.appSearchResponse_).mergeFrom(value).buildPartial();
        } else {
          result.appSearchResponse_ = value;
        }
        result.hasAppSearchResponse = true;
        return this;
      }
      public Builder clearAppSearchResponse() {
        result.hasAppSearchResponse = false;
        result.appSearchResponse_ = com.kindroid.security.util.AppProtoc.AppSearchResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.TopicResponse topicResponse = 6;
      public boolean hasTopicResponse() {
        return result.hasTopicResponse();
      }
      public com.kindroid.security.util.TopicProtoc.TopicResponse getTopicResponse() {
        return result.getTopicResponse();
      }
      public Builder setTopicResponse(com.kindroid.security.util.TopicProtoc.TopicResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTopicResponse = true;
        result.topicResponse_ = value;
        return this;
      }
      public Builder setTopicResponse(com.kindroid.security.util.TopicProtoc.TopicResponse.Builder builderForValue) {
        result.hasTopicResponse = true;
        result.topicResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeTopicResponse(com.kindroid.security.util.TopicProtoc.TopicResponse value) {
        if (result.hasTopicResponse() &&
            result.topicResponse_ != com.kindroid.security.util.TopicProtoc.TopicResponse.getDefaultInstance()) {
          result.topicResponse_ =
            com.kindroid.security.util.TopicProtoc.TopicResponse.newBuilder(result.topicResponse_).mergeFrom(value).buildPartial();
        } else {
          result.topicResponse_ = value;
        }
        result.hasTopicResponse = true;
        return this;
      }
      public Builder clearTopicResponse() {
        result.hasTopicResponse = false;
        result.topicResponse_ = com.kindroid.security.util.TopicProtoc.TopicResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.TopicAppResponse topicAppResponse = 7;
      public boolean hasTopicAppResponse() {
        return result.hasTopicAppResponse();
      }
      public com.kindroid.security.util.TopicProtoc.TopicAppResponse getTopicAppResponse() {
        return result.getTopicAppResponse();
      }
      public Builder setTopicAppResponse(com.kindroid.security.util.TopicProtoc.TopicAppResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTopicAppResponse = true;
        result.topicAppResponse_ = value;
        return this;
      }
      public Builder setTopicAppResponse(com.kindroid.security.util.TopicProtoc.TopicAppResponse.Builder builderForValue) {
        result.hasTopicAppResponse = true;
        result.topicAppResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeTopicAppResponse(com.kindroid.security.util.TopicProtoc.TopicAppResponse value) {
        if (result.hasTopicAppResponse() &&
            result.topicAppResponse_ != com.kindroid.security.util.TopicProtoc.TopicAppResponse.getDefaultInstance()) {
          result.topicAppResponse_ =
            com.kindroid.security.util.TopicProtoc.TopicAppResponse.newBuilder(result.topicAppResponse_).mergeFrom(value).buildPartial();
        } else {
          result.topicAppResponse_ = value;
        }
        result.hasTopicAppResponse = true;
        return this;
      }
      public Builder clearTopicAppResponse() {
        result.hasTopicAppResponse = false;
        result.topicAppResponse_ = com.kindroid.security.util.TopicProtoc.TopicAppResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.BannerResponse bannerResponse = 8;
      public boolean hasBannerResponse() {
        return result.hasBannerResponse();
      }
      public com.kindroid.security.util.ADProtoc.BannerResponse getBannerResponse() {
        return result.getBannerResponse();
      }
      public Builder setBannerResponse(com.kindroid.security.util.ADProtoc.BannerResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBannerResponse = true;
        result.bannerResponse_ = value;
        return this;
      }
      public Builder setBannerResponse(com.kindroid.security.util.ADProtoc.BannerResponse.Builder builderForValue) {
        result.hasBannerResponse = true;
        result.bannerResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeBannerResponse(com.kindroid.security.util.ADProtoc.BannerResponse value) {
        if (result.hasBannerResponse() &&
            result.bannerResponse_ != com.kindroid.security.util.ADProtoc.BannerResponse.getDefaultInstance()) {
          result.bannerResponse_ =
            com.kindroid.security.util.ADProtoc.BannerResponse.newBuilder(result.bannerResponse_).mergeFrom(value).buildPartial();
        } else {
          result.bannerResponse_ = value;
        }
        result.hasBannerResponse = true;
        return this;
      }
      public Builder clearBannerResponse() {
        result.hasBannerResponse = false;
        result.bannerResponse_ = com.kindroid.security.util.ADProtoc.BannerResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.PasswordResponse passwordResponse = 9;
      public boolean hasPasswordResponse() {
        return result.hasPasswordResponse();
      }
      public com.kindroid.security.util.AccountProtoc.PasswordResponse getPasswordResponse() {
        return result.getPasswordResponse();
      }
      public Builder setPasswordResponse(com.kindroid.security.util.AccountProtoc.PasswordResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasPasswordResponse = true;
        result.passwordResponse_ = value;
        return this;
      }
      public Builder setPasswordResponse(com.kindroid.security.util.AccountProtoc.PasswordResponse.Builder builderForValue) {
        result.hasPasswordResponse = true;
        result.passwordResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergePasswordResponse(com.kindroid.security.util.AccountProtoc.PasswordResponse value) {
        if (result.hasPasswordResponse() &&
            result.passwordResponse_ != com.kindroid.security.util.AccountProtoc.PasswordResponse.getDefaultInstance()) {
          result.passwordResponse_ =
            com.kindroid.security.util.AccountProtoc.PasswordResponse.newBuilder(result.passwordResponse_).mergeFrom(value).buildPartial();
        } else {
          result.passwordResponse_ = value;
        }
        result.hasPasswordResponse = true;
        return this;
      }
      public Builder clearPasswordResponse() {
        result.hasPasswordResponse = false;
        result.passwordResponse_ = com.kindroid.security.util.AccountProtoc.PasswordResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.ClickResponse clickResponse = 10;
      public boolean hasClickResponse() {
        return result.hasClickResponse();
      }
      public com.kindroid.security.util.ADProtoc.ClickResponse getClickResponse() {
        return result.getClickResponse();
      }
      public Builder setClickResponse(com.kindroid.security.util.ADProtoc.ClickResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasClickResponse = true;
        result.clickResponse_ = value;
        return this;
      }
      public Builder setClickResponse(com.kindroid.security.util.ADProtoc.ClickResponse.Builder builderForValue) {
        result.hasClickResponse = true;
        result.clickResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeClickResponse(com.kindroid.security.util.ADProtoc.ClickResponse value) {
        if (result.hasClickResponse() &&
            result.clickResponse_ != com.kindroid.security.util.ADProtoc.ClickResponse.getDefaultInstance()) {
          result.clickResponse_ =
            com.kindroid.security.util.ADProtoc.ClickResponse.newBuilder(result.clickResponse_).mergeFrom(value).buildPartial();
        } else {
          result.clickResponse_ = value;
        }
        result.hasClickResponse = true;
        return this;
      }
      public Builder clearClickResponse() {
        result.hasClickResponse = false;
        result.clickResponse_ = com.kindroid.security.util.ADProtoc.ClickResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.TopicClickResponse topicClickResponse = 11;
      public boolean hasTopicClickResponse() {
        return result.hasTopicClickResponse();
      }
      public com.kindroid.security.util.TopicProtoc.TopicClickResponse getTopicClickResponse() {
        return result.getTopicClickResponse();
      }
      public Builder setTopicClickResponse(com.kindroid.security.util.TopicProtoc.TopicClickResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTopicClickResponse = true;
        result.topicClickResponse_ = value;
        return this;
      }
      public Builder setTopicClickResponse(com.kindroid.security.util.TopicProtoc.TopicClickResponse.Builder builderForValue) {
        result.hasTopicClickResponse = true;
        result.topicClickResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeTopicClickResponse(com.kindroid.security.util.TopicProtoc.TopicClickResponse value) {
        if (result.hasTopicClickResponse() &&
            result.topicClickResponse_ != com.kindroid.security.util.TopicProtoc.TopicClickResponse.getDefaultInstance()) {
          result.topicClickResponse_ =
            com.kindroid.security.util.TopicProtoc.TopicClickResponse.newBuilder(result.topicClickResponse_).mergeFrom(value).buildPartial();
        } else {
          result.topicClickResponse_ = value;
        }
        result.hasTopicClickResponse = true;
        return this;
      }
      public Builder clearTopicClickResponse() {
        result.hasTopicClickResponse = false;
        result.topicClickResponse_ = com.kindroid.security.util.TopicProtoc.TopicClickResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.CategoryClickResponse categoryClickResponse = 12;
      public boolean hasCategoryClickResponse() {
        return result.hasCategoryClickResponse();
      }
      public com.kindroid.security.util.CategoryProtoc.CategoryClickResponse getCategoryClickResponse() {
        return result.getCategoryClickResponse();
      }
      public Builder setCategoryClickResponse(com.kindroid.security.util.CategoryProtoc.CategoryClickResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasCategoryClickResponse = true;
        result.categoryClickResponse_ = value;
        return this;
      }
      public Builder setCategoryClickResponse(com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.Builder builderForValue) {
        result.hasCategoryClickResponse = true;
        result.categoryClickResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeCategoryClickResponse(com.kindroid.security.util.CategoryProtoc.CategoryClickResponse value) {
        if (result.hasCategoryClickResponse() &&
            result.categoryClickResponse_ != com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.getDefaultInstance()) {
          result.categoryClickResponse_ =
            com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.newBuilder(result.categoryClickResponse_).mergeFrom(value).buildPartial();
        } else {
          result.categoryClickResponse_ = value;
        }
        result.hasCategoryClickResponse = true;
        return this;
      }
      public Builder clearCategoryClickResponse() {
        result.hasCategoryClickResponse = false;
        result.categoryClickResponse_ = com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Response)
    }
    
    static {
      defaultInstance = new Response(true);
      com.kindroid.security.util.ResponseProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Response)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_ResponseContext_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_ResponseContext_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Response_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024ResponseProtoc.proto\022\032com.kindroid.sec" +
      "urity.util\032\023AccountProtoc.proto\032\021EmailPr" +
      "otoc.proto\032\024FeedbackProtoc.proto\032\017AppPro" +
      "toc.proto\032\021TopicProtoc.proto\032\016ADProtoc.p" +
      "roto\032\024CategoryProtoc.proto\"@\n\017ResponseCo" +
      "ntext\022\016\n\006result\030\001 \002(\005\022\r\n\005errNO\030\002 \001(\005\022\016\n\006" +
      "errMsg\030\003 \001(\t\"\330\006\n\010Response\022<\n\007context\030\001 \002" +
      "(\0132+.com.kindroid.security.util.Response" +
      "Context\022D\n\017accountResponse\030\002 \001(\0132+.com.k" +
      "indroid.security.util.AccountResponse\022@\n",
      "\remailResponse\030\003 \001(\0132).com.kindroid.secu" +
      "rity.util.EmailResponse\022F\n\020feedbackRespo" +
      "nse\030\004 \001(\0132,.com.kindroid.security.util.F" +
      "eedbackResponse\022H\n\021appSearchResponse\030\005 \001" +
      "(\0132-.com.kindroid.security.util.AppSearc" +
      "hResponse\022@\n\rtopicResponse\030\006 \001(\0132).com.k" +
      "indroid.security.util.TopicResponse\022F\n\020t" +
      "opicAppResponse\030\007 \001(\0132,.com.kindroid.sec" +
      "urity.util.TopicAppResponse\022B\n\016bannerRes" +
      "ponse\030\010 \001(\0132*.com.kindroid.security.util",
      ".BannerResponse\022F\n\020passwordResponse\030\t \001(" +
      "\0132,.com.kindroid.security.util.PasswordR" +
      "esponse\022@\n\rclickResponse\030\n \001(\0132).com.kin" +
      "droid.security.util.ClickResponse\022J\n\022top" +
      "icClickResponse\030\013 \001(\0132..com.kindroid.sec" +
      "urity.util.TopicClickResponse\022P\n\025categor" +
      "yClickResponse\030\014 \001(\01321.com.kindroid.secu" +
      "rity.util.CategoryClickResponseB\034\n\032com.k" +
      "indroid.security.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_ResponseContext_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_ResponseContext_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_ResponseContext_descriptor,
              new java.lang.String[] { "Result", "ErrNO", "ErrMsg", },
              com.kindroid.security.util.ResponseProtoc.ResponseContext.class,
              com.kindroid.security.util.ResponseProtoc.ResponseContext.Builder.class);
          internal_static_com_kindroid_security_util_Response_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Response_descriptor,
              new java.lang.String[] { "Context", "AccountResponse", "EmailResponse", "FeedbackResponse", "AppSearchResponse", "TopicResponse", "TopicAppResponse", "BannerResponse", "PasswordResponse", "ClickResponse", "TopicClickResponse", "CategoryClickResponse", },
              com.kindroid.security.util.ResponseProtoc.Response.class,
              com.kindroid.security.util.ResponseProtoc.Response.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.security.util.AccountProtoc.getDescriptor(),
          com.kindroid.security.util.EmailProtoc.getDescriptor(),
          com.kindroid.security.util.FeedbackProtoc.getDescriptor(),
          com.kindroid.security.util.AppProtoc.getDescriptor(),
          com.kindroid.security.util.TopicProtoc.getDescriptor(),
          com.kindroid.security.util.ADProtoc.getDescriptor(),
          com.kindroid.security.util.CategoryProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
