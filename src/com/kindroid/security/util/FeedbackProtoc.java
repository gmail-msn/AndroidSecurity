// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FeedbackProtoc.proto

package com.kindroid.security.util;

public final class FeedbackProtoc {
  private FeedbackProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Feedback extends
      com.google.protobuf.GeneratedMessage {
    // Use Feedback.newBuilder() to construct.
    private Feedback() {
      initFields();
    }
    private Feedback(boolean noInit) {}
    
    private static final Feedback defaultInstance;
    public static Feedback getDefaultInstance() {
      return defaultInstance;
    }
    
    public Feedback getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.FeedbackProtoc.internal_static_com_kindroid_security_util_Feedback_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.FeedbackProtoc.internal_static_com_kindroid_security_util_Feedback_fieldAccessorTable;
    }
    
    // required .com.kindroid.security.util.FeedbackType feedbackType = 1;
    public static final int FEEDBACKTYPE_FIELD_NUMBER = 1;
    private boolean hasFeedbackType;
    private com.kindroid.security.util.CommonProtoc.FeedbackType feedbackType_;
    public boolean hasFeedbackType() { return hasFeedbackType; }
    public com.kindroid.security.util.CommonProtoc.FeedbackType getFeedbackType() { return feedbackType_; }
    
    // optional string email = 2;
    public static final int EMAIL_FIELD_NUMBER = 2;
    private boolean hasEmail;
    private java.lang.String email_ = "";
    public boolean hasEmail() { return hasEmail; }
    public java.lang.String getEmail() { return email_; }
    
    // required string content = 3;
    public static final int CONTENT_FIELD_NUMBER = 3;
    private boolean hasContent;
    private java.lang.String content_ = "";
    public boolean hasContent() { return hasContent; }
    public java.lang.String getContent() { return content_; }
    
    private void initFields() {
      feedbackType_ = com.kindroid.security.util.CommonProtoc.FeedbackType.GENERAL;
    }
    public final boolean isInitialized() {
      if (!hasFeedbackType) return false;
      if (!hasContent) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFeedbackType()) {
        output.writeEnum(1, getFeedbackType().getNumber());
      }
      if (hasEmail()) {
        output.writeString(2, getEmail());
      }
      if (hasContent()) {
        output.writeString(3, getContent());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFeedbackType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getFeedbackType().getNumber());
      }
      if (hasEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getEmail());
      }
      if (hasContent()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getContent());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.Feedback parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.FeedbackProtoc.Feedback prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.FeedbackProtoc.Feedback result;
      
      // Construct using com.kindroid.security.util.FeedbackProtoc.Feedback.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.FeedbackProtoc.Feedback();
        return builder;
      }
      
      protected com.kindroid.security.util.FeedbackProtoc.Feedback internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.FeedbackProtoc.Feedback();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.FeedbackProtoc.Feedback.getDescriptor();
      }
      
      public com.kindroid.security.util.FeedbackProtoc.Feedback getDefaultInstanceForType() {
        return com.kindroid.security.util.FeedbackProtoc.Feedback.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.FeedbackProtoc.Feedback build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.FeedbackProtoc.Feedback buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.FeedbackProtoc.Feedback buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.FeedbackProtoc.Feedback returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.FeedbackProtoc.Feedback) {
          return mergeFrom((com.kindroid.security.util.FeedbackProtoc.Feedback)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.FeedbackProtoc.Feedback other) {
        if (other == com.kindroid.security.util.FeedbackProtoc.Feedback.getDefaultInstance()) return this;
        if (other.hasFeedbackType()) {
          setFeedbackType(other.getFeedbackType());
        }
        if (other.hasEmail()) {
          setEmail(other.getEmail());
        }
        if (other.hasContent()) {
          setContent(other.getContent());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.CommonProtoc.FeedbackType value = com.kindroid.security.util.CommonProtoc.FeedbackType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setFeedbackType(value);
              }
              break;
            }
            case 18: {
              setEmail(input.readString());
              break;
            }
            case 26: {
              setContent(input.readString());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.security.util.FeedbackType feedbackType = 1;
      public boolean hasFeedbackType() {
        return result.hasFeedbackType();
      }
      public com.kindroid.security.util.CommonProtoc.FeedbackType getFeedbackType() {
        return result.getFeedbackType();
      }
      public Builder setFeedbackType(com.kindroid.security.util.CommonProtoc.FeedbackType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFeedbackType = true;
        result.feedbackType_ = value;
        return this;
      }
      public Builder clearFeedbackType() {
        result.hasFeedbackType = false;
        result.feedbackType_ = com.kindroid.security.util.CommonProtoc.FeedbackType.GENERAL;
        return this;
      }
      
      // optional string email = 2;
      public boolean hasEmail() {
        return result.hasEmail();
      }
      public java.lang.String getEmail() {
        return result.getEmail();
      }
      public Builder setEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasEmail = true;
        result.email_ = value;
        return this;
      }
      public Builder clearEmail() {
        result.hasEmail = false;
        result.email_ = getDefaultInstance().getEmail();
        return this;
      }
      
      // required string content = 3;
      public boolean hasContent() {
        return result.hasContent();
      }
      public java.lang.String getContent() {
        return result.getContent();
      }
      public Builder setContent(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContent = true;
        result.content_ = value;
        return this;
      }
      public Builder clearContent() {
        result.hasContent = false;
        result.content_ = getDefaultInstance().getContent();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Feedback)
    }
    
    static {
      defaultInstance = new Feedback(true);
      com.kindroid.security.util.FeedbackProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Feedback)
  }
  
  public static final class FeedbackRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use FeedbackRequest.newBuilder() to construct.
    private FeedbackRequest() {
      initFields();
    }
    private FeedbackRequest(boolean noInit) {}
    
    private static final FeedbackRequest defaultInstance;
    public static FeedbackRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public FeedbackRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.FeedbackProtoc.internal_static_com_kindroid_security_util_FeedbackRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.FeedbackProtoc.internal_static_com_kindroid_security_util_FeedbackRequest_fieldAccessorTable;
    }
    
    // optional .com.kindroid.security.util.Feedback feedback = 1;
    public static final int FEEDBACK_FIELD_NUMBER = 1;
    private boolean hasFeedback;
    private com.kindroid.security.util.FeedbackProtoc.Feedback feedback_;
    public boolean hasFeedback() { return hasFeedback; }
    public com.kindroid.security.util.FeedbackProtoc.Feedback getFeedback() { return feedback_; }
    
    private void initFields() {
      feedback_ = com.kindroid.security.util.FeedbackProtoc.Feedback.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (hasFeedback()) {
        if (!getFeedback().isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasFeedback()) {
        output.writeMessage(1, getFeedback());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasFeedback()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getFeedback());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.FeedbackProtoc.FeedbackRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.FeedbackProtoc.FeedbackRequest result;
      
      // Construct using com.kindroid.security.util.FeedbackProtoc.FeedbackRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.FeedbackProtoc.FeedbackRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.FeedbackProtoc.FeedbackRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.FeedbackProtoc.FeedbackRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.FeedbackProtoc.FeedbackRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.FeedbackProtoc.FeedbackRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.FeedbackProtoc.FeedbackRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.FeedbackProtoc.FeedbackRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.FeedbackProtoc.FeedbackRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.FeedbackProtoc.FeedbackRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.FeedbackProtoc.FeedbackRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.FeedbackProtoc.FeedbackRequest) {
          return mergeFrom((com.kindroid.security.util.FeedbackProtoc.FeedbackRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.FeedbackProtoc.FeedbackRequest other) {
        if (other == com.kindroid.security.util.FeedbackProtoc.FeedbackRequest.getDefaultInstance()) return this;
        if (other.hasFeedback()) {
          mergeFeedback(other.getFeedback());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.FeedbackProtoc.Feedback.Builder subBuilder = com.kindroid.security.util.FeedbackProtoc.Feedback.newBuilder();
              if (hasFeedback()) {
                subBuilder.mergeFrom(getFeedback());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setFeedback(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.kindroid.security.util.Feedback feedback = 1;
      public boolean hasFeedback() {
        return result.hasFeedback();
      }
      public com.kindroid.security.util.FeedbackProtoc.Feedback getFeedback() {
        return result.getFeedback();
      }
      public Builder setFeedback(com.kindroid.security.util.FeedbackProtoc.Feedback value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasFeedback = true;
        result.feedback_ = value;
        return this;
      }
      public Builder setFeedback(com.kindroid.security.util.FeedbackProtoc.Feedback.Builder builderForValue) {
        result.hasFeedback = true;
        result.feedback_ = builderForValue.build();
        return this;
      }
      public Builder mergeFeedback(com.kindroid.security.util.FeedbackProtoc.Feedback value) {
        if (result.hasFeedback() &&
            result.feedback_ != com.kindroid.security.util.FeedbackProtoc.Feedback.getDefaultInstance()) {
          result.feedback_ =
            com.kindroid.security.util.FeedbackProtoc.Feedback.newBuilder(result.feedback_).mergeFrom(value).buildPartial();
        } else {
          result.feedback_ = value;
        }
        result.hasFeedback = true;
        return this;
      }
      public Builder clearFeedback() {
        result.hasFeedback = false;
        result.feedback_ = com.kindroid.security.util.FeedbackProtoc.Feedback.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.FeedbackRequest)
    }
    
    static {
      defaultInstance = new FeedbackRequest(true);
      com.kindroid.security.util.FeedbackProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.FeedbackRequest)
  }
  
  public static final class FeedbackResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use FeedbackResponse.newBuilder() to construct.
    private FeedbackResponse() {
      initFields();
    }
    private FeedbackResponse(boolean noInit) {}
    
    private static final FeedbackResponse defaultInstance;
    public static FeedbackResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public FeedbackResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.FeedbackProtoc.internal_static_com_kindroid_security_util_FeedbackResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.FeedbackProtoc.internal_static_com_kindroid_security_util_FeedbackResponse_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.FeedbackProtoc.FeedbackResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.FeedbackProtoc.FeedbackResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.FeedbackProtoc.FeedbackResponse result;
      
      // Construct using com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.FeedbackProtoc.FeedbackResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.FeedbackProtoc.FeedbackResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.FeedbackProtoc.FeedbackResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.FeedbackProtoc.FeedbackResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.FeedbackProtoc.FeedbackResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.FeedbackProtoc.FeedbackResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.FeedbackProtoc.FeedbackResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.FeedbackProtoc.FeedbackResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.FeedbackProtoc.FeedbackResponse) {
          return mergeFrom((com.kindroid.security.util.FeedbackProtoc.FeedbackResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.FeedbackProtoc.FeedbackResponse other) {
        if (other == com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.FeedbackResponse)
    }
    
    static {
      defaultInstance = new FeedbackResponse(true);
      com.kindroid.security.util.FeedbackProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.FeedbackResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Feedback_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Feedback_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_FeedbackRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_FeedbackRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_FeedbackResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_FeedbackResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024FeedbackProtoc.proto\022\032com.kindroid.sec" +
      "urity.util\032\022CommonProtoc.proto\"j\n\010Feedba" +
      "ck\022>\n\014feedbackType\030\001 \002(\0162(.com.kindroid." +
      "security.util.FeedbackType\022\r\n\005email\030\002 \001(" +
      "\t\022\017\n\007content\030\003 \002(\t\"I\n\017FeedbackRequest\0226\n" +
      "\010feedback\030\001 \001(\0132$.com.kindroid.security." +
      "util.Feedback\"\022\n\020FeedbackResponseB\034\n\032com" +
      ".kindroid.security.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_Feedback_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_Feedback_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Feedback_descriptor,
              new java.lang.String[] { "FeedbackType", "Email", "Content", },
              com.kindroid.security.util.FeedbackProtoc.Feedback.class,
              com.kindroid.security.util.FeedbackProtoc.Feedback.Builder.class);
          internal_static_com_kindroid_security_util_FeedbackRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_FeedbackRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_FeedbackRequest_descriptor,
              new java.lang.String[] { "Feedback", },
              com.kindroid.security.util.FeedbackProtoc.FeedbackRequest.class,
              com.kindroid.security.util.FeedbackProtoc.FeedbackRequest.Builder.class);
          internal_static_com_kindroid_security_util_FeedbackResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_security_util_FeedbackResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_FeedbackResponse_descriptor,
              new java.lang.String[] { },
              com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.class,
              com.kindroid.security.util.FeedbackProtoc.FeedbackResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.security.util.CommonProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
