// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CategoryProtoc.proto

package com.kindroid.security.util;

public final class CategoryProtoc {
  private CategoryProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Category extends
      com.google.protobuf.GeneratedMessage {
    // Use Category.newBuilder() to construct.
    private Category() {
      initFields();
    }
    private Category(boolean noInit) {}
    
    private static final Category defaultInstance;
    public static Category getDefaultInstance() {
      return defaultInstance;
    }
    
    public Category getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.CategoryProtoc.internal_static_com_kindroid_security_util_Category_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.CategoryProtoc.internal_static_com_kindroid_security_util_Category_fieldAccessorTable;
    }
    
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private boolean hasName;
    private java.lang.String name_ = "";
    public boolean hasName() { return hasName; }
    public java.lang.String getName() { return name_; }
    
    // optional int32 foreignID = 3;
    public static final int FOREIGNID_FIELD_NUMBER = 3;
    private boolean hasForeignID;
    private int foreignID_ = 0;
    public boolean hasForeignID() { return hasForeignID; }
    public int getForeignID() { return foreignID_; }
    
    // optional int32 parentID = 4;
    public static final int PARENTID_FIELD_NUMBER = 4;
    private boolean hasParentID;
    private int parentID_ = 0;
    public boolean hasParentID() { return hasParentID; }
    public int getParentID() { return parentID_; }
    
    // optional bytes image = 5;
    public static final int IMAGE_FIELD_NUMBER = 5;
    private boolean hasImage;
    private com.google.protobuf.ByteString image_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasImage() { return hasImage; }
    public com.google.protobuf.ByteString getImage() { return image_; }
    
    // optional int32 status = 6;
    public static final int STATUS_FIELD_NUMBER = 6;
    private boolean hasStatus;
    private int status_ = 0;
    public boolean hasStatus() { return hasStatus; }
    public int getStatus() { return status_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasName()) {
        output.writeString(2, getName());
      }
      if (hasForeignID()) {
        output.writeInt32(3, getForeignID());
      }
      if (hasParentID()) {
        output.writeInt32(4, getParentID());
      }
      if (hasImage()) {
        output.writeBytes(5, getImage());
      }
      if (hasStatus()) {
        output.writeInt32(6, getStatus());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getName());
      }
      if (hasForeignID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getForeignID());
      }
      if (hasParentID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getParentID());
      }
      if (hasImage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getImage());
      }
      if (hasStatus()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, getStatus());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.Category parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.CategoryProtoc.Category prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.CategoryProtoc.Category result;
      
      // Construct using com.kindroid.security.util.CategoryProtoc.Category.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.CategoryProtoc.Category();
        return builder;
      }
      
      protected com.kindroid.security.util.CategoryProtoc.Category internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.CategoryProtoc.Category();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.CategoryProtoc.Category.getDescriptor();
      }
      
      public com.kindroid.security.util.CategoryProtoc.Category getDefaultInstanceForType() {
        return com.kindroid.security.util.CategoryProtoc.Category.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.CategoryProtoc.Category build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.CategoryProtoc.Category buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.CategoryProtoc.Category buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.CategoryProtoc.Category returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.CategoryProtoc.Category) {
          return mergeFrom((com.kindroid.security.util.CategoryProtoc.Category)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.CategoryProtoc.Category other) {
        if (other == com.kindroid.security.util.CategoryProtoc.Category.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasName()) {
          setName(other.getName());
        }
        if (other.hasForeignID()) {
          setForeignID(other.getForeignID());
        }
        if (other.hasParentID()) {
          setParentID(other.getParentID());
        }
        if (other.hasImage()) {
          setImage(other.getImage());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              setName(input.readString());
              break;
            }
            case 24: {
              setForeignID(input.readInt32());
              break;
            }
            case 32: {
              setParentID(input.readInt32());
              break;
            }
            case 42: {
              setImage(input.readBytes());
              break;
            }
            case 48: {
              setStatus(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional string name = 2;
      public boolean hasName() {
        return result.hasName();
      }
      public java.lang.String getName() {
        return result.getName();
      }
      public Builder setName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasName = true;
        result.name_ = value;
        return this;
      }
      public Builder clearName() {
        result.hasName = false;
        result.name_ = getDefaultInstance().getName();
        return this;
      }
      
      // optional int32 foreignID = 3;
      public boolean hasForeignID() {
        return result.hasForeignID();
      }
      public int getForeignID() {
        return result.getForeignID();
      }
      public Builder setForeignID(int value) {
        result.hasForeignID = true;
        result.foreignID_ = value;
        return this;
      }
      public Builder clearForeignID() {
        result.hasForeignID = false;
        result.foreignID_ = 0;
        return this;
      }
      
      // optional int32 parentID = 4;
      public boolean hasParentID() {
        return result.hasParentID();
      }
      public int getParentID() {
        return result.getParentID();
      }
      public Builder setParentID(int value) {
        result.hasParentID = true;
        result.parentID_ = value;
        return this;
      }
      public Builder clearParentID() {
        result.hasParentID = false;
        result.parentID_ = 0;
        return this;
      }
      
      // optional bytes image = 5;
      public boolean hasImage() {
        return result.hasImage();
      }
      public com.google.protobuf.ByteString getImage() {
        return result.getImage();
      }
      public Builder setImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImage = true;
        result.image_ = value;
        return this;
      }
      public Builder clearImage() {
        result.hasImage = false;
        result.image_ = getDefaultInstance().getImage();
        return this;
      }
      
      // optional int32 status = 6;
      public boolean hasStatus() {
        return result.hasStatus();
      }
      public int getStatus() {
        return result.getStatus();
      }
      public Builder setStatus(int value) {
        result.hasStatus = true;
        result.status_ = value;
        return this;
      }
      public Builder clearStatus() {
        result.hasStatus = false;
        result.status_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Category)
    }
    
    static {
      defaultInstance = new Category(true);
      com.kindroid.security.util.CategoryProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Category)
  }
  
  public static final class CategoryClickRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use CategoryClickRequest.newBuilder() to construct.
    private CategoryClickRequest() {
      initFields();
    }
    private CategoryClickRequest(boolean noInit) {}
    
    private static final CategoryClickRequest defaultInstance;
    public static CategoryClickRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public CategoryClickRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.CategoryProtoc.internal_static_com_kindroid_security_util_CategoryClickRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.CategoryProtoc.internal_static_com_kindroid_security_util_CategoryClickRequest_fieldAccessorTable;
    }
    
    // required int32 categoryID = 1;
    public static final int CATEGORYID_FIELD_NUMBER = 1;
    private boolean hasCategoryID;
    private int categoryID_ = 0;
    public boolean hasCategoryID() { return hasCategoryID; }
    public int getCategoryID() { return categoryID_; }
    
    // required int32 foreignID = 2;
    public static final int FOREIGNID_FIELD_NUMBER = 2;
    private boolean hasForeignID;
    private int foreignID_ = 0;
    public boolean hasForeignID() { return hasForeignID; }
    public int getForeignID() { return foreignID_; }
    
    // required int32 partnerID = 3;
    public static final int PARTNERID_FIELD_NUMBER = 3;
    private boolean hasPartnerID;
    private int partnerID_ = 0;
    public boolean hasPartnerID() { return hasPartnerID; }
    public int getPartnerID() { return partnerID_; }
    
    // optional int32 startIndex = 4;
    public static final int STARTINDEX_FIELD_NUMBER = 4;
    private boolean hasStartIndex;
    private int startIndex_ = 0;
    public boolean hasStartIndex() { return hasStartIndex; }
    public int getStartIndex() { return startIndex_; }
    
    // optional int32 entriesCount = 5;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 5;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasCategoryID) return false;
      if (!hasForeignID) return false;
      if (!hasPartnerID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCategoryID()) {
        output.writeInt32(1, getCategoryID());
      }
      if (hasForeignID()) {
        output.writeInt32(2, getForeignID());
      }
      if (hasPartnerID()) {
        output.writeInt32(3, getPartnerID());
      }
      if (hasStartIndex()) {
        output.writeInt32(4, getStartIndex());
      }
      if (hasEntriesCount()) {
        output.writeInt32(5, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCategoryID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCategoryID());
      }
      if (hasForeignID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getForeignID());
      }
      if (hasPartnerID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getPartnerID());
      }
      if (hasStartIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getStartIndex());
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.CategoryProtoc.CategoryClickRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.CategoryProtoc.CategoryClickRequest result;
      
      // Construct using com.kindroid.security.util.CategoryProtoc.CategoryClickRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.CategoryProtoc.CategoryClickRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.CategoryProtoc.CategoryClickRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.CategoryProtoc.CategoryClickRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.CategoryProtoc.CategoryClickRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.CategoryProtoc.CategoryClickRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.CategoryProtoc.CategoryClickRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.CategoryProtoc.CategoryClickRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.CategoryProtoc.CategoryClickRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.CategoryProtoc.CategoryClickRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.CategoryProtoc.CategoryClickRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.CategoryProtoc.CategoryClickRequest) {
          return mergeFrom((com.kindroid.security.util.CategoryProtoc.CategoryClickRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.CategoryProtoc.CategoryClickRequest other) {
        if (other == com.kindroid.security.util.CategoryProtoc.CategoryClickRequest.getDefaultInstance()) return this;
        if (other.hasCategoryID()) {
          setCategoryID(other.getCategoryID());
        }
        if (other.hasForeignID()) {
          setForeignID(other.getForeignID());
        }
        if (other.hasPartnerID()) {
          setPartnerID(other.getPartnerID());
        }
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCategoryID(input.readInt32());
              break;
            }
            case 16: {
              setForeignID(input.readInt32());
              break;
            }
            case 24: {
              setPartnerID(input.readInt32());
              break;
            }
            case 32: {
              setStartIndex(input.readInt32());
              break;
            }
            case 40: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 categoryID = 1;
      public boolean hasCategoryID() {
        return result.hasCategoryID();
      }
      public int getCategoryID() {
        return result.getCategoryID();
      }
      public Builder setCategoryID(int value) {
        result.hasCategoryID = true;
        result.categoryID_ = value;
        return this;
      }
      public Builder clearCategoryID() {
        result.hasCategoryID = false;
        result.categoryID_ = 0;
        return this;
      }
      
      // required int32 foreignID = 2;
      public boolean hasForeignID() {
        return result.hasForeignID();
      }
      public int getForeignID() {
        return result.getForeignID();
      }
      public Builder setForeignID(int value) {
        result.hasForeignID = true;
        result.foreignID_ = value;
        return this;
      }
      public Builder clearForeignID() {
        result.hasForeignID = false;
        result.foreignID_ = 0;
        return this;
      }
      
      // required int32 partnerID = 3;
      public boolean hasPartnerID() {
        return result.hasPartnerID();
      }
      public int getPartnerID() {
        return result.getPartnerID();
      }
      public Builder setPartnerID(int value) {
        result.hasPartnerID = true;
        result.partnerID_ = value;
        return this;
      }
      public Builder clearPartnerID() {
        result.hasPartnerID = false;
        result.partnerID_ = 0;
        return this;
      }
      
      // optional int32 startIndex = 4;
      public boolean hasStartIndex() {
        return result.hasStartIndex();
      }
      public int getStartIndex() {
        return result.getStartIndex();
      }
      public Builder setStartIndex(int value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder clearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0;
        return this;
      }
      
      // optional int32 entriesCount = 5;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.CategoryClickRequest)
    }
    
    static {
      defaultInstance = new CategoryClickRequest(true);
      com.kindroid.security.util.CategoryProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.CategoryClickRequest)
  }
  
  public static final class CategoryClickResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use CategoryClickResponse.newBuilder() to construct.
    private CategoryClickResponse() {
      initFields();
    }
    private CategoryClickResponse(boolean noInit) {}
    
    private static final CategoryClickResponse defaultInstance;
    public static CategoryClickResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public CategoryClickResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.CategoryProtoc.internal_static_com_kindroid_security_util_CategoryClickResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.CategoryProtoc.internal_static_com_kindroid_security_util_CategoryClickResponse_fieldAccessorTable;
    }
    
    // optional int32 categoryID = 1;
    public static final int CATEGORYID_FIELD_NUMBER = 1;
    private boolean hasCategoryID;
    private int categoryID_ = 0;
    public boolean hasCategoryID() { return hasCategoryID; }
    public int getCategoryID() { return categoryID_; }
    
    // optional int32 foreignID = 2;
    public static final int FOREIGNID_FIELD_NUMBER = 2;
    private boolean hasForeignID;
    private int foreignID_ = 0;
    public boolean hasForeignID() { return hasForeignID; }
    public int getForeignID() { return foreignID_; }
    
    // optional int32 partnerID = 3;
    public static final int PARTNERID_FIELD_NUMBER = 3;
    private boolean hasPartnerID;
    private int partnerID_ = 0;
    public boolean hasPartnerID() { return hasPartnerID; }
    public int getPartnerID() { return partnerID_; }
    
    // required .com.kindroid.security.util.ResultType resultType = 4;
    public static final int RESULTTYPE_FIELD_NUMBER = 4;
    private boolean hasResultType;
    private com.kindroid.security.util.CommonProtoc.ResultType resultType_;
    public boolean hasResultType() { return hasResultType; }
    public com.kindroid.security.util.CommonProtoc.ResultType getResultType() { return resultType_; }
    
    // repeated .com.kindroid.security.util.App app = 5;
    public static final int APP_FIELD_NUMBER = 5;
    private java.util.List<com.kindroid.security.util.AppProtoc.App> app_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.AppProtoc.App> getAppList() {
      return app_;
    }
    public int getAppCount() { return app_.size(); }
    public com.kindroid.security.util.AppProtoc.App getApp(int index) {
      return app_.get(index);
    }
    
    // repeated .com.kindroid.security.util.Category category = 6;
    public static final int CATEGORY_FIELD_NUMBER = 6;
    private java.util.List<com.kindroid.security.util.CategoryProtoc.Category> category_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.CategoryProtoc.Category> getCategoryList() {
      return category_;
    }
    public int getCategoryCount() { return category_.size(); }
    public com.kindroid.security.util.CategoryProtoc.Category getCategory(int index) {
      return category_.get(index);
    }
    
    // optional int32 entriesCount = 7;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 7;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
      resultType_ = com.kindroid.security.util.CommonProtoc.ResultType.RESULT_APP;
    }
    public final boolean isInitialized() {
      if (!hasResultType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasCategoryID()) {
        output.writeInt32(1, getCategoryID());
      }
      if (hasForeignID()) {
        output.writeInt32(2, getForeignID());
      }
      if (hasPartnerID()) {
        output.writeInt32(3, getPartnerID());
      }
      if (hasResultType()) {
        output.writeEnum(4, getResultType().getNumber());
      }
      for (com.kindroid.security.util.AppProtoc.App element : getAppList()) {
        output.writeMessage(5, element);
      }
      for (com.kindroid.security.util.CategoryProtoc.Category element : getCategoryList()) {
        output.writeMessage(6, element);
      }
      if (hasEntriesCount()) {
        output.writeInt32(7, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasCategoryID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getCategoryID());
      }
      if (hasForeignID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getForeignID());
      }
      if (hasPartnerID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getPartnerID());
      }
      if (hasResultType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getResultType().getNumber());
      }
      for (com.kindroid.security.util.AppProtoc.App element : getAppList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, element);
      }
      for (com.kindroid.security.util.CategoryProtoc.Category element : getCategoryList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, element);
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.CategoryProtoc.CategoryClickResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.CategoryProtoc.CategoryClickResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.CategoryProtoc.CategoryClickResponse result;
      
      // Construct using com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.CategoryProtoc.CategoryClickResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.CategoryProtoc.CategoryClickResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.CategoryProtoc.CategoryClickResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.CategoryProtoc.CategoryClickResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.CategoryProtoc.CategoryClickResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.CategoryProtoc.CategoryClickResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.CategoryProtoc.CategoryClickResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.app_ != java.util.Collections.EMPTY_LIST) {
          result.app_ =
            java.util.Collections.unmodifiableList(result.app_);
        }
        if (result.category_ != java.util.Collections.EMPTY_LIST) {
          result.category_ =
            java.util.Collections.unmodifiableList(result.category_);
        }
        com.kindroid.security.util.CategoryProtoc.CategoryClickResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.CategoryProtoc.CategoryClickResponse) {
          return mergeFrom((com.kindroid.security.util.CategoryProtoc.CategoryClickResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.CategoryProtoc.CategoryClickResponse other) {
        if (other == com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.getDefaultInstance()) return this;
        if (other.hasCategoryID()) {
          setCategoryID(other.getCategoryID());
        }
        if (other.hasForeignID()) {
          setForeignID(other.getForeignID());
        }
        if (other.hasPartnerID()) {
          setPartnerID(other.getPartnerID());
        }
        if (other.hasResultType()) {
          setResultType(other.getResultType());
        }
        if (!other.app_.isEmpty()) {
          if (result.app_.isEmpty()) {
            result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
          }
          result.app_.addAll(other.app_);
        }
        if (!other.category_.isEmpty()) {
          if (result.category_.isEmpty()) {
            result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
          }
          result.category_.addAll(other.category_);
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setCategoryID(input.readInt32());
              break;
            }
            case 16: {
              setForeignID(input.readInt32());
              break;
            }
            case 24: {
              setPartnerID(input.readInt32());
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.CommonProtoc.ResultType value = com.kindroid.security.util.CommonProtoc.ResultType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                setResultType(value);
              }
              break;
            }
            case 42: {
              com.kindroid.security.util.AppProtoc.App.Builder subBuilder = com.kindroid.security.util.AppProtoc.App.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addApp(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.kindroid.security.util.CategoryProtoc.Category.Builder subBuilder = com.kindroid.security.util.CategoryProtoc.Category.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addCategory(subBuilder.buildPartial());
              break;
            }
            case 56: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 categoryID = 1;
      public boolean hasCategoryID() {
        return result.hasCategoryID();
      }
      public int getCategoryID() {
        return result.getCategoryID();
      }
      public Builder setCategoryID(int value) {
        result.hasCategoryID = true;
        result.categoryID_ = value;
        return this;
      }
      public Builder clearCategoryID() {
        result.hasCategoryID = false;
        result.categoryID_ = 0;
        return this;
      }
      
      // optional int32 foreignID = 2;
      public boolean hasForeignID() {
        return result.hasForeignID();
      }
      public int getForeignID() {
        return result.getForeignID();
      }
      public Builder setForeignID(int value) {
        result.hasForeignID = true;
        result.foreignID_ = value;
        return this;
      }
      public Builder clearForeignID() {
        result.hasForeignID = false;
        result.foreignID_ = 0;
        return this;
      }
      
      // optional int32 partnerID = 3;
      public boolean hasPartnerID() {
        return result.hasPartnerID();
      }
      public int getPartnerID() {
        return result.getPartnerID();
      }
      public Builder setPartnerID(int value) {
        result.hasPartnerID = true;
        result.partnerID_ = value;
        return this;
      }
      public Builder clearPartnerID() {
        result.hasPartnerID = false;
        result.partnerID_ = 0;
        return this;
      }
      
      // required .com.kindroid.security.util.ResultType resultType = 4;
      public boolean hasResultType() {
        return result.hasResultType();
      }
      public com.kindroid.security.util.CommonProtoc.ResultType getResultType() {
        return result.getResultType();
      }
      public Builder setResultType(com.kindroid.security.util.CommonProtoc.ResultType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasResultType = true;
        result.resultType_ = value;
        return this;
      }
      public Builder clearResultType() {
        result.hasResultType = false;
        result.resultType_ = com.kindroid.security.util.CommonProtoc.ResultType.RESULT_APP;
        return this;
      }
      
      // repeated .com.kindroid.security.util.App app = 5;
      public java.util.List<com.kindroid.security.util.AppProtoc.App> getAppList() {
        return java.util.Collections.unmodifiableList(result.app_);
      }
      public int getAppCount() {
        return result.getAppCount();
      }
      public com.kindroid.security.util.AppProtoc.App getApp(int index) {
        return result.getApp(index);
      }
      public Builder setApp(int index, com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.app_.set(index, value);
        return this;
      }
      public Builder setApp(int index, com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        result.app_.set(index, builderForValue.build());
        return this;
      }
      public Builder addApp(com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        result.app_.add(value);
        return this;
      }
      public Builder addApp(com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        result.app_.add(builderForValue.build());
        return this;
      }
      public Builder addAllApp(
          java.lang.Iterable<? extends com.kindroid.security.util.AppProtoc.App> values) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.AppProtoc.App>();
        }
        super.addAll(values, result.app_);
        return this;
      }
      public Builder clearApp() {
        result.app_ = java.util.Collections.emptyList();
        return this;
      }
      
      // repeated .com.kindroid.security.util.Category category = 6;
      public java.util.List<com.kindroid.security.util.CategoryProtoc.Category> getCategoryList() {
        return java.util.Collections.unmodifiableList(result.category_);
      }
      public int getCategoryCount() {
        return result.getCategoryCount();
      }
      public com.kindroid.security.util.CategoryProtoc.Category getCategory(int index) {
        return result.getCategory(index);
      }
      public Builder setCategory(int index, com.kindroid.security.util.CategoryProtoc.Category value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.category_.set(index, value);
        return this;
      }
      public Builder setCategory(int index, com.kindroid.security.util.CategoryProtoc.Category.Builder builderForValue) {
        result.category_.set(index, builderForValue.build());
        return this;
      }
      public Builder addCategory(com.kindroid.security.util.CategoryProtoc.Category value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.category_.isEmpty()) {
          result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
        }
        result.category_.add(value);
        return this;
      }
      public Builder addCategory(com.kindroid.security.util.CategoryProtoc.Category.Builder builderForValue) {
        if (result.category_.isEmpty()) {
          result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
        }
        result.category_.add(builderForValue.build());
        return this;
      }
      public Builder addAllCategory(
          java.lang.Iterable<? extends com.kindroid.security.util.CategoryProtoc.Category> values) {
        if (result.category_.isEmpty()) {
          result.category_ = new java.util.ArrayList<com.kindroid.security.util.CategoryProtoc.Category>();
        }
        super.addAll(values, result.category_);
        return this;
      }
      public Builder clearCategory() {
        result.category_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 entriesCount = 7;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.CategoryClickResponse)
    }
    
    static {
      defaultInstance = new CategoryClickResponse(true);
      com.kindroid.security.util.CategoryProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.CategoryClickResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Category_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Category_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_CategoryClickRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_CategoryClickRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_CategoryClickResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_CategoryClickResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\024CategoryProtoc.proto\022\032com.kindroid.sec" +
      "urity.util\032\022CommonProtoc.proto\032\017AppProto" +
      "c.proto\"h\n\010Category\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030" +
      "\002 \001(\t\022\021\n\tforeignID\030\003 \001(\005\022\020\n\010parentID\030\004 \001" +
      "(\005\022\r\n\005image\030\005 \001(\014\022\016\n\006status\030\006 \001(\005\"z\n\024Cat" +
      "egoryClickRequest\022\022\n\ncategoryID\030\001 \002(\005\022\021\n" +
      "\tforeignID\030\002 \002(\005\022\021\n\tpartnerID\030\003 \002(\005\022\022\n\ns" +
      "tartIndex\030\004 \001(\005\022\024\n\014entriesCount\030\005 \001(\005\"\211\002" +
      "\n\025CategoryClickResponse\022\022\n\ncategoryID\030\001 " +
      "\001(\005\022\021\n\tforeignID\030\002 \001(\005\022\021\n\tpartnerID\030\003 \001(",
      "\005\022:\n\nresultType\030\004 \002(\0162&.com.kindroid.sec" +
      "urity.util.ResultType\022,\n\003app\030\005 \003(\0132\037.com" +
      ".kindroid.security.util.App\0226\n\010category\030" +
      "\006 \003(\0132$.com.kindroid.security.util.Categ" +
      "ory\022\024\n\014entriesCount\030\007 \001(\005B\034\n\032com.kindroi" +
      "d.security.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_Category_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_Category_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Category_descriptor,
              new java.lang.String[] { "Id", "Name", "ForeignID", "ParentID", "Image", "Status", },
              com.kindroid.security.util.CategoryProtoc.Category.class,
              com.kindroid.security.util.CategoryProtoc.Category.Builder.class);
          internal_static_com_kindroid_security_util_CategoryClickRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_CategoryClickRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_CategoryClickRequest_descriptor,
              new java.lang.String[] { "CategoryID", "ForeignID", "PartnerID", "StartIndex", "EntriesCount", },
              com.kindroid.security.util.CategoryProtoc.CategoryClickRequest.class,
              com.kindroid.security.util.CategoryProtoc.CategoryClickRequest.Builder.class);
          internal_static_com_kindroid_security_util_CategoryClickResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_security_util_CategoryClickResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_CategoryClickResponse_descriptor,
              new java.lang.String[] { "CategoryID", "ForeignID", "PartnerID", "ResultType", "App", "Category", "EntriesCount", },
              com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.class,
              com.kindroid.security.util.CategoryProtoc.CategoryClickResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.security.util.CommonProtoc.getDescriptor(),
          com.kindroid.security.util.AppProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
