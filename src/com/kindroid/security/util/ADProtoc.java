// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ADProtoc.proto

package com.kindroid.security.util;

public final class ADProtoc {
  private ADProtoc() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class Advert extends
      com.google.protobuf.GeneratedMessage {
    // Use Advert.newBuilder() to construct.
    private Advert() {
      initFields();
    }
    private Advert(boolean noInit) {}
    
    private static final Advert defaultInstance;
    public static Advert getDefaultInstance() {
      return defaultInstance;
    }
    
    public Advert getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_Advert_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_Advert_fieldAccessorTable;
    }
    
    // required int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional bytes image = 2;
    public static final int IMAGE_FIELD_NUMBER = 2;
    private boolean hasImage;
    private com.google.protobuf.ByteString image_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasImage() { return hasImage; }
    public com.google.protobuf.ByteString getImage() { return image_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasId) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasImage()) {
        output.writeBytes(2, getImage());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasImage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getImage());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.Advert parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ADProtoc.Advert prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ADProtoc.Advert result;
      
      // Construct using com.kindroid.security.util.ADProtoc.Advert.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ADProtoc.Advert();
        return builder;
      }
      
      protected com.kindroid.security.util.ADProtoc.Advert internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ADProtoc.Advert();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ADProtoc.Advert.getDescriptor();
      }
      
      public com.kindroid.security.util.ADProtoc.Advert getDefaultInstanceForType() {
        return com.kindroid.security.util.ADProtoc.Advert.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ADProtoc.Advert build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ADProtoc.Advert buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ADProtoc.Advert buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.ADProtoc.Advert returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ADProtoc.Advert) {
          return mergeFrom((com.kindroid.security.util.ADProtoc.Advert)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ADProtoc.Advert other) {
        if (other == com.kindroid.security.util.ADProtoc.Advert.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasImage()) {
          setImage(other.getImage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              setImage(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // required int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional bytes image = 2;
      public boolean hasImage() {
        return result.hasImage();
      }
      public com.google.protobuf.ByteString getImage() {
        return result.getImage();
      }
      public Builder setImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImage = true;
        result.image_ = value;
        return this;
      }
      public Builder clearImage() {
        result.hasImage = false;
        result.image_ = getDefaultInstance().getImage();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Advert)
    }
    
    static {
      defaultInstance = new Advert(true);
      com.kindroid.security.util.ADProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Advert)
  }
  
  public static final class BannerRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use BannerRequest.newBuilder() to construct.
    private BannerRequest() {
      initFields();
    }
    private BannerRequest(boolean noInit) {}
    
    private static final BannerRequest defaultInstance;
    public static BannerRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public BannerRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_BannerRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_BannerRequest_fieldAccessorTable;
    }
    
    // required .com.kindroid.security.util.BannerType bannerType = 1;
    public static final int BANNERTYPE_FIELD_NUMBER = 1;
    private boolean hasBannerType;
    private com.kindroid.security.util.CommonProtoc.BannerType bannerType_;
    public boolean hasBannerType() { return hasBannerType; }
    public com.kindroid.security.util.CommonProtoc.BannerType getBannerType() { return bannerType_; }
    
    // optional int32 topicID = 2;
    public static final int TOPICID_FIELD_NUMBER = 2;
    private boolean hasTopicID;
    private int topicID_ = 0;
    public boolean hasTopicID() { return hasTopicID; }
    public int getTopicID() { return topicID_; }
    
    private void initFields() {
      bannerType_ = com.kindroid.security.util.CommonProtoc.BannerType.PROMOTION_BANNER;
    }
    public final boolean isInitialized() {
      if (!hasBannerType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasBannerType()) {
        output.writeEnum(1, getBannerType().getNumber());
      }
      if (hasTopicID()) {
        output.writeInt32(2, getTopicID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasBannerType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getBannerType().getNumber());
      }
      if (hasTopicID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getTopicID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ADProtoc.BannerRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ADProtoc.BannerRequest result;
      
      // Construct using com.kindroid.security.util.ADProtoc.BannerRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ADProtoc.BannerRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.ADProtoc.BannerRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ADProtoc.BannerRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ADProtoc.BannerRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.ADProtoc.BannerRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.ADProtoc.BannerRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ADProtoc.BannerRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ADProtoc.BannerRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ADProtoc.BannerRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.ADProtoc.BannerRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ADProtoc.BannerRequest) {
          return mergeFrom((com.kindroid.security.util.ADProtoc.BannerRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ADProtoc.BannerRequest other) {
        if (other == com.kindroid.security.util.ADProtoc.BannerRequest.getDefaultInstance()) return this;
        if (other.hasBannerType()) {
          setBannerType(other.getBannerType());
        }
        if (other.hasTopicID()) {
          setTopicID(other.getTopicID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.CommonProtoc.BannerType value = com.kindroid.security.util.CommonProtoc.BannerType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setBannerType(value);
              }
              break;
            }
            case 16: {
              setTopicID(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.security.util.BannerType bannerType = 1;
      public boolean hasBannerType() {
        return result.hasBannerType();
      }
      public com.kindroid.security.util.CommonProtoc.BannerType getBannerType() {
        return result.getBannerType();
      }
      public Builder setBannerType(com.kindroid.security.util.CommonProtoc.BannerType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasBannerType = true;
        result.bannerType_ = value;
        return this;
      }
      public Builder clearBannerType() {
        result.hasBannerType = false;
        result.bannerType_ = com.kindroid.security.util.CommonProtoc.BannerType.PROMOTION_BANNER;
        return this;
      }
      
      // optional int32 topicID = 2;
      public boolean hasTopicID() {
        return result.hasTopicID();
      }
      public int getTopicID() {
        return result.getTopicID();
      }
      public Builder setTopicID(int value) {
        result.hasTopicID = true;
        result.topicID_ = value;
        return this;
      }
      public Builder clearTopicID() {
        result.hasTopicID = false;
        result.topicID_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.BannerRequest)
    }
    
    static {
      defaultInstance = new BannerRequest(true);
      com.kindroid.security.util.ADProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.BannerRequest)
  }
  
  public static final class BannerResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use BannerResponse.newBuilder() to construct.
    private BannerResponse() {
      initFields();
    }
    private BannerResponse(boolean noInit) {}
    
    private static final BannerResponse defaultInstance;
    public static BannerResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public BannerResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_BannerResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_BannerResponse_fieldAccessorTable;
    }
    
    // repeated bytes image = 1;
    public static final int IMAGE_FIELD_NUMBER = 1;
    private java.util.List<com.google.protobuf.ByteString> image_ =
      java.util.Collections.emptyList();
    public java.util.List<com.google.protobuf.ByteString> getImageList() {
      return image_;
    }
    public int getImageCount() { return image_.size(); }
    public com.google.protobuf.ByteString getImage(int index) {
      return image_.get(index);
    }
    
    // optional int32 topicID = 2;
    public static final int TOPICID_FIELD_NUMBER = 2;
    private boolean hasTopicID;
    private int topicID_ = 0;
    public boolean hasTopicID() { return hasTopicID; }
    public int getTopicID() { return topicID_; }
    
    // optional int32 entriesCount = 3;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 3;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    // repeated .com.kindroid.security.util.Advert advert = 4;
    public static final int ADVERT_FIELD_NUMBER = 4;
    private java.util.List<com.kindroid.security.util.ADProtoc.Advert> advert_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.ADProtoc.Advert> getAdvertList() {
      return advert_;
    }
    public int getAdvertCount() { return advert_.size(); }
    public com.kindroid.security.util.ADProtoc.Advert getAdvert(int index) {
      return advert_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      for (com.kindroid.security.util.ADProtoc.Advert element : getAdvertList()) {
        if (!element.isInitialized()) return false;
      }
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.google.protobuf.ByteString element : getImageList()) {
        output.writeBytes(1, element);
      }
      if (hasTopicID()) {
        output.writeInt32(2, getTopicID());
      }
      if (hasEntriesCount()) {
        output.writeInt32(3, getEntriesCount());
      }
      for (com.kindroid.security.util.ADProtoc.Advert element : getAdvertList()) {
        output.writeMessage(4, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (com.google.protobuf.ByteString element : getImageList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getImageList().size();
      }
      if (hasTopicID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getTopicID());
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, getEntriesCount());
      }
      for (com.kindroid.security.util.ADProtoc.Advert element : getAdvertList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, element);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.BannerResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ADProtoc.BannerResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ADProtoc.BannerResponse result;
      
      // Construct using com.kindroid.security.util.ADProtoc.BannerResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ADProtoc.BannerResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.ADProtoc.BannerResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ADProtoc.BannerResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ADProtoc.BannerResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.ADProtoc.BannerResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.ADProtoc.BannerResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ADProtoc.BannerResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ADProtoc.BannerResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ADProtoc.BannerResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.image_ != java.util.Collections.EMPTY_LIST) {
          result.image_ =
            java.util.Collections.unmodifiableList(result.image_);
        }
        if (result.advert_ != java.util.Collections.EMPTY_LIST) {
          result.advert_ =
            java.util.Collections.unmodifiableList(result.advert_);
        }
        com.kindroid.security.util.ADProtoc.BannerResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ADProtoc.BannerResponse) {
          return mergeFrom((com.kindroid.security.util.ADProtoc.BannerResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ADProtoc.BannerResponse other) {
        if (other == com.kindroid.security.util.ADProtoc.BannerResponse.getDefaultInstance()) return this;
        if (!other.image_.isEmpty()) {
          if (result.image_.isEmpty()) {
            result.image_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
          }
          result.image_.addAll(other.image_);
        }
        if (other.hasTopicID()) {
          setTopicID(other.getTopicID());
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        if (!other.advert_.isEmpty()) {
          if (result.advert_.isEmpty()) {
            result.advert_ = new java.util.ArrayList<com.kindroid.security.util.ADProtoc.Advert>();
          }
          result.advert_.addAll(other.advert_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addImage(input.readBytes());
              break;
            }
            case 16: {
              setTopicID(input.readInt32());
              break;
            }
            case 24: {
              setEntriesCount(input.readInt32());
              break;
            }
            case 34: {
              com.kindroid.security.util.ADProtoc.Advert.Builder subBuilder = com.kindroid.security.util.ADProtoc.Advert.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addAdvert(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // repeated bytes image = 1;
      public java.util.List<com.google.protobuf.ByteString> getImageList() {
        return java.util.Collections.unmodifiableList(result.image_);
      }
      public int getImageCount() {
        return result.getImageCount();
      }
      public com.google.protobuf.ByteString getImage(int index) {
        return result.getImage(index);
      }
      public Builder setImage(int index, com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.image_.set(index, value);
        return this;
      }
      public Builder addImage(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.image_.isEmpty()) {
          result.image_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        result.image_.add(value);
        return this;
      }
      public Builder addAllImage(
          java.lang.Iterable<? extends com.google.protobuf.ByteString> values) {
        if (result.image_.isEmpty()) {
          result.image_ = new java.util.ArrayList<com.google.protobuf.ByteString>();
        }
        super.addAll(values, result.image_);
        return this;
      }
      public Builder clearImage() {
        result.image_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 topicID = 2;
      public boolean hasTopicID() {
        return result.hasTopicID();
      }
      public int getTopicID() {
        return result.getTopicID();
      }
      public Builder setTopicID(int value) {
        result.hasTopicID = true;
        result.topicID_ = value;
        return this;
      }
      public Builder clearTopicID() {
        result.hasTopicID = false;
        result.topicID_ = 0;
        return this;
      }
      
      // optional int32 entriesCount = 3;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // repeated .com.kindroid.security.util.Advert advert = 4;
      public java.util.List<com.kindroid.security.util.ADProtoc.Advert> getAdvertList() {
        return java.util.Collections.unmodifiableList(result.advert_);
      }
      public int getAdvertCount() {
        return result.getAdvertCount();
      }
      public com.kindroid.security.util.ADProtoc.Advert getAdvert(int index) {
        return result.getAdvert(index);
      }
      public Builder setAdvert(int index, com.kindroid.security.util.ADProtoc.Advert value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.advert_.set(index, value);
        return this;
      }
      public Builder setAdvert(int index, com.kindroid.security.util.ADProtoc.Advert.Builder builderForValue) {
        result.advert_.set(index, builderForValue.build());
        return this;
      }
      public Builder addAdvert(com.kindroid.security.util.ADProtoc.Advert value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.advert_.isEmpty()) {
          result.advert_ = new java.util.ArrayList<com.kindroid.security.util.ADProtoc.Advert>();
        }
        result.advert_.add(value);
        return this;
      }
      public Builder addAdvert(com.kindroid.security.util.ADProtoc.Advert.Builder builderForValue) {
        if (result.advert_.isEmpty()) {
          result.advert_ = new java.util.ArrayList<com.kindroid.security.util.ADProtoc.Advert>();
        }
        result.advert_.add(builderForValue.build());
        return this;
      }
      public Builder addAllAdvert(
          java.lang.Iterable<? extends com.kindroid.security.util.ADProtoc.Advert> values) {
        if (result.advert_.isEmpty()) {
          result.advert_ = new java.util.ArrayList<com.kindroid.security.util.ADProtoc.Advert>();
        }
        super.addAll(values, result.advert_);
        return this;
      }
      public Builder clearAdvert() {
        result.advert_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.BannerResponse)
    }
    
    static {
      defaultInstance = new BannerResponse(true);
      com.kindroid.security.util.ADProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.BannerResponse)
  }
  
  public static final class ClickRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use ClickRequest.newBuilder() to construct.
    private ClickRequest() {
      initFields();
    }
    private ClickRequest(boolean noInit) {}
    
    private static final ClickRequest defaultInstance;
    public static ClickRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClickRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_ClickRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_ClickRequest_fieldAccessorTable;
    }
    
    // required int32 advertID = 1;
    public static final int ADVERTID_FIELD_NUMBER = 1;
    private boolean hasAdvertID;
    private int advertID_ = 0;
    public boolean hasAdvertID() { return hasAdvertID; }
    public int getAdvertID() { return advertID_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      if (!hasAdvertID) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAdvertID()) {
        output.writeInt32(1, getAdvertID());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAdvertID()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getAdvertID());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ADProtoc.ClickRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ADProtoc.ClickRequest result;
      
      // Construct using com.kindroid.security.util.ADProtoc.ClickRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ADProtoc.ClickRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.ADProtoc.ClickRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ADProtoc.ClickRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ADProtoc.ClickRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.ADProtoc.ClickRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.ADProtoc.ClickRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ADProtoc.ClickRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ADProtoc.ClickRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ADProtoc.ClickRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.ADProtoc.ClickRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ADProtoc.ClickRequest) {
          return mergeFrom((com.kindroid.security.util.ADProtoc.ClickRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ADProtoc.ClickRequest other) {
        if (other == com.kindroid.security.util.ADProtoc.ClickRequest.getDefaultInstance()) return this;
        if (other.hasAdvertID()) {
          setAdvertID(other.getAdvertID());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setAdvertID(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // required int32 advertID = 1;
      public boolean hasAdvertID() {
        return result.hasAdvertID();
      }
      public int getAdvertID() {
        return result.getAdvertID();
      }
      public Builder setAdvertID(int value) {
        result.hasAdvertID = true;
        result.advertID_ = value;
        return this;
      }
      public Builder clearAdvertID() {
        result.hasAdvertID = false;
        result.advertID_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.ClickRequest)
    }
    
    static {
      defaultInstance = new ClickRequest(true);
      com.kindroid.security.util.ADProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.ClickRequest)
  }
  
  public static final class ClickResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use ClickResponse.newBuilder() to construct.
    private ClickResponse() {
      initFields();
    }
    private ClickResponse(boolean noInit) {}
    
    private static final ClickResponse defaultInstance;
    public static ClickResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public ClickResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_ClickResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.ADProtoc.internal_static_com_kindroid_security_util_ClickResponse_fieldAccessorTable;
    }
    
    // required .com.kindroid.security.util.TargetType targetType = 1;
    public static final int TARGETTYPE_FIELD_NUMBER = 1;
    private boolean hasTargetType;
    private com.kindroid.security.util.CommonProtoc.TargetType targetType_;
    public boolean hasTargetType() { return hasTargetType; }
    public com.kindroid.security.util.CommonProtoc.TargetType getTargetType() { return targetType_; }
    
    // optional .com.kindroid.security.util.Topic topic = 2;
    public static final int TOPIC_FIELD_NUMBER = 2;
    private boolean hasTopic;
    private com.kindroid.security.util.TopicProtoc.Topic topic_;
    public boolean hasTopic() { return hasTopic; }
    public com.kindroid.security.util.TopicProtoc.Topic getTopic() { return topic_; }
    
    // optional .com.kindroid.security.util.App app = 3;
    public static final int APP_FIELD_NUMBER = 3;
    private boolean hasApp;
    private com.kindroid.security.util.AppProtoc.App app_;
    public boolean hasApp() { return hasApp; }
    public com.kindroid.security.util.AppProtoc.App getApp() { return app_; }
    
    private void initFields() {
      targetType_ = com.kindroid.security.util.CommonProtoc.TargetType.TARGET_APP;
      topic_ = com.kindroid.security.util.TopicProtoc.Topic.getDefaultInstance();
      app_ = com.kindroid.security.util.AppProtoc.App.getDefaultInstance();
    }
    public final boolean isInitialized() {
      if (!hasTargetType) return false;
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasTargetType()) {
        output.writeEnum(1, getTargetType().getNumber());
      }
      if (hasTopic()) {
        output.writeMessage(2, getTopic());
      }
      if (hasApp()) {
        output.writeMessage(3, getApp());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasTargetType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, getTargetType().getNumber());
      }
      if (hasTopic()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getTopic());
      }
      if (hasApp()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getApp());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.ADProtoc.ClickResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.ADProtoc.ClickResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.ADProtoc.ClickResponse result;
      
      // Construct using com.kindroid.security.util.ADProtoc.ClickResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.ADProtoc.ClickResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.ADProtoc.ClickResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.ADProtoc.ClickResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.ADProtoc.ClickResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.ADProtoc.ClickResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.ADProtoc.ClickResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.ADProtoc.ClickResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.ADProtoc.ClickResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.ADProtoc.ClickResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.ADProtoc.ClickResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.ADProtoc.ClickResponse) {
          return mergeFrom((com.kindroid.security.util.ADProtoc.ClickResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.ADProtoc.ClickResponse other) {
        if (other == com.kindroid.security.util.ADProtoc.ClickResponse.getDefaultInstance()) return this;
        if (other.hasTargetType()) {
          setTargetType(other.getTargetType());
        }
        if (other.hasTopic()) {
          mergeTopic(other.getTopic());
        }
        if (other.hasApp()) {
          mergeApp(other.getApp());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.CommonProtoc.TargetType value = com.kindroid.security.util.CommonProtoc.TargetType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                setTargetType(value);
              }
              break;
            }
            case 18: {
              com.kindroid.security.util.TopicProtoc.Topic.Builder subBuilder = com.kindroid.security.util.TopicProtoc.Topic.newBuilder();
              if (hasTopic()) {
                subBuilder.mergeFrom(getTopic());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setTopic(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.kindroid.security.util.AppProtoc.App.Builder subBuilder = com.kindroid.security.util.AppProtoc.App.newBuilder();
              if (hasApp()) {
                subBuilder.mergeFrom(getApp());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setApp(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // required .com.kindroid.security.util.TargetType targetType = 1;
      public boolean hasTargetType() {
        return result.hasTargetType();
      }
      public com.kindroid.security.util.CommonProtoc.TargetType getTargetType() {
        return result.getTargetType();
      }
      public Builder setTargetType(com.kindroid.security.util.CommonProtoc.TargetType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTargetType = true;
        result.targetType_ = value;
        return this;
      }
      public Builder clearTargetType() {
        result.hasTargetType = false;
        result.targetType_ = com.kindroid.security.util.CommonProtoc.TargetType.TARGET_APP;
        return this;
      }
      
      // optional .com.kindroid.security.util.Topic topic = 2;
      public boolean hasTopic() {
        return result.hasTopic();
      }
      public com.kindroid.security.util.TopicProtoc.Topic getTopic() {
        return result.getTopic();
      }
      public Builder setTopic(com.kindroid.security.util.TopicProtoc.Topic value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasTopic = true;
        result.topic_ = value;
        return this;
      }
      public Builder setTopic(com.kindroid.security.util.TopicProtoc.Topic.Builder builderForValue) {
        result.hasTopic = true;
        result.topic_ = builderForValue.build();
        return this;
      }
      public Builder mergeTopic(com.kindroid.security.util.TopicProtoc.Topic value) {
        if (result.hasTopic() &&
            result.topic_ != com.kindroid.security.util.TopicProtoc.Topic.getDefaultInstance()) {
          result.topic_ =
            com.kindroid.security.util.TopicProtoc.Topic.newBuilder(result.topic_).mergeFrom(value).buildPartial();
        } else {
          result.topic_ = value;
        }
        result.hasTopic = true;
        return this;
      }
      public Builder clearTopic() {
        result.hasTopic = false;
        result.topic_ = com.kindroid.security.util.TopicProtoc.Topic.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.App app = 3;
      public boolean hasApp() {
        return result.hasApp();
      }
      public com.kindroid.security.util.AppProtoc.App getApp() {
        return result.getApp();
      }
      public Builder setApp(com.kindroid.security.util.AppProtoc.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasApp = true;
        result.app_ = value;
        return this;
      }
      public Builder setApp(com.kindroid.security.util.AppProtoc.App.Builder builderForValue) {
        result.hasApp = true;
        result.app_ = builderForValue.build();
        return this;
      }
      public Builder mergeApp(com.kindroid.security.util.AppProtoc.App value) {
        if (result.hasApp() &&
            result.app_ != com.kindroid.security.util.AppProtoc.App.getDefaultInstance()) {
          result.app_ =
            com.kindroid.security.util.AppProtoc.App.newBuilder(result.app_).mergeFrom(value).buildPartial();
        } else {
          result.app_ = value;
        }
        result.hasApp = true;
        return this;
      }
      public Builder clearApp() {
        result.hasApp = false;
        result.app_ = com.kindroid.security.util.AppProtoc.App.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.ClickResponse)
    }
    
    static {
      defaultInstance = new ClickResponse(true);
      com.kindroid.security.util.ADProtoc.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.ClickResponse)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Advert_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Advert_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_BannerRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_BannerRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_BannerResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_BannerResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_ClickRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_ClickRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_ClickResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_ClickResponse_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016ADProtoc.proto\022\032com.kindroid.security." +
      "util\032\022CommonProtoc.proto\032\021TopicProtoc.pr" +
      "oto\032\017AppProtoc.proto\"#\n\006Advert\022\n\n\002id\030\001 \002" +
      "(\005\022\r\n\005image\030\002 \001(\014\"\\\n\rBannerRequest\022:\n\nba" +
      "nnerType\030\001 \002(\0162&.com.kindroid.security.u" +
      "til.BannerType\022\017\n\007topicID\030\002 \001(\005\"z\n\016Banne" +
      "rResponse\022\r\n\005image\030\001 \003(\014\022\017\n\007topicID\030\002 \001(" +
      "\005\022\024\n\014entriesCount\030\003 \001(\005\0222\n\006advert\030\004 \003(\0132" +
      "\".com.kindroid.security.util.Advert\" \n\014C" +
      "lickRequest\022\020\n\010advertID\030\001 \002(\005\"\253\001\n\rClickR",
      "esponse\022:\n\ntargetType\030\001 \002(\0162&.com.kindro" +
      "id.security.util.TargetType\0220\n\005topic\030\002 \001" +
      "(\0132!.com.kindroid.security.util.Topic\022,\n" +
      "\003app\030\003 \001(\0132\037.com.kindroid.security.util." +
      "AppB\034\n\032com.kindroid.security.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_Advert_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_Advert_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Advert_descriptor,
              new java.lang.String[] { "Id", "Image", },
              com.kindroid.security.util.ADProtoc.Advert.class,
              com.kindroid.security.util.ADProtoc.Advert.Builder.class);
          internal_static_com_kindroid_security_util_BannerRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_BannerRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_BannerRequest_descriptor,
              new java.lang.String[] { "BannerType", "TopicID", },
              com.kindroid.security.util.ADProtoc.BannerRequest.class,
              com.kindroid.security.util.ADProtoc.BannerRequest.Builder.class);
          internal_static_com_kindroid_security_util_BannerResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_security_util_BannerResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_BannerResponse_descriptor,
              new java.lang.String[] { "Image", "TopicID", "EntriesCount", "Advert", },
              com.kindroid.security.util.ADProtoc.BannerResponse.class,
              com.kindroid.security.util.ADProtoc.BannerResponse.Builder.class);
          internal_static_com_kindroid_security_util_ClickRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_security_util_ClickRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_ClickRequest_descriptor,
              new java.lang.String[] { "AdvertID", },
              com.kindroid.security.util.ADProtoc.ClickRequest.class,
              com.kindroid.security.util.ADProtoc.ClickRequest.Builder.class);
          internal_static_com_kindroid_security_util_ClickResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_security_util_ClickResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_ClickResponse_descriptor,
              new java.lang.String[] { "TargetType", "Topic", "App", },
              com.kindroid.security.util.ADProtoc.ClickResponse.class,
              com.kindroid.security.util.ADProtoc.ClickResponse.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.kindroid.security.util.CommonProtoc.getDescriptor(),
          com.kindroid.security.util.TopicProtoc.getDescriptor(),
          com.kindroid.security.util.AppProtoc.getDescriptor(),
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
