// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: appstore.proto

package com.kindroid.security.util;

public final class Appstore {
  private Appstore() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public static final class App extends
      com.google.protobuf.GeneratedMessage {
    // Use App.newBuilder() to construct.
    private App() {
      initFields();
    }
    private App(boolean noInit) {}
    
    private static final App defaultInstance;
    public static App getDefaultInstance() {
      return defaultInstance;
    }
    
    public App getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_App_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_App_fieldAccessorTable;
    }
    
    // optional string id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private java.lang.String id_ = "";
    public boolean hasId() { return hasId; }
    public java.lang.String getId() { return id_; }
    
    // optional string title = 2;
    public static final int TITLE_FIELD_NUMBER = 2;
    private boolean hasTitle;
    private java.lang.String title_ = "";
    public boolean hasTitle() { return hasTitle; }
    public java.lang.String getTitle() { return title_; }
    
    // optional string author = 3;
    public static final int AUTHOR_FIELD_NUMBER = 3;
    private boolean hasAuthor;
    private java.lang.String author_ = "";
    public boolean hasAuthor() { return hasAuthor; }
    public java.lang.String getAuthor() { return author_; }
    
    // optional int32 versioncode = 4;
    public static final int VERSIONCODE_FIELD_NUMBER = 4;
    private boolean hasVersioncode;
    private int versioncode_ = 0;
    public boolean hasVersioncode() { return hasVersioncode; }
    public int getVersioncode() { return versioncode_; }
    
    // optional string versionname = 5;
    public static final int VERSIONNAME_FIELD_NUMBER = 5;
    private boolean hasVersionname;
    private java.lang.String versionname_ = "";
    public boolean hasVersionname() { return hasVersionname; }
    public java.lang.String getVersionname() { return versionname_; }
    
    // optional string rating = 6;
    public static final int RATING_FIELD_NUMBER = 6;
    private boolean hasRating;
    private java.lang.String rating_ = "";
    public boolean hasRating() { return hasRating; }
    public java.lang.String getRating() { return rating_; }
    
    // optional int32 ratingsCount = 7;
    public static final int RATINGSCOUNT_FIELD_NUMBER = 7;
    private boolean hasRatingsCount;
    private int ratingsCount_ = 0;
    public boolean hasRatingsCount() { return hasRatingsCount; }
    public int getRatingsCount() { return ratingsCount_; }
    
    // optional string price = 8;
    public static final int PRICE_FIELD_NUMBER = 8;
    private boolean hasPrice;
    private java.lang.String price_ = "";
    public boolean hasPrice() { return hasPrice; }
    public java.lang.String getPrice() { return price_; }
    
    // optional int32 priceUnit = 9;
    public static final int PRICEUNIT_FIELD_NUMBER = 9;
    private boolean hasPriceUnit;
    private int priceUnit_ = 0;
    public boolean hasPriceUnit() { return hasPriceUnit; }
    public int getPriceUnit() { return priceUnit_; }
    
    // optional string description = 10;
    public static final int DESCRIPTION_FIELD_NUMBER = 10;
    private boolean hasDescription;
    private java.lang.String description_ = "";
    public boolean hasDescription() { return hasDescription; }
    public java.lang.String getDescription() { return description_; }
    
    // optional int32 downloadsCount = 11;
    public static final int DOWNLOADSCOUNT_FIELD_NUMBER = 11;
    private boolean hasDownloadsCount;
    private int downloadsCount_ = 0;
    public boolean hasDownloadsCount() { return hasDownloadsCount; }
    public int getDownloadsCount() { return downloadsCount_; }
    
    // optional int32 lastmonth_downloadscount = 12;
    public static final int LASTMONTH_DOWNLOADSCOUNT_FIELD_NUMBER = 12;
    private boolean hasLastmonthDownloadscount;
    private int lastmonthDownloadscount_ = 0;
    public boolean hasLastmonthDownloadscount() { return hasLastmonthDownloadscount; }
    public int getLastmonthDownloadscount() { return lastmonthDownloadscount_; }
    
    // optional int32 lastweek_downloadscount = 13;
    public static final int LASTWEEK_DOWNLOADSCOUNT_FIELD_NUMBER = 13;
    private boolean hasLastweekDownloadscount;
    private int lastweekDownloadscount_ = 0;
    public boolean hasLastweekDownloadscount() { return hasLastweekDownloadscount; }
    public int getLastweekDownloadscount() { return lastweekDownloadscount_; }
    
    // repeated string permissionId = 14;
    public static final int PERMISSIONID_FIELD_NUMBER = 14;
    private java.util.List<java.lang.String> permissionId_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getPermissionIdList() {
      return permissionId_;
    }
    public int getPermissionIdCount() { return permissionId_.size(); }
    public java.lang.String getPermissionId(int index) {
      return permissionId_.get(index);
    }
    
    // optional int32 installSize = 15;
    public static final int INSTALLSIZE_FIELD_NUMBER = 15;
    private boolean hasInstallSize;
    private int installSize_ = 0;
    public boolean hasInstallSize() { return hasInstallSize; }
    public int getInstallSize() { return installSize_; }
    
    // optional string packageName = 16;
    public static final int PACKAGENAME_FIELD_NUMBER = 16;
    private boolean hasPackageName;
    private java.lang.String packageName_ = "";
    public boolean hasPackageName() { return hasPackageName; }
    public java.lang.String getPackageName() { return packageName_; }
    
    // optional string category = 17;
    public static final int CATEGORY_FIELD_NUMBER = 17;
    private boolean hasCategory;
    private java.lang.String category_ = "";
    public boolean hasCategory() { return hasCategory; }
    public java.lang.String getCategory() { return category_; }
    
    // optional string contactEmail = 18;
    public static final int CONTACTEMAIL_FIELD_NUMBER = 18;
    private boolean hasContactEmail;
    private java.lang.String contactEmail_ = "";
    public boolean hasContactEmail() { return hasContactEmail; }
    public java.lang.String getContactEmail() { return contactEmail_; }
    
    // optional string contactPhone = 19;
    public static final int CONTACTPHONE_FIELD_NUMBER = 19;
    private boolean hasContactPhone;
    private java.lang.String contactPhone_ = "";
    public boolean hasContactPhone() { return hasContactPhone; }
    public java.lang.String getContactPhone() { return contactPhone_; }
    
    // optional string contactWebsite = 20;
    public static final int CONTACTWEBSITE_FIELD_NUMBER = 20;
    private boolean hasContactWebsite;
    private java.lang.String contactWebsite_ = "";
    public boolean hasContactWebsite() { return hasContactWebsite; }
    public java.lang.String getContactWebsite() { return contactWebsite_; }
    
    // optional int32 screenshotsCount = 21;
    public static final int SCREENSHOTSCOUNT_FIELD_NUMBER = 21;
    private boolean hasScreenshotsCount;
    private int screenshotsCount_ = 0;
    public boolean hasScreenshotsCount() { return hasScreenshotsCount; }
    public int getScreenshotsCount() { return screenshotsCount_; }
    
    // optional bytes iconData = 22;
    public static final int ICONDATA_FIELD_NUMBER = 22;
    private boolean hasIconData;
    private com.google.protobuf.ByteString iconData_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasIconData() { return hasIconData; }
    public com.google.protobuf.ByteString getIconData() { return iconData_; }
    
    // optional string pathguid = 23;
    public static final int PATHGUID_FIELD_NUMBER = 23;
    private boolean hasPathguid;
    private java.lang.String pathguid_ = "";
    public boolean hasPathguid() { return hasPathguid; }
    public java.lang.String getPathguid() { return pathguid_; }
    
    // optional int32 rate = 24;
    public static final int RATE_FIELD_NUMBER = 24;
    private boolean hasRate;
    private int rate_ = 0;
    public boolean hasRate() { return hasRate; }
    public int getRate() { return rate_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeString(1, getId());
      }
      if (hasTitle()) {
        output.writeString(2, getTitle());
      }
      if (hasAuthor()) {
        output.writeString(3, getAuthor());
      }
      if (hasVersioncode()) {
        output.writeInt32(4, getVersioncode());
      }
      if (hasVersionname()) {
        output.writeString(5, getVersionname());
      }
      if (hasRating()) {
        output.writeString(6, getRating());
      }
      if (hasRatingsCount()) {
        output.writeInt32(7, getRatingsCount());
      }
      if (hasPrice()) {
        output.writeString(8, getPrice());
      }
      if (hasPriceUnit()) {
        output.writeInt32(9, getPriceUnit());
      }
      if (hasDescription()) {
        output.writeString(10, getDescription());
      }
      if (hasDownloadsCount()) {
        output.writeInt32(11, getDownloadsCount());
      }
      if (hasLastmonthDownloadscount()) {
        output.writeInt32(12, getLastmonthDownloadscount());
      }
      if (hasLastweekDownloadscount()) {
        output.writeInt32(13, getLastweekDownloadscount());
      }
      for (java.lang.String element : getPermissionIdList()) {
        output.writeString(14, element);
      }
      if (hasInstallSize()) {
        output.writeInt32(15, getInstallSize());
      }
      if (hasPackageName()) {
        output.writeString(16, getPackageName());
      }
      if (hasCategory()) {
        output.writeString(17, getCategory());
      }
      if (hasContactEmail()) {
        output.writeString(18, getContactEmail());
      }
      if (hasContactPhone()) {
        output.writeString(19, getContactPhone());
      }
      if (hasContactWebsite()) {
        output.writeString(20, getContactWebsite());
      }
      if (hasScreenshotsCount()) {
        output.writeInt32(21, getScreenshotsCount());
      }
      if (hasIconData()) {
        output.writeBytes(22, getIconData());
      }
      if (hasPathguid()) {
        output.writeString(23, getPathguid());
      }
      if (hasRate()) {
        output.writeInt32(24, getRate());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getId());
      }
      if (hasTitle()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getTitle());
      }
      if (hasAuthor()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getAuthor());
      }
      if (hasVersioncode()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, getVersioncode());
      }
      if (hasVersionname()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getVersionname());
      }
      if (hasRating()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getRating());
      }
      if (hasRatingsCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getRatingsCount());
      }
      if (hasPrice()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(8, getPrice());
      }
      if (hasPriceUnit()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, getPriceUnit());
      }
      if (hasDescription()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(10, getDescription());
      }
      if (hasDownloadsCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, getDownloadsCount());
      }
      if (hasLastmonthDownloadscount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, getLastmonthDownloadscount());
      }
      if (hasLastweekDownloadscount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, getLastweekDownloadscount());
      }
      {
        int dataSize = 0;
        for (java.lang.String element : getPermissionIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getPermissionIdList().size();
      }
      if (hasInstallSize()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, getInstallSize());
      }
      if (hasPackageName()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(16, getPackageName());
      }
      if (hasCategory()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(17, getCategory());
      }
      if (hasContactEmail()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(18, getContactEmail());
      }
      if (hasContactPhone()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(19, getContactPhone());
      }
      if (hasContactWebsite()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(20, getContactWebsite());
      }
      if (hasScreenshotsCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, getScreenshotsCount());
      }
      if (hasIconData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getIconData());
      }
      if (hasPathguid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(23, getPathguid());
      }
      if (hasRate()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, getRate());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.App parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.App parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.App parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.App prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.App result;
      
      // Construct using com.kindroid.security.util.Appstore.App.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.App();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.App internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.App();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.App.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.App getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.App.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.App build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.App buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.App buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.permissionId_ != java.util.Collections.EMPTY_LIST) {
          result.permissionId_ =
            java.util.Collections.unmodifiableList(result.permissionId_);
        }
        com.kindroid.security.util.Appstore.App returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.App) {
          return mergeFrom((com.kindroid.security.util.Appstore.App)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.App other) {
        if (other == com.kindroid.security.util.Appstore.App.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasTitle()) {
          setTitle(other.getTitle());
        }
        if (other.hasAuthor()) {
          setAuthor(other.getAuthor());
        }
        if (other.hasVersioncode()) {
          setVersioncode(other.getVersioncode());
        }
        if (other.hasVersionname()) {
          setVersionname(other.getVersionname());
        }
        if (other.hasRating()) {
          setRating(other.getRating());
        }
        if (other.hasRatingsCount()) {
          setRatingsCount(other.getRatingsCount());
        }
        if (other.hasPrice()) {
          setPrice(other.getPrice());
        }
        if (other.hasPriceUnit()) {
          setPriceUnit(other.getPriceUnit());
        }
        if (other.hasDescription()) {
          setDescription(other.getDescription());
        }
        if (other.hasDownloadsCount()) {
          setDownloadsCount(other.getDownloadsCount());
        }
        if (other.hasLastmonthDownloadscount()) {
          setLastmonthDownloadscount(other.getLastmonthDownloadscount());
        }
        if (other.hasLastweekDownloadscount()) {
          setLastweekDownloadscount(other.getLastweekDownloadscount());
        }
        if (!other.permissionId_.isEmpty()) {
          if (result.permissionId_.isEmpty()) {
            result.permissionId_ = new java.util.ArrayList<java.lang.String>();
          }
          result.permissionId_.addAll(other.permissionId_);
        }
        if (other.hasInstallSize()) {
          setInstallSize(other.getInstallSize());
        }
        if (other.hasPackageName()) {
          setPackageName(other.getPackageName());
        }
        if (other.hasCategory()) {
          setCategory(other.getCategory());
        }
        if (other.hasContactEmail()) {
          setContactEmail(other.getContactEmail());
        }
        if (other.hasContactPhone()) {
          setContactPhone(other.getContactPhone());
        }
        if (other.hasContactWebsite()) {
          setContactWebsite(other.getContactWebsite());
        }
        if (other.hasScreenshotsCount()) {
          setScreenshotsCount(other.getScreenshotsCount());
        }
        if (other.hasIconData()) {
          setIconData(other.getIconData());
        }
        if (other.hasPathguid()) {
          setPathguid(other.getPathguid());
        }
        if (other.hasRate()) {
          setRate(other.getRate());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setId(input.readString());
              break;
            }
            case 18: {
              setTitle(input.readString());
              break;
            }
            case 26: {
              setAuthor(input.readString());
              break;
            }
            case 32: {
              setVersioncode(input.readInt32());
              break;
            }
            case 42: {
              setVersionname(input.readString());
              break;
            }
            case 50: {
              setRating(input.readString());
              break;
            }
            case 56: {
              setRatingsCount(input.readInt32());
              break;
            }
            case 66: {
              setPrice(input.readString());
              break;
            }
            case 72: {
              setPriceUnit(input.readInt32());
              break;
            }
            case 82: {
              setDescription(input.readString());
              break;
            }
            case 88: {
              setDownloadsCount(input.readInt32());
              break;
            }
            case 96: {
              setLastmonthDownloadscount(input.readInt32());
              break;
            }
            case 104: {
              setLastweekDownloadscount(input.readInt32());
              break;
            }
            case 114: {
              addPermissionId(input.readString());
              break;
            }
            case 120: {
              setInstallSize(input.readInt32());
              break;
            }
            case 130: {
              setPackageName(input.readString());
              break;
            }
            case 138: {
              setCategory(input.readString());
              break;
            }
            case 146: {
              setContactEmail(input.readString());
              break;
            }
            case 154: {
              setContactPhone(input.readString());
              break;
            }
            case 162: {
              setContactWebsite(input.readString());
              break;
            }
            case 168: {
              setScreenshotsCount(input.readInt32());
              break;
            }
            case 178: {
              setIconData(input.readBytes());
              break;
            }
            case 186: {
              setPathguid(input.readString());
              break;
            }
            case 192: {
              setRate(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public java.lang.String getId() {
        return result.getId();
      }
      public Builder setId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = getDefaultInstance().getId();
        return this;
      }
      
      // optional string title = 2;
      public boolean hasTitle() {
        return result.hasTitle();
      }
      public java.lang.String getTitle() {
        return result.getTitle();
      }
      public Builder setTitle(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasTitle = true;
        result.title_ = value;
        return this;
      }
      public Builder clearTitle() {
        result.hasTitle = false;
        result.title_ = getDefaultInstance().getTitle();
        return this;
      }
      
      // optional string author = 3;
      public boolean hasAuthor() {
        return result.hasAuthor();
      }
      public java.lang.String getAuthor() {
        return result.getAuthor();
      }
      public Builder setAuthor(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAuthor = true;
        result.author_ = value;
        return this;
      }
      public Builder clearAuthor() {
        result.hasAuthor = false;
        result.author_ = getDefaultInstance().getAuthor();
        return this;
      }
      
      // optional int32 versioncode = 4;
      public boolean hasVersioncode() {
        return result.hasVersioncode();
      }
      public int getVersioncode() {
        return result.getVersioncode();
      }
      public Builder setVersioncode(int value) {
        result.hasVersioncode = true;
        result.versioncode_ = value;
        return this;
      }
      public Builder clearVersioncode() {
        result.hasVersioncode = false;
        result.versioncode_ = 0;
        return this;
      }
      
      // optional string versionname = 5;
      public boolean hasVersionname() {
        return result.hasVersionname();
      }
      public java.lang.String getVersionname() {
        return result.getVersionname();
      }
      public Builder setVersionname(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasVersionname = true;
        result.versionname_ = value;
        return this;
      }
      public Builder clearVersionname() {
        result.hasVersionname = false;
        result.versionname_ = getDefaultInstance().getVersionname();
        return this;
      }
      
      // optional string rating = 6;
      public boolean hasRating() {
        return result.hasRating();
      }
      public java.lang.String getRating() {
        return result.getRating();
      }
      public Builder setRating(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasRating = true;
        result.rating_ = value;
        return this;
      }
      public Builder clearRating() {
        result.hasRating = false;
        result.rating_ = getDefaultInstance().getRating();
        return this;
      }
      
      // optional int32 ratingsCount = 7;
      public boolean hasRatingsCount() {
        return result.hasRatingsCount();
      }
      public int getRatingsCount() {
        return result.getRatingsCount();
      }
      public Builder setRatingsCount(int value) {
        result.hasRatingsCount = true;
        result.ratingsCount_ = value;
        return this;
      }
      public Builder clearRatingsCount() {
        result.hasRatingsCount = false;
        result.ratingsCount_ = 0;
        return this;
      }
      
      // optional string price = 8;
      public boolean hasPrice() {
        return result.hasPrice();
      }
      public java.lang.String getPrice() {
        return result.getPrice();
      }
      public Builder setPrice(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPrice = true;
        result.price_ = value;
        return this;
      }
      public Builder clearPrice() {
        result.hasPrice = false;
        result.price_ = getDefaultInstance().getPrice();
        return this;
      }
      
      // optional int32 priceUnit = 9;
      public boolean hasPriceUnit() {
        return result.hasPriceUnit();
      }
      public int getPriceUnit() {
        return result.getPriceUnit();
      }
      public Builder setPriceUnit(int value) {
        result.hasPriceUnit = true;
        result.priceUnit_ = value;
        return this;
      }
      public Builder clearPriceUnit() {
        result.hasPriceUnit = false;
        result.priceUnit_ = 0;
        return this;
      }
      
      // optional string description = 10;
      public boolean hasDescription() {
        return result.hasDescription();
      }
      public java.lang.String getDescription() {
        return result.getDescription();
      }
      public Builder setDescription(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDescription = true;
        result.description_ = value;
        return this;
      }
      public Builder clearDescription() {
        result.hasDescription = false;
        result.description_ = getDefaultInstance().getDescription();
        return this;
      }
      
      // optional int32 downloadsCount = 11;
      public boolean hasDownloadsCount() {
        return result.hasDownloadsCount();
      }
      public int getDownloadsCount() {
        return result.getDownloadsCount();
      }
      public Builder setDownloadsCount(int value) {
        result.hasDownloadsCount = true;
        result.downloadsCount_ = value;
        return this;
      }
      public Builder clearDownloadsCount() {
        result.hasDownloadsCount = false;
        result.downloadsCount_ = 0;
        return this;
      }
      
      // optional int32 lastmonth_downloadscount = 12;
      public boolean hasLastmonthDownloadscount() {
        return result.hasLastmonthDownloadscount();
      }
      public int getLastmonthDownloadscount() {
        return result.getLastmonthDownloadscount();
      }
      public Builder setLastmonthDownloadscount(int value) {
        result.hasLastmonthDownloadscount = true;
        result.lastmonthDownloadscount_ = value;
        return this;
      }
      public Builder clearLastmonthDownloadscount() {
        result.hasLastmonthDownloadscount = false;
        result.lastmonthDownloadscount_ = 0;
        return this;
      }
      
      // optional int32 lastweek_downloadscount = 13;
      public boolean hasLastweekDownloadscount() {
        return result.hasLastweekDownloadscount();
      }
      public int getLastweekDownloadscount() {
        return result.getLastweekDownloadscount();
      }
      public Builder setLastweekDownloadscount(int value) {
        result.hasLastweekDownloadscount = true;
        result.lastweekDownloadscount_ = value;
        return this;
      }
      public Builder clearLastweekDownloadscount() {
        result.hasLastweekDownloadscount = false;
        result.lastweekDownloadscount_ = 0;
        return this;
      }
      
      // repeated string permissionId = 14;
      public java.util.List<java.lang.String> getPermissionIdList() {
        return java.util.Collections.unmodifiableList(result.permissionId_);
      }
      public int getPermissionIdCount() {
        return result.getPermissionIdCount();
      }
      public java.lang.String getPermissionId(int index) {
        return result.getPermissionId(index);
      }
      public Builder setPermissionId(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.permissionId_.set(index, value);
        return this;
      }
      public Builder addPermissionId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.permissionId_.isEmpty()) {
          result.permissionId_ = new java.util.ArrayList<java.lang.String>();
        }
        result.permissionId_.add(value);
        return this;
      }
      public Builder addAllPermissionId(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.permissionId_.isEmpty()) {
          result.permissionId_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.permissionId_);
        return this;
      }
      public Builder clearPermissionId() {
        result.permissionId_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 installSize = 15;
      public boolean hasInstallSize() {
        return result.hasInstallSize();
      }
      public int getInstallSize() {
        return result.getInstallSize();
      }
      public Builder setInstallSize(int value) {
        result.hasInstallSize = true;
        result.installSize_ = value;
        return this;
      }
      public Builder clearInstallSize() {
        result.hasInstallSize = false;
        result.installSize_ = 0;
        return this;
      }
      
      // optional string packageName = 16;
      public boolean hasPackageName() {
        return result.hasPackageName();
      }
      public java.lang.String getPackageName() {
        return result.getPackageName();
      }
      public Builder setPackageName(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPackageName = true;
        result.packageName_ = value;
        return this;
      }
      public Builder clearPackageName() {
        result.hasPackageName = false;
        result.packageName_ = getDefaultInstance().getPackageName();
        return this;
      }
      
      // optional string category = 17;
      public boolean hasCategory() {
        return result.hasCategory();
      }
      public java.lang.String getCategory() {
        return result.getCategory();
      }
      public Builder setCategory(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCategory = true;
        result.category_ = value;
        return this;
      }
      public Builder clearCategory() {
        result.hasCategory = false;
        result.category_ = getDefaultInstance().getCategory();
        return this;
      }
      
      // optional string contactEmail = 18;
      public boolean hasContactEmail() {
        return result.hasContactEmail();
      }
      public java.lang.String getContactEmail() {
        return result.getContactEmail();
      }
      public Builder setContactEmail(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContactEmail = true;
        result.contactEmail_ = value;
        return this;
      }
      public Builder clearContactEmail() {
        result.hasContactEmail = false;
        result.contactEmail_ = getDefaultInstance().getContactEmail();
        return this;
      }
      
      // optional string contactPhone = 19;
      public boolean hasContactPhone() {
        return result.hasContactPhone();
      }
      public java.lang.String getContactPhone() {
        return result.getContactPhone();
      }
      public Builder setContactPhone(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContactPhone = true;
        result.contactPhone_ = value;
        return this;
      }
      public Builder clearContactPhone() {
        result.hasContactPhone = false;
        result.contactPhone_ = getDefaultInstance().getContactPhone();
        return this;
      }
      
      // optional string contactWebsite = 20;
      public boolean hasContactWebsite() {
        return result.hasContactWebsite();
      }
      public java.lang.String getContactWebsite() {
        return result.getContactWebsite();
      }
      public Builder setContactWebsite(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasContactWebsite = true;
        result.contactWebsite_ = value;
        return this;
      }
      public Builder clearContactWebsite() {
        result.hasContactWebsite = false;
        result.contactWebsite_ = getDefaultInstance().getContactWebsite();
        return this;
      }
      
      // optional int32 screenshotsCount = 21;
      public boolean hasScreenshotsCount() {
        return result.hasScreenshotsCount();
      }
      public int getScreenshotsCount() {
        return result.getScreenshotsCount();
      }
      public Builder setScreenshotsCount(int value) {
        result.hasScreenshotsCount = true;
        result.screenshotsCount_ = value;
        return this;
      }
      public Builder clearScreenshotsCount() {
        result.hasScreenshotsCount = false;
        result.screenshotsCount_ = 0;
        return this;
      }
      
      // optional bytes iconData = 22;
      public boolean hasIconData() {
        return result.hasIconData();
      }
      public com.google.protobuf.ByteString getIconData() {
        return result.getIconData();
      }
      public Builder setIconData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIconData = true;
        result.iconData_ = value;
        return this;
      }
      public Builder clearIconData() {
        result.hasIconData = false;
        result.iconData_ = getDefaultInstance().getIconData();
        return this;
      }
      
      // optional string pathguid = 23;
      public boolean hasPathguid() {
        return result.hasPathguid();
      }
      public java.lang.String getPathguid() {
        return result.getPathguid();
      }
      public Builder setPathguid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPathguid = true;
        result.pathguid_ = value;
        return this;
      }
      public Builder clearPathguid() {
        result.hasPathguid = false;
        result.pathguid_ = getDefaultInstance().getPathguid();
        return this;
      }
      
      // optional int32 rate = 24;
      public boolean hasRate() {
        return result.hasRate();
      }
      public int getRate() {
        return result.getRate();
      }
      public Builder setRate(int value) {
        result.hasRate = true;
        result.rate_ = value;
        return this;
      }
      public Builder clearRate() {
        result.hasRate = false;
        result.rate_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.App)
    }
    
    static {
      defaultInstance = new App(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.App)
  }
  
  public static final class AppsRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use AppsRequest.newBuilder() to construct.
    private AppsRequest() {
      initFields();
    }
    private AppsRequest(boolean noInit) {}
    
    private static final AppsRequest defaultInstance;
    public static AppsRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_AppsRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_AppsRequest_fieldAccessorTable;
    }
    
    public enum ViewType
        implements com.google.protobuf.ProtocolMessageEnum {
      ALL(0, 0),
      FREE(1, 1),
      PAID(2, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static ViewType valueOf(int value) {
        switch (value) {
          case 0: return ALL;
          case 1: return FREE;
          case 2: return PAID;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<ViewType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<ViewType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<ViewType>() {
              public ViewType findValueByNumber(int number) {
                return ViewType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.kindroid.security.util.Appstore.AppsRequest.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final ViewType[] VALUES = {
        ALL, FREE, PAID, 
      };
      public static ViewType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private ViewType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.kindroid.security.util.Appstore.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:com.kindroid.security.util.AppsRequest.ViewType)
    }
    
    // optional string query = 1;
    public static final int QUERY_FIELD_NUMBER = 1;
    private boolean hasQuery;
    private java.lang.String query_ = "";
    public boolean hasQuery() { return hasQuery; }
    public java.lang.String getQuery() { return query_; }
    
    // optional string packagename = 2;
    public static final int PACKAGENAME_FIELD_NUMBER = 2;
    private boolean hasPackagename;
    private java.lang.String packagename_ = "";
    public boolean hasPackagename() { return hasPackagename; }
    public java.lang.String getPackagename() { return packagename_; }
    
    // optional string categoryId = 3;
    public static final int CATEGORYID_FIELD_NUMBER = 3;
    private boolean hasCategoryId;
    private java.lang.String categoryId_ = "";
    public boolean hasCategoryId() { return hasCategoryId; }
    public java.lang.String getCategoryId() { return categoryId_; }
    
    // optional string appId = 4;
    public static final int APPID_FIELD_NUMBER = 4;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // optional uint64 capability = 5;
    public static final int CAPABILITY_FIELD_NUMBER = 5;
    private boolean hasCapability;
    private long capability_ = 0L;
    public boolean hasCapability() { return hasCapability; }
    public long getCapability() { return capability_; }
    
    // optional bool withExtendedInfo = 6;
    public static final int WITHEXTENDEDINFO_FIELD_NUMBER = 6;
    private boolean hasWithExtendedInfo;
    private boolean withExtendedInfo_ = false;
    public boolean hasWithExtendedInfo() { return hasWithExtendedInfo; }
    public boolean getWithExtendedInfo() { return withExtendedInfo_; }
    
    // optional int32 orderType = 7;
    public static final int ORDERTYPE_FIELD_NUMBER = 7;
    private boolean hasOrderType;
    private int orderType_ = 0;
    public boolean hasOrderType() { return hasOrderType; }
    public int getOrderType() { return orderType_; }
    
    // optional .com.kindroid.security.util.AppsRequest.ViewType viewType = 8 [default = ALL];
    public static final int VIEWTYPE_FIELD_NUMBER = 8;
    private boolean hasViewType;
    private com.kindroid.security.util.Appstore.AppsRequest.ViewType viewType_;
    public boolean hasViewType() { return hasViewType; }
    public com.kindroid.security.util.Appstore.AppsRequest.ViewType getViewType() { return viewType_; }
    
    // optional uint64 startIndex = 9;
    public static final int STARTINDEX_FIELD_NUMBER = 9;
    private boolean hasStartIndex;
    private long startIndex_ = 0L;
    public boolean hasStartIndex() { return hasStartIndex; }
    public long getStartIndex() { return startIndex_; }
    
    // optional int32 entriesCount = 10;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 10;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
      viewType_ = com.kindroid.security.util.Appstore.AppsRequest.ViewType.ALL;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasQuery()) {
        output.writeString(1, getQuery());
      }
      if (hasPackagename()) {
        output.writeString(2, getPackagename());
      }
      if (hasCategoryId()) {
        output.writeString(3, getCategoryId());
      }
      if (hasAppId()) {
        output.writeString(4, getAppId());
      }
      if (hasCapability()) {
        output.writeUInt64(5, getCapability());
      }
      if (hasWithExtendedInfo()) {
        output.writeBool(6, getWithExtendedInfo());
      }
      if (hasOrderType()) {
        output.writeInt32(7, getOrderType());
      }
      if (hasViewType()) {
        output.writeEnum(8, getViewType().getNumber());
      }
      if (hasStartIndex()) {
        output.writeUInt64(9, getStartIndex());
      }
      if (hasEntriesCount()) {
        output.writeInt32(10, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasQuery()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getQuery());
      }
      if (hasPackagename()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getPackagename());
      }
      if (hasCategoryId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getCategoryId());
      }
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getAppId());
      }
      if (hasCapability()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(5, getCapability());
      }
      if (hasWithExtendedInfo()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, getWithExtendedInfo());
      }
      if (hasOrderType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, getOrderType());
      }
      if (hasViewType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(8, getViewType().getNumber());
      }
      if (hasStartIndex()) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(9, getStartIndex());
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.AppsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.AppsRequest result;
      
      // Construct using com.kindroid.security.util.Appstore.AppsRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.AppsRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.AppsRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.AppsRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.AppsRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.AppsRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.AppsRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.AppsRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.AppsRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.AppsRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.AppsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.AppsRequest) {
          return mergeFrom((com.kindroid.security.util.Appstore.AppsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.AppsRequest other) {
        if (other == com.kindroid.security.util.Appstore.AppsRequest.getDefaultInstance()) return this;
        if (other.hasQuery()) {
          setQuery(other.getQuery());
        }
        if (other.hasPackagename()) {
          setPackagename(other.getPackagename());
        }
        if (other.hasCategoryId()) {
          setCategoryId(other.getCategoryId());
        }
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasCapability()) {
          setCapability(other.getCapability());
        }
        if (other.hasWithExtendedInfo()) {
          setWithExtendedInfo(other.getWithExtendedInfo());
        }
        if (other.hasOrderType()) {
          setOrderType(other.getOrderType());
        }
        if (other.hasViewType()) {
          setViewType(other.getViewType());
        }
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setQuery(input.readString());
              break;
            }
            case 18: {
              setPackagename(input.readString());
              break;
            }
            case 26: {
              setCategoryId(input.readString());
              break;
            }
            case 34: {
              setAppId(input.readString());
              break;
            }
            case 40: {
              setCapability(input.readUInt64());
              break;
            }
            case 48: {
              setWithExtendedInfo(input.readBool());
              break;
            }
            case 56: {
              setOrderType(input.readInt32());
              break;
            }
            case 64: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.Appstore.AppsRequest.ViewType value = com.kindroid.security.util.Appstore.AppsRequest.ViewType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(8, rawValue);
              } else {
                setViewType(value);
              }
              break;
            }
            case 72: {
              setStartIndex(input.readUInt64());
              break;
            }
            case 80: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional string query = 1;
      public boolean hasQuery() {
        return result.hasQuery();
      }
      public java.lang.String getQuery() {
        return result.getQuery();
      }
      public Builder setQuery(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasQuery = true;
        result.query_ = value;
        return this;
      }
      public Builder clearQuery() {
        result.hasQuery = false;
        result.query_ = getDefaultInstance().getQuery();
        return this;
      }
      
      // optional string packagename = 2;
      public boolean hasPackagename() {
        return result.hasPackagename();
      }
      public java.lang.String getPackagename() {
        return result.getPackagename();
      }
      public Builder setPackagename(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasPackagename = true;
        result.packagename_ = value;
        return this;
      }
      public Builder clearPackagename() {
        result.hasPackagename = false;
        result.packagename_ = getDefaultInstance().getPackagename();
        return this;
      }
      
      // optional string categoryId = 3;
      public boolean hasCategoryId() {
        return result.hasCategoryId();
      }
      public java.lang.String getCategoryId() {
        return result.getCategoryId();
      }
      public Builder setCategoryId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasCategoryId = true;
        result.categoryId_ = value;
        return this;
      }
      public Builder clearCategoryId() {
        result.hasCategoryId = false;
        result.categoryId_ = getDefaultInstance().getCategoryId();
        return this;
      }
      
      // optional string appId = 4;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // optional uint64 capability = 5;
      public boolean hasCapability() {
        return result.hasCapability();
      }
      public long getCapability() {
        return result.getCapability();
      }
      public Builder setCapability(long value) {
        result.hasCapability = true;
        result.capability_ = value;
        return this;
      }
      public Builder clearCapability() {
        result.hasCapability = false;
        result.capability_ = 0L;
        return this;
      }
      
      // optional bool withExtendedInfo = 6;
      public boolean hasWithExtendedInfo() {
        return result.hasWithExtendedInfo();
      }
      public boolean getWithExtendedInfo() {
        return result.getWithExtendedInfo();
      }
      public Builder setWithExtendedInfo(boolean value) {
        result.hasWithExtendedInfo = true;
        result.withExtendedInfo_ = value;
        return this;
      }
      public Builder clearWithExtendedInfo() {
        result.hasWithExtendedInfo = false;
        result.withExtendedInfo_ = false;
        return this;
      }
      
      // optional int32 orderType = 7;
      public boolean hasOrderType() {
        return result.hasOrderType();
      }
      public int getOrderType() {
        return result.getOrderType();
      }
      public Builder setOrderType(int value) {
        result.hasOrderType = true;
        result.orderType_ = value;
        return this;
      }
      public Builder clearOrderType() {
        result.hasOrderType = false;
        result.orderType_ = 0;
        return this;
      }
      
      // optional .com.kindroid.security.util.AppsRequest.ViewType viewType = 8 [default = ALL];
      public boolean hasViewType() {
        return result.hasViewType();
      }
      public com.kindroid.security.util.Appstore.AppsRequest.ViewType getViewType() {
        return result.getViewType();
      }
      public Builder setViewType(com.kindroid.security.util.Appstore.AppsRequest.ViewType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasViewType = true;
        result.viewType_ = value;
        return this;
      }
      public Builder clearViewType() {
        result.hasViewType = false;
        result.viewType_ = com.kindroid.security.util.Appstore.AppsRequest.ViewType.ALL;
        return this;
      }
      
      // optional uint64 startIndex = 9;
      public boolean hasStartIndex() {
        return result.hasStartIndex();
      }
      public long getStartIndex() {
        return result.getStartIndex();
      }
      public Builder setStartIndex(long value) {
        result.hasStartIndex = true;
        result.startIndex_ = value;
        return this;
      }
      public Builder clearStartIndex() {
        result.hasStartIndex = false;
        result.startIndex_ = 0L;
        return this;
      }
      
      // optional int32 entriesCount = 10;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.AppsRequest)
    }
    
    static {
      defaultInstance = new AppsRequest(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.AppsRequest)
  }
  
  public static final class AppsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use AppsResponse.newBuilder() to construct.
    private AppsResponse() {
      initFields();
    }
    private AppsResponse(boolean noInit) {}
    
    private static final AppsResponse defaultInstance;
    public static AppsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public AppsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_AppsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_AppsResponse_fieldAccessorTable;
    }
    
    // repeated .com.kindroid.security.util.App app = 1;
    public static final int APP_FIELD_NUMBER = 1;
    private java.util.List<com.kindroid.security.util.Appstore.App> app_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.Appstore.App> getAppList() {
      return app_;
    }
    public int getAppCount() { return app_.size(); }
    public com.kindroid.security.util.Appstore.App getApp(int index) {
      return app_.get(index);
    }
    
    // optional int32 entriesCount = 2;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 2;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.kindroid.security.util.Appstore.App element : getAppList()) {
        output.writeMessage(1, element);
      }
      if (hasEntriesCount()) {
        output.writeInt32(2, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.kindroid.security.util.Appstore.App element : getAppList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.AppsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.AppsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.AppsResponse result;
      
      // Construct using com.kindroid.security.util.Appstore.AppsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.AppsResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.AppsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.AppsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.AppsResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.AppsResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.AppsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.AppsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.AppsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.AppsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.app_ != java.util.Collections.EMPTY_LIST) {
          result.app_ =
            java.util.Collections.unmodifiableList(result.app_);
        }
        com.kindroid.security.util.Appstore.AppsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.AppsResponse) {
          return mergeFrom((com.kindroid.security.util.Appstore.AppsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.AppsResponse other) {
        if (other == com.kindroid.security.util.Appstore.AppsResponse.getDefaultInstance()) return this;
        if (!other.app_.isEmpty()) {
          if (result.app_.isEmpty()) {
            result.app_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.App>();
          }
          result.app_.addAll(other.app_);
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.Appstore.App.Builder subBuilder = com.kindroid.security.util.Appstore.App.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addApp(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.kindroid.security.util.App app = 1;
      public java.util.List<com.kindroid.security.util.Appstore.App> getAppList() {
        return java.util.Collections.unmodifiableList(result.app_);
      }
      public int getAppCount() {
        return result.getAppCount();
      }
      public com.kindroid.security.util.Appstore.App getApp(int index) {
        return result.getApp(index);
      }
      public Builder setApp(int index, com.kindroid.security.util.Appstore.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.app_.set(index, value);
        return this;
      }
      public Builder setApp(int index, com.kindroid.security.util.Appstore.App.Builder builderForValue) {
        result.app_.set(index, builderForValue.build());
        return this;
      }
      public Builder addApp(com.kindroid.security.util.Appstore.App value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.App>();
        }
        result.app_.add(value);
        return this;
      }
      public Builder addApp(com.kindroid.security.util.Appstore.App.Builder builderForValue) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.App>();
        }
        result.app_.add(builderForValue.build());
        return this;
      }
      public Builder addAllApp(
          java.lang.Iterable<? extends com.kindroid.security.util.Appstore.App> values) {
        if (result.app_.isEmpty()) {
          result.app_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.App>();
        }
        super.addAll(values, result.app_);
        return this;
      }
      public Builder clearApp() {
        result.app_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 entriesCount = 2;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.AppsResponse)
    }
    
    static {
      defaultInstance = new AppsResponse(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.AppsResponse)
  }
  
  public static final class GetImageRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use GetImageRequest.newBuilder() to construct.
    private GetImageRequest() {
      initFields();
    }
    private GetImageRequest(boolean noInit) {}
    
    private static final GetImageRequest defaultInstance;
    public static GetImageRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetImageRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_GetImageRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_GetImageRequest_fieldAccessorTable;
    }
    
    public enum AppImageUsage
        implements com.google.protobuf.ProtocolMessageEnum {
      ICON(0, 0),
      SCREENSHOT(1, 1),
      SCREENSHOT_THUMBNAIL(2, 2),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static AppImageUsage valueOf(int value) {
        switch (value) {
          case 0: return ICON;
          case 1: return SCREENSHOT;
          case 2: return SCREENSHOT_THUMBNAIL;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<AppImageUsage>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<AppImageUsage>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<AppImageUsage>() {
              public AppImageUsage findValueByNumber(int number) {
                return AppImageUsage.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.kindroid.security.util.Appstore.GetImageRequest.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final AppImageUsage[] VALUES = {
        ICON, SCREENSHOT, SCREENSHOT_THUMBNAIL, 
      };
      public static AppImageUsage valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private AppImageUsage(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.kindroid.security.util.Appstore.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:com.kindroid.security.util.GetImageRequest.AppImageUsage)
    }
    
    // optional string appId = 1;
    public static final int APPID_FIELD_NUMBER = 1;
    private boolean hasAppId;
    private java.lang.String appId_ = "";
    public boolean hasAppId() { return hasAppId; }
    public java.lang.String getAppId() { return appId_; }
    
    // optional .com.kindroid.security.util.GetImageRequest.AppImageUsage imageUsage = 3;
    public static final int IMAGEUSAGE_FIELD_NUMBER = 3;
    private boolean hasImageUsage;
    private com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage imageUsage_;
    public boolean hasImageUsage() { return hasImageUsage; }
    public com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage getImageUsage() { return imageUsage_; }
    
    // optional string imageId = 4;
    public static final int IMAGEID_FIELD_NUMBER = 4;
    private boolean hasImageId;
    private java.lang.String imageId_ = "";
    public boolean hasImageId() { return hasImageId; }
    public java.lang.String getImageId() { return imageId_; }
    
    private void initFields() {
      imageUsage_ = com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage.ICON;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAppId()) {
        output.writeString(1, getAppId());
      }
      if (hasImageUsage()) {
        output.writeEnum(3, getImageUsage().getNumber());
      }
      if (hasImageId()) {
        output.writeString(4, getImageId());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAppId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAppId());
      }
      if (hasImageUsage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, getImageUsage().getNumber());
      }
      if (hasImageId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getImageId());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.GetImageRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.GetImageRequest result;
      
      // Construct using com.kindroid.security.util.Appstore.GetImageRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.GetImageRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.GetImageRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.GetImageRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.GetImageRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.GetImageRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.GetImageRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.GetImageRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.GetImageRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.GetImageRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.GetImageRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.GetImageRequest) {
          return mergeFrom((com.kindroid.security.util.Appstore.GetImageRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.GetImageRequest other) {
        if (other == com.kindroid.security.util.Appstore.GetImageRequest.getDefaultInstance()) return this;
        if (other.hasAppId()) {
          setAppId(other.getAppId());
        }
        if (other.hasImageUsage()) {
          setImageUsage(other.getImageUsage());
        }
        if (other.hasImageId()) {
          setImageId(other.getImageId());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setAppId(input.readString());
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage value = com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                setImageUsage(value);
              }
              break;
            }
            case 34: {
              setImageId(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string appId = 1;
      public boolean hasAppId() {
        return result.hasAppId();
      }
      public java.lang.String getAppId() {
        return result.getAppId();
      }
      public Builder setAppId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAppId = true;
        result.appId_ = value;
        return this;
      }
      public Builder clearAppId() {
        result.hasAppId = false;
        result.appId_ = getDefaultInstance().getAppId();
        return this;
      }
      
      // optional .com.kindroid.security.util.GetImageRequest.AppImageUsage imageUsage = 3;
      public boolean hasImageUsage() {
        return result.hasImageUsage();
      }
      public com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage getImageUsage() {
        return result.getImageUsage();
      }
      public Builder setImageUsage(com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasImageUsage = true;
        result.imageUsage_ = value;
        return this;
      }
      public Builder clearImageUsage() {
        result.hasImageUsage = false;
        result.imageUsage_ = com.kindroid.security.util.Appstore.GetImageRequest.AppImageUsage.ICON;
        return this;
      }
      
      // optional string imageId = 4;
      public boolean hasImageId() {
        return result.hasImageId();
      }
      public java.lang.String getImageId() {
        return result.getImageId();
      }
      public Builder setImageId(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImageId = true;
        result.imageId_ = value;
        return this;
      }
      public Builder clearImageId() {
        result.hasImageId = false;
        result.imageId_ = getDefaultInstance().getImageId();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.GetImageRequest)
    }
    
    static {
      defaultInstance = new GetImageRequest(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.GetImageRequest)
  }
  
  public static final class GetImageResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use GetImageResponse.newBuilder() to construct.
    private GetImageResponse() {
      initFields();
    }
    private GetImageResponse(boolean noInit) {}
    
    private static final GetImageResponse defaultInstance;
    public static GetImageResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public GetImageResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_GetImageResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_GetImageResponse_fieldAccessorTable;
    }
    
    // optional bytes imageData = 1;
    public static final int IMAGEDATA_FIELD_NUMBER = 1;
    private boolean hasImageData;
    private com.google.protobuf.ByteString imageData_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasImageData() { return hasImageData; }
    public com.google.protobuf.ByteString getImageData() { return imageData_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasImageData()) {
        output.writeBytes(1, getImageData());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasImageData()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getImageData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.GetImageResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.GetImageResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.GetImageResponse result;
      
      // Construct using com.kindroid.security.util.Appstore.GetImageResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.GetImageResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.GetImageResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.GetImageResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.GetImageResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.GetImageResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.GetImageResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.GetImageResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.GetImageResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.GetImageResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.GetImageResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.GetImageResponse) {
          return mergeFrom((com.kindroid.security.util.Appstore.GetImageResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.GetImageResponse other) {
        if (other == com.kindroid.security.util.Appstore.GetImageResponse.getDefaultInstance()) return this;
        if (other.hasImageData()) {
          setImageData(other.getImageData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setImageData(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional bytes imageData = 1;
      public boolean hasImageData() {
        return result.hasImageData();
      }
      public com.google.protobuf.ByteString getImageData() {
        return result.getImageData();
      }
      public Builder setImageData(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasImageData = true;
        result.imageData_ = value;
        return this;
      }
      public Builder clearImageData() {
        result.hasImageData = false;
        result.imageData_ = getDefaultInstance().getImageData();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.GetImageResponse)
    }
    
    static {
      defaultInstance = new GetImageResponse(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.GetImageResponse)
  }
  
  public static final class HotKeyWordsRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use HotKeyWordsRequest.newBuilder() to construct.
    private HotKeyWordsRequest() {
      initFields();
    }
    private HotKeyWordsRequest(boolean noInit) {}
    
    private static final HotKeyWordsRequest defaultInstance;
    public static HotKeyWordsRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public HotKeyWordsRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_HotKeyWordsRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_HotKeyWordsRequest_fieldAccessorTable;
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.HotKeyWordsRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.HotKeyWordsRequest result;
      
      // Construct using com.kindroid.security.util.Appstore.HotKeyWordsRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.HotKeyWordsRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.HotKeyWordsRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.HotKeyWordsRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.HotKeyWordsRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.HotKeyWordsRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.HotKeyWordsRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.HotKeyWordsRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.HotKeyWordsRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.HotKeyWordsRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.HotKeyWordsRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.HotKeyWordsRequest) {
          return mergeFrom((com.kindroid.security.util.Appstore.HotKeyWordsRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.HotKeyWordsRequest other) {
        if (other == com.kindroid.security.util.Appstore.HotKeyWordsRequest.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
          }
        }
      }
      
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.HotKeyWordsRequest)
    }
    
    static {
      defaultInstance = new HotKeyWordsRequest(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.HotKeyWordsRequest)
  }
  
  public static final class HotKeyWordsResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use HotKeyWordsResponse.newBuilder() to construct.
    private HotKeyWordsResponse() {
      initFields();
    }
    private HotKeyWordsResponse(boolean noInit) {}
    
    private static final HotKeyWordsResponse defaultInstance;
    public static HotKeyWordsResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public HotKeyWordsResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_HotKeyWordsResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_HotKeyWordsResponse_fieldAccessorTable;
    }
    
    // repeated string word = 1;
    public static final int WORD_FIELD_NUMBER = 1;
    private java.util.List<java.lang.String> word_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.String> getWordList() {
      return word_;
    }
    public int getWordCount() { return word_.size(); }
    public java.lang.String getWord(int index) {
      return word_.get(index);
    }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (java.lang.String element : getWordList()) {
        output.writeString(1, element);
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (java.lang.String element : getWordList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeStringSizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getWordList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.HotKeyWordsResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.HotKeyWordsResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.HotKeyWordsResponse result;
      
      // Construct using com.kindroid.security.util.Appstore.HotKeyWordsResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.HotKeyWordsResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.HotKeyWordsResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.HotKeyWordsResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.HotKeyWordsResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.HotKeyWordsResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.HotKeyWordsResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.HotKeyWordsResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.HotKeyWordsResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.HotKeyWordsResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.word_ != java.util.Collections.EMPTY_LIST) {
          result.word_ =
            java.util.Collections.unmodifiableList(result.word_);
        }
        com.kindroid.security.util.Appstore.HotKeyWordsResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.HotKeyWordsResponse) {
          return mergeFrom((com.kindroid.security.util.Appstore.HotKeyWordsResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.HotKeyWordsResponse other) {
        if (other == com.kindroid.security.util.Appstore.HotKeyWordsResponse.getDefaultInstance()) return this;
        if (!other.word_.isEmpty()) {
          if (result.word_.isEmpty()) {
            result.word_ = new java.util.ArrayList<java.lang.String>();
          }
          result.word_.addAll(other.word_);
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              addWord(input.readString());
              break;
            }
          }
        }
      }
      
      
      // repeated string word = 1;
      public java.util.List<java.lang.String> getWordList() {
        return java.util.Collections.unmodifiableList(result.word_);
      }
      public int getWordCount() {
        return result.getWordCount();
      }
      public java.lang.String getWord(int index) {
        return result.getWord(index);
      }
      public Builder setWord(int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.word_.set(index, value);
        return this;
      }
      public Builder addWord(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  if (result.word_.isEmpty()) {
          result.word_ = new java.util.ArrayList<java.lang.String>();
        }
        result.word_.add(value);
        return this;
      }
      public Builder addAllWord(
          java.lang.Iterable<? extends java.lang.String> values) {
        if (result.word_.isEmpty()) {
          result.word_ = new java.util.ArrayList<java.lang.String>();
        }
        super.addAll(values, result.word_);
        return this;
      }
      public Builder clearWord() {
        result.word_ = java.util.Collections.emptyList();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.HotKeyWordsResponse)
    }
    
    static {
      defaultInstance = new HotKeyWordsResponse(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.HotKeyWordsResponse)
  }
  
  public static final class Icon extends
      com.google.protobuf.GeneratedMessage {
    // Use Icon.newBuilder() to construct.
    private Icon() {
      initFields();
    }
    private Icon(boolean noInit) {}
    
    private static final Icon defaultInstance;
    public static Icon getDefaultInstance() {
      return defaultInstance;
    }
    
    public Icon getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_Icon_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_Icon_fieldAccessorTable;
    }
    
    // optional int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private boolean hasId;
    private int id_ = 0;
    public boolean hasId() { return hasId; }
    public int getId() { return id_; }
    
    // optional bytes icon = 2;
    public static final int ICON_FIELD_NUMBER = 2;
    private boolean hasIcon;
    private com.google.protobuf.ByteString icon_ = com.google.protobuf.ByteString.EMPTY;
    public boolean hasIcon() { return hasIcon; }
    public com.google.protobuf.ByteString getIcon() { return icon_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasId()) {
        output.writeInt32(1, getId());
      }
      if (hasIcon()) {
        output.writeBytes(2, getIcon());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasId()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getId());
      }
      if (hasIcon()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getIcon());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.Icon parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.Icon parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Icon parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.Icon prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.Icon result;
      
      // Construct using com.kindroid.security.util.Appstore.Icon.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.Icon();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.Icon internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.Icon();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.Icon.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.Icon getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.Icon.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.Icon build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.Icon buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.Icon buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.Icon returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.Icon) {
          return mergeFrom((com.kindroid.security.util.Appstore.Icon)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.Icon other) {
        if (other == com.kindroid.security.util.Appstore.Icon.getDefaultInstance()) return this;
        if (other.hasId()) {
          setId(other.getId());
        }
        if (other.hasIcon()) {
          setIcon(other.getIcon());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setId(input.readInt32());
              break;
            }
            case 18: {
              setIcon(input.readBytes());
              break;
            }
          }
        }
      }
      
      
      // optional int32 id = 1;
      public boolean hasId() {
        return result.hasId();
      }
      public int getId() {
        return result.getId();
      }
      public Builder setId(int value) {
        result.hasId = true;
        result.id_ = value;
        return this;
      }
      public Builder clearId() {
        result.hasId = false;
        result.id_ = 0;
        return this;
      }
      
      // optional bytes icon = 2;
      public boolean hasIcon() {
        return result.hasIcon();
      }
      public com.google.protobuf.ByteString getIcon() {
        return result.getIcon();
      }
      public Builder setIcon(com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasIcon = true;
        result.icon_ = value;
        return this;
      }
      public Builder clearIcon() {
        result.hasIcon = false;
        result.icon_ = getDefaultInstance().getIcon();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Icon)
    }
    
    static {
      defaultInstance = new Icon(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Icon)
  }
  
  public static final class IconRequest extends
      com.google.protobuf.GeneratedMessage {
    // Use IconRequest.newBuilder() to construct.
    private IconRequest() {
      initFields();
    }
    private IconRequest(boolean noInit) {}
    
    private static final IconRequest defaultInstance;
    public static IconRequest getDefaultInstance() {
      return defaultInstance;
    }
    
    public IconRequest getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_IconRequest_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_IconRequest_fieldAccessorTable;
    }
    
    public enum IconType
        implements com.google.protobuf.ProtocolMessageEnum {
      ACCOUNT(0, 2),
      APP(1, 3),
      ;
      
      
      public final int getNumber() { return value; }
      
      public static IconType valueOf(int value) {
        switch (value) {
          case 2: return ACCOUNT;
          case 3: return APP;
          default: return null;
        }
      }
      
      public static com.google.protobuf.Internal.EnumLiteMap<IconType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<IconType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<IconType>() {
              public IconType findValueByNumber(int number) {
                return IconType.valueOf(number)
      ;        }
            };
      
      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.kindroid.security.util.Appstore.IconRequest.getDescriptor().getEnumTypes().get(0);
      }
      
      private static final IconType[] VALUES = {
        ACCOUNT, APP, 
      };
      public static IconType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }
      private final int index;
      private final int value;
      private IconType(int index, int value) {
        this.index = index;
        this.value = value;
      }
      
      static {
        com.kindroid.security.util.Appstore.getDescriptor();
      }
      
      // @@protoc_insertion_point(enum_scope:com.kindroid.security.util.IconRequest.IconType)
    }
    
    // repeated int32 id = 1;
    public static final int ID_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> id_ =
      java.util.Collections.emptyList();
    public java.util.List<java.lang.Integer> getIdList() {
      return id_;
    }
    public int getIdCount() { return id_.size(); }
    public int getId(int index) {
      return id_.get(index);
    }
    
    // optional .com.kindroid.security.util.IconRequest.IconType iconType = 4;
    public static final int ICONTYPE_FIELD_NUMBER = 4;
    private boolean hasIconType;
    private com.kindroid.security.util.Appstore.IconRequest.IconType iconType_;
    public boolean hasIconType() { return hasIconType; }
    public com.kindroid.security.util.Appstore.IconRequest.IconType getIconType() { return iconType_; }
    
    private void initFields() {
      iconType_ = com.kindroid.security.util.Appstore.IconRequest.IconType.ACCOUNT;
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int element : getIdList()) {
        output.writeInt32(1, element);
      }
      if (hasIconType()) {
        output.writeEnum(4, getIconType().getNumber());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      {
        int dataSize = 0;
        for (int element : getIdList()) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(element);
        }
        size += dataSize;
        size += 1 * getIdList().size();
      }
      if (hasIconType()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, getIconType().getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.IconRequest prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.IconRequest result;
      
      // Construct using com.kindroid.security.util.Appstore.IconRequest.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.IconRequest();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.IconRequest internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.IconRequest();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.IconRequest.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.IconRequest getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.IconRequest.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.IconRequest build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.IconRequest buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.IconRequest buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.id_ != java.util.Collections.EMPTY_LIST) {
          result.id_ =
            java.util.Collections.unmodifiableList(result.id_);
        }
        com.kindroid.security.util.Appstore.IconRequest returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.IconRequest) {
          return mergeFrom((com.kindroid.security.util.Appstore.IconRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.IconRequest other) {
        if (other == com.kindroid.security.util.Appstore.IconRequest.getDefaultInstance()) return this;
        if (!other.id_.isEmpty()) {
          if (result.id_.isEmpty()) {
            result.id_ = new java.util.ArrayList<java.lang.Integer>();
          }
          result.id_.addAll(other.id_);
        }
        if (other.hasIconType()) {
          setIconType(other.getIconType());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              addId(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              while (input.getBytesUntilLimit() > 0) {
                addId(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              com.kindroid.security.util.Appstore.IconRequest.IconType value = com.kindroid.security.util.Appstore.IconRequest.IconType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                setIconType(value);
              }
              break;
            }
          }
        }
      }
      
      
      // repeated int32 id = 1;
      public java.util.List<java.lang.Integer> getIdList() {
        return java.util.Collections.unmodifiableList(result.id_);
      }
      public int getIdCount() {
        return result.getIdCount();
      }
      public int getId(int index) {
        return result.getId(index);
      }
      public Builder setId(int index, int value) {
        result.id_.set(index, value);
        return this;
      }
      public Builder addId(int value) {
        if (result.id_.isEmpty()) {
          result.id_ = new java.util.ArrayList<java.lang.Integer>();
        }
        result.id_.add(value);
        return this;
      }
      public Builder addAllId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        if (result.id_.isEmpty()) {
          result.id_ = new java.util.ArrayList<java.lang.Integer>();
        }
        super.addAll(values, result.id_);
        return this;
      }
      public Builder clearId() {
        result.id_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional .com.kindroid.security.util.IconRequest.IconType iconType = 4;
      public boolean hasIconType() {
        return result.hasIconType();
      }
      public com.kindroid.security.util.Appstore.IconRequest.IconType getIconType() {
        return result.getIconType();
      }
      public Builder setIconType(com.kindroid.security.util.Appstore.IconRequest.IconType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasIconType = true;
        result.iconType_ = value;
        return this;
      }
      public Builder clearIconType() {
        result.hasIconType = false;
        result.iconType_ = com.kindroid.security.util.Appstore.IconRequest.IconType.ACCOUNT;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.IconRequest)
    }
    
    static {
      defaultInstance = new IconRequest(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.IconRequest)
  }
  
  public static final class IconResponse extends
      com.google.protobuf.GeneratedMessage {
    // Use IconResponse.newBuilder() to construct.
    private IconResponse() {
      initFields();
    }
    private IconResponse(boolean noInit) {}
    
    private static final IconResponse defaultInstance;
    public static IconResponse getDefaultInstance() {
      return defaultInstance;
    }
    
    public IconResponse getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_IconResponse_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_IconResponse_fieldAccessorTable;
    }
    
    // repeated .com.kindroid.security.util.Icon icon = 1;
    public static final int ICON_FIELD_NUMBER = 1;
    private java.util.List<com.kindroid.security.util.Appstore.Icon> icon_ =
      java.util.Collections.emptyList();
    public java.util.List<com.kindroid.security.util.Appstore.Icon> getIconList() {
      return icon_;
    }
    public int getIconCount() { return icon_.size(); }
    public com.kindroid.security.util.Appstore.Icon getIcon(int index) {
      return icon_.get(index);
    }
    
    // optional int32 entriesCount = 2;
    public static final int ENTRIESCOUNT_FIELD_NUMBER = 2;
    private boolean hasEntriesCount;
    private int entriesCount_ = 0;
    public boolean hasEntriesCount() { return hasEntriesCount; }
    public int getEntriesCount() { return entriesCount_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (com.kindroid.security.util.Appstore.Icon element : getIconList()) {
        output.writeMessage(1, element);
      }
      if (hasEntriesCount()) {
        output.writeInt32(2, getEntriesCount());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      for (com.kindroid.security.util.Appstore.Icon element : getIconList()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, element);
      }
      if (hasEntriesCount()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, getEntriesCount());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.IconResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.IconResponse prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.IconResponse result;
      
      // Construct using com.kindroid.security.util.Appstore.IconResponse.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.IconResponse();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.IconResponse internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.IconResponse();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.IconResponse.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.IconResponse getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.IconResponse.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.IconResponse build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.IconResponse buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.IconResponse buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        if (result.icon_ != java.util.Collections.EMPTY_LIST) {
          result.icon_ =
            java.util.Collections.unmodifiableList(result.icon_);
        }
        com.kindroid.security.util.Appstore.IconResponse returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.IconResponse) {
          return mergeFrom((com.kindroid.security.util.Appstore.IconResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.IconResponse other) {
        if (other == com.kindroid.security.util.Appstore.IconResponse.getDefaultInstance()) return this;
        if (!other.icon_.isEmpty()) {
          if (result.icon_.isEmpty()) {
            result.icon_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.Icon>();
          }
          result.icon_.addAll(other.icon_);
        }
        if (other.hasEntriesCount()) {
          setEntriesCount(other.getEntriesCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.Appstore.Icon.Builder subBuilder = com.kindroid.security.util.Appstore.Icon.newBuilder();
              input.readMessage(subBuilder, extensionRegistry);
              addIcon(subBuilder.buildPartial());
              break;
            }
            case 16: {
              setEntriesCount(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // repeated .com.kindroid.security.util.Icon icon = 1;
      public java.util.List<com.kindroid.security.util.Appstore.Icon> getIconList() {
        return java.util.Collections.unmodifiableList(result.icon_);
      }
      public int getIconCount() {
        return result.getIconCount();
      }
      public com.kindroid.security.util.Appstore.Icon getIcon(int index) {
        return result.getIcon(index);
      }
      public Builder setIcon(int index, com.kindroid.security.util.Appstore.Icon value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.icon_.set(index, value);
        return this;
      }
      public Builder setIcon(int index, com.kindroid.security.util.Appstore.Icon.Builder builderForValue) {
        result.icon_.set(index, builderForValue.build());
        return this;
      }
      public Builder addIcon(com.kindroid.security.util.Appstore.Icon value) {
        if (value == null) {
          throw new NullPointerException();
        }
        if (result.icon_.isEmpty()) {
          result.icon_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.Icon>();
        }
        result.icon_.add(value);
        return this;
      }
      public Builder addIcon(com.kindroid.security.util.Appstore.Icon.Builder builderForValue) {
        if (result.icon_.isEmpty()) {
          result.icon_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.Icon>();
        }
        result.icon_.add(builderForValue.build());
        return this;
      }
      public Builder addAllIcon(
          java.lang.Iterable<? extends com.kindroid.security.util.Appstore.Icon> values) {
        if (result.icon_.isEmpty()) {
          result.icon_ = new java.util.ArrayList<com.kindroid.security.util.Appstore.Icon>();
        }
        super.addAll(values, result.icon_);
        return this;
      }
      public Builder clearIcon() {
        result.icon_ = java.util.Collections.emptyList();
        return this;
      }
      
      // optional int32 entriesCount = 2;
      public boolean hasEntriesCount() {
        return result.hasEntriesCount();
      }
      public int getEntriesCount() {
        return result.getEntriesCount();
      }
      public Builder setEntriesCount(int value) {
        result.hasEntriesCount = true;
        result.entriesCount_ = value;
        return this;
      }
      public Builder clearEntriesCount() {
        result.hasEntriesCount = false;
        result.entriesCount_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.IconResponse)
    }
    
    static {
      defaultInstance = new IconResponse(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.IconResponse)
  }
  
  public static final class RequestContext extends
      com.google.protobuf.GeneratedMessage {
    // Use RequestContext.newBuilder() to construct.
    private RequestContext() {
      initFields();
    }
    private RequestContext(boolean noInit) {}
    
    private static final RequestContext defaultInstance;
    public static RequestContext getDefaultInstance() {
      return defaultInstance;
    }
    
    public RequestContext getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_RequestContext_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_RequestContext_fieldAccessorTable;
    }
    
    // optional string authToken = 1;
    public static final int AUTHTOKEN_FIELD_NUMBER = 1;
    private boolean hasAuthToken;
    private java.lang.String authToken_ = "";
    public boolean hasAuthToken() { return hasAuthToken; }
    public java.lang.String getAuthToken() { return authToken_; }
    
    // optional string marketVersion = 2;
    public static final int MARKETVERSION_FIELD_NUMBER = 2;
    private boolean hasMarketVersion;
    private java.lang.String marketVersion_ = "";
    public boolean hasMarketVersion() { return hasMarketVersion; }
    public java.lang.String getMarketVersion() { return marketVersion_; }
    
    // optional string osSdkVersion = 3;
    public static final int OSSDKVERSION_FIELD_NUMBER = 3;
    private boolean hasOsSdkVersion;
    private java.lang.String osSdkVersion_ = "";
    public boolean hasOsSdkVersion() { return hasOsSdkVersion; }
    public java.lang.String getOsSdkVersion() { return osSdkVersion_; }
    
    // optional string userLanguage = 4;
    public static final int USERLANGUAGE_FIELD_NUMBER = 4;
    private boolean hasUserLanguage;
    private java.lang.String userLanguage_ = "";
    public boolean hasUserLanguage() { return hasUserLanguage; }
    public java.lang.String getUserLanguage() { return userLanguage_; }
    
    // optional string userCountry = 5;
    public static final int USERCOUNTRY_FIELD_NUMBER = 5;
    private boolean hasUserCountry;
    private java.lang.String userCountry_ = "";
    public boolean hasUserCountry() { return hasUserCountry; }
    public java.lang.String getUserCountry() { return userCountry_; }
    
    // optional string deviceid = 6;
    public static final int DEVICEID_FIELD_NUMBER = 6;
    private boolean hasDeviceid;
    private java.lang.String deviceid_ = "";
    public boolean hasDeviceid() { return hasDeviceid; }
    public java.lang.String getDeviceid() { return deviceid_; }
    
    // optional string screenResolution = 7;
    public static final int SCREENRESOLUTION_FIELD_NUMBER = 7;
    private boolean hasScreenResolution;
    private java.lang.String screenResolution_ = "";
    public boolean hasScreenResolution() { return hasScreenResolution; }
    public java.lang.String getScreenResolution() { return screenResolution_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasAuthToken()) {
        output.writeString(1, getAuthToken());
      }
      if (hasMarketVersion()) {
        output.writeString(2, getMarketVersion());
      }
      if (hasOsSdkVersion()) {
        output.writeString(3, getOsSdkVersion());
      }
      if (hasUserLanguage()) {
        output.writeString(4, getUserLanguage());
      }
      if (hasUserCountry()) {
        output.writeString(5, getUserCountry());
      }
      if (hasDeviceid()) {
        output.writeString(6, getDeviceid());
      }
      if (hasScreenResolution()) {
        output.writeString(7, getScreenResolution());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasAuthToken()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(1, getAuthToken());
      }
      if (hasMarketVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(2, getMarketVersion());
      }
      if (hasOsSdkVersion()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(3, getOsSdkVersion());
      }
      if (hasUserLanguage()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(4, getUserLanguage());
      }
      if (hasUserCountry()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(5, getUserCountry());
      }
      if (hasDeviceid()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(6, getDeviceid());
      }
      if (hasScreenResolution()) {
        size += com.google.protobuf.CodedOutputStream
          .computeStringSize(7, getScreenResolution());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.RequestContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.RequestContext prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.RequestContext result;
      
      // Construct using com.kindroid.security.util.Appstore.RequestContext.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.RequestContext();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.RequestContext internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.RequestContext();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.RequestContext.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.RequestContext getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.RequestContext.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.RequestContext build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.RequestContext buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.RequestContext buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.RequestContext returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.RequestContext) {
          return mergeFrom((com.kindroid.security.util.Appstore.RequestContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.RequestContext other) {
        if (other == com.kindroid.security.util.Appstore.RequestContext.getDefaultInstance()) return this;
        if (other.hasAuthToken()) {
          setAuthToken(other.getAuthToken());
        }
        if (other.hasMarketVersion()) {
          setMarketVersion(other.getMarketVersion());
        }
        if (other.hasOsSdkVersion()) {
          setOsSdkVersion(other.getOsSdkVersion());
        }
        if (other.hasUserLanguage()) {
          setUserLanguage(other.getUserLanguage());
        }
        if (other.hasUserCountry()) {
          setUserCountry(other.getUserCountry());
        }
        if (other.hasDeviceid()) {
          setDeviceid(other.getDeviceid());
        }
        if (other.hasScreenResolution()) {
          setScreenResolution(other.getScreenResolution());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              setAuthToken(input.readString());
              break;
            }
            case 18: {
              setMarketVersion(input.readString());
              break;
            }
            case 26: {
              setOsSdkVersion(input.readString());
              break;
            }
            case 34: {
              setUserLanguage(input.readString());
              break;
            }
            case 42: {
              setUserCountry(input.readString());
              break;
            }
            case 50: {
              setDeviceid(input.readString());
              break;
            }
            case 58: {
              setScreenResolution(input.readString());
              break;
            }
          }
        }
      }
      
      
      // optional string authToken = 1;
      public boolean hasAuthToken() {
        return result.hasAuthToken();
      }
      public java.lang.String getAuthToken() {
        return result.getAuthToken();
      }
      public Builder setAuthToken(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasAuthToken = true;
        result.authToken_ = value;
        return this;
      }
      public Builder clearAuthToken() {
        result.hasAuthToken = false;
        result.authToken_ = getDefaultInstance().getAuthToken();
        return this;
      }
      
      // optional string marketVersion = 2;
      public boolean hasMarketVersion() {
        return result.hasMarketVersion();
      }
      public java.lang.String getMarketVersion() {
        return result.getMarketVersion();
      }
      public Builder setMarketVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasMarketVersion = true;
        result.marketVersion_ = value;
        return this;
      }
      public Builder clearMarketVersion() {
        result.hasMarketVersion = false;
        result.marketVersion_ = getDefaultInstance().getMarketVersion();
        return this;
      }
      
      // optional string osSdkVersion = 3;
      public boolean hasOsSdkVersion() {
        return result.hasOsSdkVersion();
      }
      public java.lang.String getOsSdkVersion() {
        return result.getOsSdkVersion();
      }
      public Builder setOsSdkVersion(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasOsSdkVersion = true;
        result.osSdkVersion_ = value;
        return this;
      }
      public Builder clearOsSdkVersion() {
        result.hasOsSdkVersion = false;
        result.osSdkVersion_ = getDefaultInstance().getOsSdkVersion();
        return this;
      }
      
      // optional string userLanguage = 4;
      public boolean hasUserLanguage() {
        return result.hasUserLanguage();
      }
      public java.lang.String getUserLanguage() {
        return result.getUserLanguage();
      }
      public Builder setUserLanguage(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUserLanguage = true;
        result.userLanguage_ = value;
        return this;
      }
      public Builder clearUserLanguage() {
        result.hasUserLanguage = false;
        result.userLanguage_ = getDefaultInstance().getUserLanguage();
        return this;
      }
      
      // optional string userCountry = 5;
      public boolean hasUserCountry() {
        return result.hasUserCountry();
      }
      public java.lang.String getUserCountry() {
        return result.getUserCountry();
      }
      public Builder setUserCountry(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasUserCountry = true;
        result.userCountry_ = value;
        return this;
      }
      public Builder clearUserCountry() {
        result.hasUserCountry = false;
        result.userCountry_ = getDefaultInstance().getUserCountry();
        return this;
      }
      
      // optional string deviceid = 6;
      public boolean hasDeviceid() {
        return result.hasDeviceid();
      }
      public java.lang.String getDeviceid() {
        return result.getDeviceid();
      }
      public Builder setDeviceid(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasDeviceid = true;
        result.deviceid_ = value;
        return this;
      }
      public Builder clearDeviceid() {
        result.hasDeviceid = false;
        result.deviceid_ = getDefaultInstance().getDeviceid();
        return this;
      }
      
      // optional string screenResolution = 7;
      public boolean hasScreenResolution() {
        return result.hasScreenResolution();
      }
      public java.lang.String getScreenResolution() {
        return result.getScreenResolution();
      }
      public Builder setScreenResolution(java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  result.hasScreenResolution = true;
        result.screenResolution_ = value;
        return this;
      }
      public Builder clearScreenResolution() {
        result.hasScreenResolution = false;
        result.screenResolution_ = getDefaultInstance().getScreenResolution();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.RequestContext)
    }
    
    static {
      defaultInstance = new RequestContext(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.RequestContext)
  }
  
  public static final class Request extends
      com.google.protobuf.GeneratedMessage {
    // Use Request.newBuilder() to construct.
    private Request() {
      initFields();
    }
    private Request(boolean noInit) {}
    
    private static final Request defaultInstance;
    public static Request getDefaultInstance() {
      return defaultInstance;
    }
    
    public Request getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_Request_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_Request_fieldAccessorTable;
    }
    
    // optional .com.kindroid.security.util.RequestContext context = 1;
    public static final int CONTEXT_FIELD_NUMBER = 1;
    private boolean hasContext;
    private com.kindroid.security.util.Appstore.RequestContext context_;
    public boolean hasContext() { return hasContext; }
    public com.kindroid.security.util.Appstore.RequestContext getContext() { return context_; }
    
    // optional .com.kindroid.security.util.AppsRequest appsRequest = 4;
    public static final int APPSREQUEST_FIELD_NUMBER = 4;
    private boolean hasAppsRequest;
    private com.kindroid.security.util.Appstore.AppsRequest appsRequest_;
    public boolean hasAppsRequest() { return hasAppsRequest; }
    public com.kindroid.security.util.Appstore.AppsRequest getAppsRequest() { return appsRequest_; }
    
    // optional .com.kindroid.security.util.GetImageRequest imageRequest = 6;
    public static final int IMAGEREQUEST_FIELD_NUMBER = 6;
    private boolean hasImageRequest;
    private com.kindroid.security.util.Appstore.GetImageRequest imageRequest_;
    public boolean hasImageRequest() { return hasImageRequest; }
    public com.kindroid.security.util.Appstore.GetImageRequest getImageRequest() { return imageRequest_; }
    
    // optional .com.kindroid.security.util.HotKeyWordsRequest hotkeyWordsRequest = 12;
    public static final int HOTKEYWORDSREQUEST_FIELD_NUMBER = 12;
    private boolean hasHotkeyWordsRequest;
    private com.kindroid.security.util.Appstore.HotKeyWordsRequest hotkeyWordsRequest_;
    public boolean hasHotkeyWordsRequest() { return hasHotkeyWordsRequest; }
    public com.kindroid.security.util.Appstore.HotKeyWordsRequest getHotkeyWordsRequest() { return hotkeyWordsRequest_; }
    
    // optional .com.kindroid.security.util.IconRequest iconRequest = 24;
    public static final int ICONREQUEST_FIELD_NUMBER = 24;
    private boolean hasIconRequest;
    private com.kindroid.security.util.Appstore.IconRequest iconRequest_;
    public boolean hasIconRequest() { return hasIconRequest; }
    public com.kindroid.security.util.Appstore.IconRequest getIconRequest() { return iconRequest_; }
    
    private void initFields() {
      context_ = com.kindroid.security.util.Appstore.RequestContext.getDefaultInstance();
      appsRequest_ = com.kindroid.security.util.Appstore.AppsRequest.getDefaultInstance();
      imageRequest_ = com.kindroid.security.util.Appstore.GetImageRequest.getDefaultInstance();
      hotkeyWordsRequest_ = com.kindroid.security.util.Appstore.HotKeyWordsRequest.getDefaultInstance();
      iconRequest_ = com.kindroid.security.util.Appstore.IconRequest.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContext()) {
        output.writeMessage(1, getContext());
      }
      if (hasAppsRequest()) {
        output.writeMessage(4, getAppsRequest());
      }
      if (hasImageRequest()) {
        output.writeMessage(6, getImageRequest());
      }
      if (hasHotkeyWordsRequest()) {
        output.writeMessage(12, getHotkeyWordsRequest());
      }
      if (hasIconRequest()) {
        output.writeMessage(24, getIconRequest());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (hasAppsRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getAppsRequest());
      }
      if (hasImageRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getImageRequest());
      }
      if (hasHotkeyWordsRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getHotkeyWordsRequest());
      }
      if (hasIconRequest()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(24, getIconRequest());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.Request parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.Request parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Request parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.Request prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.Request result;
      
      // Construct using com.kindroid.security.util.Appstore.Request.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.Request();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.Request internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.Request();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.Request.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.Request getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.Request.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.Request build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.Request buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.Request buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.Request returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.Request) {
          return mergeFrom((com.kindroid.security.util.Appstore.Request)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.Request other) {
        if (other == com.kindroid.security.util.Appstore.Request.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (other.hasAppsRequest()) {
          mergeAppsRequest(other.getAppsRequest());
        }
        if (other.hasImageRequest()) {
          mergeImageRequest(other.getImageRequest());
        }
        if (other.hasHotkeyWordsRequest()) {
          mergeHotkeyWordsRequest(other.getHotkeyWordsRequest());
        }
        if (other.hasIconRequest()) {
          mergeIconRequest(other.getIconRequest());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.Appstore.RequestContext.Builder subBuilder = com.kindroid.security.util.Appstore.RequestContext.newBuilder();
              if (hasContext()) {
                subBuilder.mergeFrom(getContext());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContext(subBuilder.buildPartial());
              break;
            }
            case 34: {
              com.kindroid.security.util.Appstore.AppsRequest.Builder subBuilder = com.kindroid.security.util.Appstore.AppsRequest.newBuilder();
              if (hasAppsRequest()) {
                subBuilder.mergeFrom(getAppsRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAppsRequest(subBuilder.buildPartial());
              break;
            }
            case 50: {
              com.kindroid.security.util.Appstore.GetImageRequest.Builder subBuilder = com.kindroid.security.util.Appstore.GetImageRequest.newBuilder();
              if (hasImageRequest()) {
                subBuilder.mergeFrom(getImageRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setImageRequest(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.kindroid.security.util.Appstore.HotKeyWordsRequest.Builder subBuilder = com.kindroid.security.util.Appstore.HotKeyWordsRequest.newBuilder();
              if (hasHotkeyWordsRequest()) {
                subBuilder.mergeFrom(getHotkeyWordsRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHotkeyWordsRequest(subBuilder.buildPartial());
              break;
            }
            case 194: {
              com.kindroid.security.util.Appstore.IconRequest.Builder subBuilder = com.kindroid.security.util.Appstore.IconRequest.newBuilder();
              if (hasIconRequest()) {
                subBuilder.mergeFrom(getIconRequest());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setIconRequest(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.kindroid.security.util.RequestContext context = 1;
      public boolean hasContext() {
        return result.hasContext();
      }
      public com.kindroid.security.util.Appstore.RequestContext getContext() {
        return result.getContext();
      }
      public Builder setContext(com.kindroid.security.util.Appstore.RequestContext value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder setContext(com.kindroid.security.util.Appstore.RequestContext.Builder builderForValue) {
        result.hasContext = true;
        result.context_ = builderForValue.build();
        return this;
      }
      public Builder mergeContext(com.kindroid.security.util.Appstore.RequestContext value) {
        if (result.hasContext() &&
            result.context_ != com.kindroid.security.util.Appstore.RequestContext.getDefaultInstance()) {
          result.context_ =
            com.kindroid.security.util.Appstore.RequestContext.newBuilder(result.context_).mergeFrom(value).buildPartial();
        } else {
          result.context_ = value;
        }
        result.hasContext = true;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = com.kindroid.security.util.Appstore.RequestContext.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.AppsRequest appsRequest = 4;
      public boolean hasAppsRequest() {
        return result.hasAppsRequest();
      }
      public com.kindroid.security.util.Appstore.AppsRequest getAppsRequest() {
        return result.getAppsRequest();
      }
      public Builder setAppsRequest(com.kindroid.security.util.Appstore.AppsRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAppsRequest = true;
        result.appsRequest_ = value;
        return this;
      }
      public Builder setAppsRequest(com.kindroid.security.util.Appstore.AppsRequest.Builder builderForValue) {
        result.hasAppsRequest = true;
        result.appsRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeAppsRequest(com.kindroid.security.util.Appstore.AppsRequest value) {
        if (result.hasAppsRequest() &&
            result.appsRequest_ != com.kindroid.security.util.Appstore.AppsRequest.getDefaultInstance()) {
          result.appsRequest_ =
            com.kindroid.security.util.Appstore.AppsRequest.newBuilder(result.appsRequest_).mergeFrom(value).buildPartial();
        } else {
          result.appsRequest_ = value;
        }
        result.hasAppsRequest = true;
        return this;
      }
      public Builder clearAppsRequest() {
        result.hasAppsRequest = false;
        result.appsRequest_ = com.kindroid.security.util.Appstore.AppsRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.GetImageRequest imageRequest = 6;
      public boolean hasImageRequest() {
        return result.hasImageRequest();
      }
      public com.kindroid.security.util.Appstore.GetImageRequest getImageRequest() {
        return result.getImageRequest();
      }
      public Builder setImageRequest(com.kindroid.security.util.Appstore.GetImageRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasImageRequest = true;
        result.imageRequest_ = value;
        return this;
      }
      public Builder setImageRequest(com.kindroid.security.util.Appstore.GetImageRequest.Builder builderForValue) {
        result.hasImageRequest = true;
        result.imageRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeImageRequest(com.kindroid.security.util.Appstore.GetImageRequest value) {
        if (result.hasImageRequest() &&
            result.imageRequest_ != com.kindroid.security.util.Appstore.GetImageRequest.getDefaultInstance()) {
          result.imageRequest_ =
            com.kindroid.security.util.Appstore.GetImageRequest.newBuilder(result.imageRequest_).mergeFrom(value).buildPartial();
        } else {
          result.imageRequest_ = value;
        }
        result.hasImageRequest = true;
        return this;
      }
      public Builder clearImageRequest() {
        result.hasImageRequest = false;
        result.imageRequest_ = com.kindroid.security.util.Appstore.GetImageRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.HotKeyWordsRequest hotkeyWordsRequest = 12;
      public boolean hasHotkeyWordsRequest() {
        return result.hasHotkeyWordsRequest();
      }
      public com.kindroid.security.util.Appstore.HotKeyWordsRequest getHotkeyWordsRequest() {
        return result.getHotkeyWordsRequest();
      }
      public Builder setHotkeyWordsRequest(com.kindroid.security.util.Appstore.HotKeyWordsRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHotkeyWordsRequest = true;
        result.hotkeyWordsRequest_ = value;
        return this;
      }
      public Builder setHotkeyWordsRequest(com.kindroid.security.util.Appstore.HotKeyWordsRequest.Builder builderForValue) {
        result.hasHotkeyWordsRequest = true;
        result.hotkeyWordsRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeHotkeyWordsRequest(com.kindroid.security.util.Appstore.HotKeyWordsRequest value) {
        if (result.hasHotkeyWordsRequest() &&
            result.hotkeyWordsRequest_ != com.kindroid.security.util.Appstore.HotKeyWordsRequest.getDefaultInstance()) {
          result.hotkeyWordsRequest_ =
            com.kindroid.security.util.Appstore.HotKeyWordsRequest.newBuilder(result.hotkeyWordsRequest_).mergeFrom(value).buildPartial();
        } else {
          result.hotkeyWordsRequest_ = value;
        }
        result.hasHotkeyWordsRequest = true;
        return this;
      }
      public Builder clearHotkeyWordsRequest() {
        result.hasHotkeyWordsRequest = false;
        result.hotkeyWordsRequest_ = com.kindroid.security.util.Appstore.HotKeyWordsRequest.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.IconRequest iconRequest = 24;
      public boolean hasIconRequest() {
        return result.hasIconRequest();
      }
      public com.kindroid.security.util.Appstore.IconRequest getIconRequest() {
        return result.getIconRequest();
      }
      public Builder setIconRequest(com.kindroid.security.util.Appstore.IconRequest value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasIconRequest = true;
        result.iconRequest_ = value;
        return this;
      }
      public Builder setIconRequest(com.kindroid.security.util.Appstore.IconRequest.Builder builderForValue) {
        result.hasIconRequest = true;
        result.iconRequest_ = builderForValue.build();
        return this;
      }
      public Builder mergeIconRequest(com.kindroid.security.util.Appstore.IconRequest value) {
        if (result.hasIconRequest() &&
            result.iconRequest_ != com.kindroid.security.util.Appstore.IconRequest.getDefaultInstance()) {
          result.iconRequest_ =
            com.kindroid.security.util.Appstore.IconRequest.newBuilder(result.iconRequest_).mergeFrom(value).buildPartial();
        } else {
          result.iconRequest_ = value;
        }
        result.hasIconRequest = true;
        return this;
      }
      public Builder clearIconRequest() {
        result.hasIconRequest = false;
        result.iconRequest_ = com.kindroid.security.util.Appstore.IconRequest.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Request)
    }
    
    static {
      defaultInstance = new Request(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Request)
  }
  
  public static final class ResponseContext extends
      com.google.protobuf.GeneratedMessage {
    // Use ResponseContext.newBuilder() to construct.
    private ResponseContext() {
      initFields();
    }
    private ResponseContext(boolean noInit) {}
    
    private static final ResponseContext defaultInstance;
    public static ResponseContext getDefaultInstance() {
      return defaultInstance;
    }
    
    public ResponseContext getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_ResponseContext_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_ResponseContext_fieldAccessorTable;
    }
    
    // optional int32 result = 1;
    public static final int RESULT_FIELD_NUMBER = 1;
    private boolean hasResult;
    private int result_ = 0;
    public boolean hasResult() { return hasResult; }
    public int getResult() { return result_; }
    
    private void initFields() {
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasResult()) {
        output.writeInt32(1, getResult());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasResult()) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, getResult());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.ResponseContext parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.ResponseContext prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.ResponseContext result;
      
      // Construct using com.kindroid.security.util.Appstore.ResponseContext.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.ResponseContext();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.ResponseContext internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.ResponseContext();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.ResponseContext.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.ResponseContext getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.ResponseContext.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.ResponseContext build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.ResponseContext buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.ResponseContext buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.ResponseContext returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.ResponseContext) {
          return mergeFrom((com.kindroid.security.util.Appstore.ResponseContext)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.ResponseContext other) {
        if (other == com.kindroid.security.util.Appstore.ResponseContext.getDefaultInstance()) return this;
        if (other.hasResult()) {
          setResult(other.getResult());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 8: {
              setResult(input.readInt32());
              break;
            }
          }
        }
      }
      
      
      // optional int32 result = 1;
      public boolean hasResult() {
        return result.hasResult();
      }
      public int getResult() {
        return result.getResult();
      }
      public Builder setResult(int value) {
        result.hasResult = true;
        result.result_ = value;
        return this;
      }
      public Builder clearResult() {
        result.hasResult = false;
        result.result_ = 0;
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.ResponseContext)
    }
    
    static {
      defaultInstance = new ResponseContext(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.ResponseContext)
  }
  
  public static final class Response extends
      com.google.protobuf.GeneratedMessage {
    // Use Response.newBuilder() to construct.
    private Response() {
      initFields();
    }
    private Response(boolean noInit) {}
    
    private static final Response defaultInstance;
    public static Response getDefaultInstance() {
      return defaultInstance;
    }
    
    public Response getDefaultInstanceForType() {
      return defaultInstance;
    }
    
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_Response_descriptor;
    }
    
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.kindroid.security.util.Appstore.internal_static_com_kindroid_security_util_Response_fieldAccessorTable;
    }
    
    // optional .com.kindroid.security.util.ResponseContext context = 1;
    public static final int CONTEXT_FIELD_NUMBER = 1;
    private boolean hasContext;
    private com.kindroid.security.util.Appstore.ResponseContext context_;
    public boolean hasContext() { return hasContext; }
    public com.kindroid.security.util.Appstore.ResponseContext getContext() { return context_; }
    
    // optional .com.kindroid.security.util.AppsResponse appsResponse = 3;
    public static final int APPSRESPONSE_FIELD_NUMBER = 3;
    private boolean hasAppsResponse;
    private com.kindroid.security.util.Appstore.AppsResponse appsResponse_;
    public boolean hasAppsResponse() { return hasAppsResponse; }
    public com.kindroid.security.util.Appstore.AppsResponse getAppsResponse() { return appsResponse_; }
    
    // optional .com.kindroid.security.util.GetImageResponse imageResponse = 5;
    public static final int IMAGERESPONSE_FIELD_NUMBER = 5;
    private boolean hasImageResponse;
    private com.kindroid.security.util.Appstore.GetImageResponse imageResponse_;
    public boolean hasImageResponse() { return hasImageResponse; }
    public com.kindroid.security.util.Appstore.GetImageResponse getImageResponse() { return imageResponse_; }
    
    // optional .com.kindroid.security.util.HotKeyWordsResponse hotkeyWordsResponse = 12;
    public static final int HOTKEYWORDSRESPONSE_FIELD_NUMBER = 12;
    private boolean hasHotkeyWordsResponse;
    private com.kindroid.security.util.Appstore.HotKeyWordsResponse hotkeyWordsResponse_;
    public boolean hasHotkeyWordsResponse() { return hasHotkeyWordsResponse; }
    public com.kindroid.security.util.Appstore.HotKeyWordsResponse getHotkeyWordsResponse() { return hotkeyWordsResponse_; }
    
    // optional .com.kindroid.security.util.IconResponse iconResponse = 20;
    public static final int ICONRESPONSE_FIELD_NUMBER = 20;
    private boolean hasIconResponse;
    private com.kindroid.security.util.Appstore.IconResponse iconResponse_;
    public boolean hasIconResponse() { return hasIconResponse; }
    public com.kindroid.security.util.Appstore.IconResponse getIconResponse() { return iconResponse_; }
    
    private void initFields() {
      context_ = com.kindroid.security.util.Appstore.ResponseContext.getDefaultInstance();
      appsResponse_ = com.kindroid.security.util.Appstore.AppsResponse.getDefaultInstance();
      imageResponse_ = com.kindroid.security.util.Appstore.GetImageResponse.getDefaultInstance();
      hotkeyWordsResponse_ = com.kindroid.security.util.Appstore.HotKeyWordsResponse.getDefaultInstance();
      iconResponse_ = com.kindroid.security.util.Appstore.IconResponse.getDefaultInstance();
    }
    public final boolean isInitialized() {
      return true;
    }
    
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (hasContext()) {
        output.writeMessage(1, getContext());
      }
      if (hasAppsResponse()) {
        output.writeMessage(3, getAppsResponse());
      }
      if (hasImageResponse()) {
        output.writeMessage(5, getImageResponse());
      }
      if (hasHotkeyWordsResponse()) {
        output.writeMessage(12, getHotkeyWordsResponse());
      }
      if (hasIconResponse()) {
        output.writeMessage(20, getIconResponse());
      }
      getUnknownFields().writeTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;
    
      size = 0;
      if (hasContext()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getContext());
      }
      if (hasAppsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getAppsResponse());
      }
      if (hasImageResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getImageResponse());
      }
      if (hasHotkeyWordsResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(12, getHotkeyWordsResponse());
      }
      if (hasIconResponse()) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, getIconResponse());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }
    
    public static com.kindroid.security.util.Appstore.Response parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return newBuilder().mergeFrom(data, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.Response parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      Builder builder = newBuilder();
      if (builder.mergeDelimitedFrom(input, extensionRegistry)) {
        return builder.buildParsed();
      } else {
        return null;
      }
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input).buildParsed();
    }
    public static com.kindroid.security.util.Appstore.Response parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return newBuilder().mergeFrom(input, extensionRegistry)
               .buildParsed();
    }
    
    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.kindroid.security.util.Appstore.Response prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }
    
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> {
      private com.kindroid.security.util.Appstore.Response result;
      
      // Construct using com.kindroid.security.util.Appstore.Response.newBuilder()
      private Builder() {}
      
      private static Builder create() {
        Builder builder = new Builder();
        builder.result = new com.kindroid.security.util.Appstore.Response();
        return builder;
      }
      
      protected com.kindroid.security.util.Appstore.Response internalGetResult() {
        return result;
      }
      
      public Builder clear() {
        if (result == null) {
          throw new IllegalStateException(
            "Cannot call clear() after build().");
        }
        result = new com.kindroid.security.util.Appstore.Response();
        return this;
      }
      
      public Builder clone() {
        return create().mergeFrom(result);
      }
      
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.kindroid.security.util.Appstore.Response.getDescriptor();
      }
      
      public com.kindroid.security.util.Appstore.Response getDefaultInstanceForType() {
        return com.kindroid.security.util.Appstore.Response.getDefaultInstance();
      }
      
      public boolean isInitialized() {
        return result.isInitialized();
      }
      public com.kindroid.security.util.Appstore.Response build() {
        if (result != null && !isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return buildPartial();
      }
      
      private com.kindroid.security.util.Appstore.Response buildParsed()
          throws com.google.protobuf.InvalidProtocolBufferException {
        if (!isInitialized()) {
          throw newUninitializedMessageException(
            result).asInvalidProtocolBufferException();
        }
        return buildPartial();
      }
      
      public com.kindroid.security.util.Appstore.Response buildPartial() {
        if (result == null) {
          throw new IllegalStateException(
            "build() has already been called on this Builder.");
        }
        com.kindroid.security.util.Appstore.Response returnMe = result;
        result = null;
        return returnMe;
      }
      
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.kindroid.security.util.Appstore.Response) {
          return mergeFrom((com.kindroid.security.util.Appstore.Response)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }
      
      public Builder mergeFrom(com.kindroid.security.util.Appstore.Response other) {
        if (other == com.kindroid.security.util.Appstore.Response.getDefaultInstance()) return this;
        if (other.hasContext()) {
          mergeContext(other.getContext());
        }
        if (other.hasAppsResponse()) {
          mergeAppsResponse(other.getAppsResponse());
        }
        if (other.hasImageResponse()) {
          mergeImageResponse(other.getImageResponse());
        }
        if (other.hasHotkeyWordsResponse()) {
          mergeHotkeyWordsResponse(other.getHotkeyWordsResponse());
        }
        if (other.hasIconResponse()) {
          mergeIconResponse(other.getIconResponse());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }
      
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder(
            this.getUnknownFields());
        while (true) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              this.setUnknownFields(unknownFields.build());
              return this;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                this.setUnknownFields(unknownFields.build());
                return this;
              }
              break;
            }
            case 10: {
              com.kindroid.security.util.Appstore.ResponseContext.Builder subBuilder = com.kindroid.security.util.Appstore.ResponseContext.newBuilder();
              if (hasContext()) {
                subBuilder.mergeFrom(getContext());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setContext(subBuilder.buildPartial());
              break;
            }
            case 26: {
              com.kindroid.security.util.Appstore.AppsResponse.Builder subBuilder = com.kindroid.security.util.Appstore.AppsResponse.newBuilder();
              if (hasAppsResponse()) {
                subBuilder.mergeFrom(getAppsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setAppsResponse(subBuilder.buildPartial());
              break;
            }
            case 42: {
              com.kindroid.security.util.Appstore.GetImageResponse.Builder subBuilder = com.kindroid.security.util.Appstore.GetImageResponse.newBuilder();
              if (hasImageResponse()) {
                subBuilder.mergeFrom(getImageResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setImageResponse(subBuilder.buildPartial());
              break;
            }
            case 98: {
              com.kindroid.security.util.Appstore.HotKeyWordsResponse.Builder subBuilder = com.kindroid.security.util.Appstore.HotKeyWordsResponse.newBuilder();
              if (hasHotkeyWordsResponse()) {
                subBuilder.mergeFrom(getHotkeyWordsResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setHotkeyWordsResponse(subBuilder.buildPartial());
              break;
            }
            case 162: {
              com.kindroid.security.util.Appstore.IconResponse.Builder subBuilder = com.kindroid.security.util.Appstore.IconResponse.newBuilder();
              if (hasIconResponse()) {
                subBuilder.mergeFrom(getIconResponse());
              }
              input.readMessage(subBuilder, extensionRegistry);
              setIconResponse(subBuilder.buildPartial());
              break;
            }
          }
        }
      }
      
      
      // optional .com.kindroid.security.util.ResponseContext context = 1;
      public boolean hasContext() {
        return result.hasContext();
      }
      public com.kindroid.security.util.Appstore.ResponseContext getContext() {
        return result.getContext();
      }
      public Builder setContext(com.kindroid.security.util.Appstore.ResponseContext value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasContext = true;
        result.context_ = value;
        return this;
      }
      public Builder setContext(com.kindroid.security.util.Appstore.ResponseContext.Builder builderForValue) {
        result.hasContext = true;
        result.context_ = builderForValue.build();
        return this;
      }
      public Builder mergeContext(com.kindroid.security.util.Appstore.ResponseContext value) {
        if (result.hasContext() &&
            result.context_ != com.kindroid.security.util.Appstore.ResponseContext.getDefaultInstance()) {
          result.context_ =
            com.kindroid.security.util.Appstore.ResponseContext.newBuilder(result.context_).mergeFrom(value).buildPartial();
        } else {
          result.context_ = value;
        }
        result.hasContext = true;
        return this;
      }
      public Builder clearContext() {
        result.hasContext = false;
        result.context_ = com.kindroid.security.util.Appstore.ResponseContext.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.AppsResponse appsResponse = 3;
      public boolean hasAppsResponse() {
        return result.hasAppsResponse();
      }
      public com.kindroid.security.util.Appstore.AppsResponse getAppsResponse() {
        return result.getAppsResponse();
      }
      public Builder setAppsResponse(com.kindroid.security.util.Appstore.AppsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasAppsResponse = true;
        result.appsResponse_ = value;
        return this;
      }
      public Builder setAppsResponse(com.kindroid.security.util.Appstore.AppsResponse.Builder builderForValue) {
        result.hasAppsResponse = true;
        result.appsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeAppsResponse(com.kindroid.security.util.Appstore.AppsResponse value) {
        if (result.hasAppsResponse() &&
            result.appsResponse_ != com.kindroid.security.util.Appstore.AppsResponse.getDefaultInstance()) {
          result.appsResponse_ =
            com.kindroid.security.util.Appstore.AppsResponse.newBuilder(result.appsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.appsResponse_ = value;
        }
        result.hasAppsResponse = true;
        return this;
      }
      public Builder clearAppsResponse() {
        result.hasAppsResponse = false;
        result.appsResponse_ = com.kindroid.security.util.Appstore.AppsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.GetImageResponse imageResponse = 5;
      public boolean hasImageResponse() {
        return result.hasImageResponse();
      }
      public com.kindroid.security.util.Appstore.GetImageResponse getImageResponse() {
        return result.getImageResponse();
      }
      public Builder setImageResponse(com.kindroid.security.util.Appstore.GetImageResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasImageResponse = true;
        result.imageResponse_ = value;
        return this;
      }
      public Builder setImageResponse(com.kindroid.security.util.Appstore.GetImageResponse.Builder builderForValue) {
        result.hasImageResponse = true;
        result.imageResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeImageResponse(com.kindroid.security.util.Appstore.GetImageResponse value) {
        if (result.hasImageResponse() &&
            result.imageResponse_ != com.kindroid.security.util.Appstore.GetImageResponse.getDefaultInstance()) {
          result.imageResponse_ =
            com.kindroid.security.util.Appstore.GetImageResponse.newBuilder(result.imageResponse_).mergeFrom(value).buildPartial();
        } else {
          result.imageResponse_ = value;
        }
        result.hasImageResponse = true;
        return this;
      }
      public Builder clearImageResponse() {
        result.hasImageResponse = false;
        result.imageResponse_ = com.kindroid.security.util.Appstore.GetImageResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.HotKeyWordsResponse hotkeyWordsResponse = 12;
      public boolean hasHotkeyWordsResponse() {
        return result.hasHotkeyWordsResponse();
      }
      public com.kindroid.security.util.Appstore.HotKeyWordsResponse getHotkeyWordsResponse() {
        return result.getHotkeyWordsResponse();
      }
      public Builder setHotkeyWordsResponse(com.kindroid.security.util.Appstore.HotKeyWordsResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasHotkeyWordsResponse = true;
        result.hotkeyWordsResponse_ = value;
        return this;
      }
      public Builder setHotkeyWordsResponse(com.kindroid.security.util.Appstore.HotKeyWordsResponse.Builder builderForValue) {
        result.hasHotkeyWordsResponse = true;
        result.hotkeyWordsResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeHotkeyWordsResponse(com.kindroid.security.util.Appstore.HotKeyWordsResponse value) {
        if (result.hasHotkeyWordsResponse() &&
            result.hotkeyWordsResponse_ != com.kindroid.security.util.Appstore.HotKeyWordsResponse.getDefaultInstance()) {
          result.hotkeyWordsResponse_ =
            com.kindroid.security.util.Appstore.HotKeyWordsResponse.newBuilder(result.hotkeyWordsResponse_).mergeFrom(value).buildPartial();
        } else {
          result.hotkeyWordsResponse_ = value;
        }
        result.hasHotkeyWordsResponse = true;
        return this;
      }
      public Builder clearHotkeyWordsResponse() {
        result.hasHotkeyWordsResponse = false;
        result.hotkeyWordsResponse_ = com.kindroid.security.util.Appstore.HotKeyWordsResponse.getDefaultInstance();
        return this;
      }
      
      // optional .com.kindroid.security.util.IconResponse iconResponse = 20;
      public boolean hasIconResponse() {
        return result.hasIconResponse();
      }
      public com.kindroid.security.util.Appstore.IconResponse getIconResponse() {
        return result.getIconResponse();
      }
      public Builder setIconResponse(com.kindroid.security.util.Appstore.IconResponse value) {
        if (value == null) {
          throw new NullPointerException();
        }
        result.hasIconResponse = true;
        result.iconResponse_ = value;
        return this;
      }
      public Builder setIconResponse(com.kindroid.security.util.Appstore.IconResponse.Builder builderForValue) {
        result.hasIconResponse = true;
        result.iconResponse_ = builderForValue.build();
        return this;
      }
      public Builder mergeIconResponse(com.kindroid.security.util.Appstore.IconResponse value) {
        if (result.hasIconResponse() &&
            result.iconResponse_ != com.kindroid.security.util.Appstore.IconResponse.getDefaultInstance()) {
          result.iconResponse_ =
            com.kindroid.security.util.Appstore.IconResponse.newBuilder(result.iconResponse_).mergeFrom(value).buildPartial();
        } else {
          result.iconResponse_ = value;
        }
        result.hasIconResponse = true;
        return this;
      }
      public Builder clearIconResponse() {
        result.hasIconResponse = false;
        result.iconResponse_ = com.kindroid.security.util.Appstore.IconResponse.getDefaultInstance();
        return this;
      }
      
      // @@protoc_insertion_point(builder_scope:com.kindroid.security.util.Response)
    }
    
    static {
      defaultInstance = new Response(true);
      com.kindroid.security.util.Appstore.internalForceInit();
      defaultInstance.initFields();
    }
    
    // @@protoc_insertion_point(class_scope:com.kindroid.security.util.Response)
  }
  
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_App_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_App_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_AppsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_AppsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_AppsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_AppsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_GetImageRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_GetImageRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_GetImageResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_GetImageResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_HotKeyWordsRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_HotKeyWordsRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_HotKeyWordsResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_HotKeyWordsResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Icon_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Icon_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_IconRequest_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_IconRequest_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_IconResponse_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_IconResponse_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_RequestContext_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_RequestContext_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Request_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Request_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_ResponseContext_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_ResponseContext_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_kindroid_security_util_Response_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_kindroid_security_util_Response_fieldAccessorTable;
  
  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\016appstore.proto\022\032com.kindroid.security." +
      "util\"\364\003\n\003App\022\n\n\002id\030\001 \001(\t\022\r\n\005title\030\002 \001(\t\022" +
      "\016\n\006author\030\003 \001(\t\022\023\n\013versioncode\030\004 \001(\005\022\023\n\013" +
      "versionname\030\005 \001(\t\022\016\n\006rating\030\006 \001(\t\022\024\n\014rat" +
      "ingsCount\030\007 \001(\005\022\r\n\005price\030\010 \001(\t\022\021\n\tpriceU" +
      "nit\030\t \001(\005\022\023\n\013description\030\n \001(\t\022\026\n\016downlo" +
      "adsCount\030\013 \001(\005\022 \n\030lastmonth_downloadscou" +
      "nt\030\014 \001(\005\022\037\n\027lastweek_downloadscount\030\r \001(" +
      "\005\022\024\n\014permissionId\030\016 \003(\t\022\023\n\013installSize\030\017" +
      " \001(\005\022\023\n\013packageName\030\020 \001(\t\022\020\n\010category\030\021 ",
      "\001(\t\022\024\n\014contactEmail\030\022 \001(\t\022\024\n\014contactPhon" +
      "e\030\023 \001(\t\022\026\n\016contactWebsite\030\024 \001(\t\022\030\n\020scree" +
      "nshotsCount\030\025 \001(\005\022\020\n\010iconData\030\026 \001(\014\022\020\n\010p" +
      "athguid\030\027 \001(\t\022\014\n\004rate\030\030 \001(\005\"\261\002\n\013AppsRequ" +
      "est\022\r\n\005query\030\001 \001(\t\022\023\n\013packagename\030\002 \001(\t\022" +
      "\022\n\ncategoryId\030\003 \001(\t\022\r\n\005appId\030\004 \001(\t\022\022\n\nca" +
      "pability\030\005 \001(\004\022\030\n\020withExtendedInfo\030\006 \001(\010" +
      "\022\021\n\torderType\030\007 \001(\005\022G\n\010viewType\030\010 \001(\01620." +
      "com.kindroid.security.util.AppsRequest.V" +
      "iewType:\003ALL\022\022\n\nstartIndex\030\t \001(\004\022\024\n\014entr",
      "iesCount\030\n \001(\005\"\'\n\010ViewType\022\007\n\003ALL\020\000\022\010\n\004F" +
      "REE\020\001\022\010\n\004PAID\020\002\"R\n\014AppsResponse\022,\n\003app\030\001" +
      " \003(\0132\037.com.kindroid.security.util.App\022\024\n" +
      "\014entriesCount\030\002 \001(\005\"\305\001\n\017GetImageRequest\022" +
      "\r\n\005appId\030\001 \001(\t\022M\n\nimageUsage\030\003 \001(\01629.com" +
      ".kindroid.security.util.GetImageRequest." +
      "AppImageUsage\022\017\n\007imageId\030\004 \001(\t\"C\n\rAppIma" +
      "geUsage\022\010\n\004ICON\020\000\022\016\n\nSCREENSHOT\020\001\022\030\n\024SCR" +
      "EENSHOT_THUMBNAIL\020\002\"%\n\020GetImageResponse\022" +
      "\021\n\timageData\030\001 \001(\014\"\024\n\022HotKeyWordsRequest",
      "\"#\n\023HotKeyWordsResponse\022\014\n\004word\030\001 \003(\t\" \n" +
      "\004Icon\022\n\n\002id\030\001 \001(\005\022\014\n\004icon\030\002 \001(\014\"\177\n\013IconR" +
      "equest\022\n\n\002id\030\001 \003(\005\022B\n\010iconType\030\004 \001(\01620.c" +
      "om.kindroid.security.util.IconRequest.Ic" +
      "onType\" \n\010IconType\022\013\n\007ACCOUNT\020\002\022\007\n\003APP\020\003" +
      "\"T\n\014IconResponse\022.\n\004icon\030\001 \003(\0132 .com.kin" +
      "droid.security.util.Icon\022\024\n\014entriesCount" +
      "\030\002 \001(\005\"\247\001\n\016RequestContext\022\021\n\tauthToken\030\001" +
      " \001(\t\022\025\n\rmarketVersion\030\002 \001(\t\022\024\n\014osSdkVers" +
      "ion\030\003 \001(\t\022\024\n\014userLanguage\030\004 \001(\t\022\023\n\013userC",
      "ountry\030\005 \001(\t\022\020\n\010deviceid\030\006 \001(\t\022\030\n\020screen" +
      "Resolution\030\007 \001(\t\"\321\002\n\007Request\022;\n\007context\030" +
      "\001 \001(\0132*.com.kindroid.security.util.Reque" +
      "stContext\022<\n\013appsRequest\030\004 \001(\0132\'.com.kin" +
      "droid.security.util.AppsRequest\022A\n\014image" +
      "Request\030\006 \001(\0132+.com.kindroid.security.ut" +
      "il.GetImageRequest\022J\n\022hotkeyWordsRequest" +
      "\030\014 \001(\0132..com.kindroid.security.util.HotK" +
      "eyWordsRequest\022<\n\013iconRequest\030\030 \001(\0132\'.co" +
      "m.kindroid.security.util.IconRequest\"!\n\017",
      "ResponseContext\022\016\n\006result\030\001 \001(\005\"\333\002\n\010Resp" +
      "onse\022<\n\007context\030\001 \001(\0132+.com.kindroid.sec" +
      "urity.util.ResponseContext\022>\n\014appsRespon" +
      "se\030\003 \001(\0132(.com.kindroid.security.util.Ap" +
      "psResponse\022C\n\rimageResponse\030\005 \001(\0132,.com." +
      "kindroid.security.util.GetImageResponse\022" +
      "L\n\023hotkeyWordsResponse\030\014 \001(\0132/.com.kindr" +
      "oid.security.util.HotKeyWordsResponse\022>\n" +
      "\014iconResponse\030\024 \001(\0132(.com.kindroid.secur" +
      "ity.util.IconResponseB\034\n\032com.kindroid.se",
      "curity.util"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_kindroid_security_util_App_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_kindroid_security_util_App_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_App_descriptor,
              new java.lang.String[] { "Id", "Title", "Author", "Versioncode", "Versionname", "Rating", "RatingsCount", "Price", "PriceUnit", "Description", "DownloadsCount", "LastmonthDownloadscount", "LastweekDownloadscount", "PermissionId", "InstallSize", "PackageName", "Category", "ContactEmail", "ContactPhone", "ContactWebsite", "ScreenshotsCount", "IconData", "Pathguid", "Rate", },
              com.kindroid.security.util.Appstore.App.class,
              com.kindroid.security.util.Appstore.App.Builder.class);
          internal_static_com_kindroid_security_util_AppsRequest_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_kindroid_security_util_AppsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_AppsRequest_descriptor,
              new java.lang.String[] { "Query", "Packagename", "CategoryId", "AppId", "Capability", "WithExtendedInfo", "OrderType", "ViewType", "StartIndex", "EntriesCount", },
              com.kindroid.security.util.Appstore.AppsRequest.class,
              com.kindroid.security.util.Appstore.AppsRequest.Builder.class);
          internal_static_com_kindroid_security_util_AppsResponse_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_kindroid_security_util_AppsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_AppsResponse_descriptor,
              new java.lang.String[] { "App", "EntriesCount", },
              com.kindroid.security.util.Appstore.AppsResponse.class,
              com.kindroid.security.util.Appstore.AppsResponse.Builder.class);
          internal_static_com_kindroid_security_util_GetImageRequest_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_kindroid_security_util_GetImageRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_GetImageRequest_descriptor,
              new java.lang.String[] { "AppId", "ImageUsage", "ImageId", },
              com.kindroid.security.util.Appstore.GetImageRequest.class,
              com.kindroid.security.util.Appstore.GetImageRequest.Builder.class);
          internal_static_com_kindroid_security_util_GetImageResponse_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_kindroid_security_util_GetImageResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_GetImageResponse_descriptor,
              new java.lang.String[] { "ImageData", },
              com.kindroid.security.util.Appstore.GetImageResponse.class,
              com.kindroid.security.util.Appstore.GetImageResponse.Builder.class);
          internal_static_com_kindroid_security_util_HotKeyWordsRequest_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_kindroid_security_util_HotKeyWordsRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_HotKeyWordsRequest_descriptor,
              new java.lang.String[] { },
              com.kindroid.security.util.Appstore.HotKeyWordsRequest.class,
              com.kindroid.security.util.Appstore.HotKeyWordsRequest.Builder.class);
          internal_static_com_kindroid_security_util_HotKeyWordsResponse_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_kindroid_security_util_HotKeyWordsResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_HotKeyWordsResponse_descriptor,
              new java.lang.String[] { "Word", },
              com.kindroid.security.util.Appstore.HotKeyWordsResponse.class,
              com.kindroid.security.util.Appstore.HotKeyWordsResponse.Builder.class);
          internal_static_com_kindroid_security_util_Icon_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_kindroid_security_util_Icon_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Icon_descriptor,
              new java.lang.String[] { "Id", "Icon", },
              com.kindroid.security.util.Appstore.Icon.class,
              com.kindroid.security.util.Appstore.Icon.Builder.class);
          internal_static_com_kindroid_security_util_IconRequest_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_kindroid_security_util_IconRequest_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_IconRequest_descriptor,
              new java.lang.String[] { "Id", "IconType", },
              com.kindroid.security.util.Appstore.IconRequest.class,
              com.kindroid.security.util.Appstore.IconRequest.Builder.class);
          internal_static_com_kindroid_security_util_IconResponse_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_kindroid_security_util_IconResponse_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_IconResponse_descriptor,
              new java.lang.String[] { "Icon", "EntriesCount", },
              com.kindroid.security.util.Appstore.IconResponse.class,
              com.kindroid.security.util.Appstore.IconResponse.Builder.class);
          internal_static_com_kindroid_security_util_RequestContext_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_kindroid_security_util_RequestContext_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_RequestContext_descriptor,
              new java.lang.String[] { "AuthToken", "MarketVersion", "OsSdkVersion", "UserLanguage", "UserCountry", "Deviceid", "ScreenResolution", },
              com.kindroid.security.util.Appstore.RequestContext.class,
              com.kindroid.security.util.Appstore.RequestContext.Builder.class);
          internal_static_com_kindroid_security_util_Request_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_kindroid_security_util_Request_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Request_descriptor,
              new java.lang.String[] { "Context", "AppsRequest", "ImageRequest", "HotkeyWordsRequest", "IconRequest", },
              com.kindroid.security.util.Appstore.Request.class,
              com.kindroid.security.util.Appstore.Request.Builder.class);
          internal_static_com_kindroid_security_util_ResponseContext_descriptor =
            getDescriptor().getMessageTypes().get(12);
          internal_static_com_kindroid_security_util_ResponseContext_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_ResponseContext_descriptor,
              new java.lang.String[] { "Result", },
              com.kindroid.security.util.Appstore.ResponseContext.class,
              com.kindroid.security.util.Appstore.ResponseContext.Builder.class);
          internal_static_com_kindroid_security_util_Response_descriptor =
            getDescriptor().getMessageTypes().get(13);
          internal_static_com_kindroid_security_util_Response_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_kindroid_security_util_Response_descriptor,
              new java.lang.String[] { "Context", "AppsResponse", "ImageResponse", "HotkeyWordsResponse", "IconResponse", },
              com.kindroid.security.util.Appstore.Response.class,
              com.kindroid.security.util.Appstore.Response.Builder.class);
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }
  
  public static void internalForceInit() {}
  
  // @@protoc_insertion_point(outer_class_scope)
}
